// Code generated by protoc-gen-go. DO NOT EDIT.
// source: master.proto

/*
Package mesos_v1_master is a generated protocol buffer package.

It is generated from these files:
	master.proto

It has these top-level messages:
	Call
	Response
	Event
*/
package mesos_v1_master

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import mesos_v1 "github.com/mesos/go-proto/mesos/v1"
import mesos_v1_maintenance "github.com/mesos/go-proto/mesos/v1/maintenance"
import mesos_v1_quota "github.com/mesos/go-proto/mesos/v1/quota"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Call_Type int32

const (
	// If a call of type `Call::FOO` requires additional parameters they can be
	// included in the corresponding `Call::Foo` message. Similarly, if a call
	// receives a synchronous response it will be returned as a `Response`
	// message of type `Response::FOO`. Currently all calls except
	// `Call::SUBSCRIBE` receive synchronous responses; `Call::SUBSCRIBE` returns
	// a streaming response of `Event`.
	Call_UNKNOWN             Call_Type = 0
	Call_GET_HEALTH          Call_Type = 1
	Call_GET_FLAGS           Call_Type = 2
	Call_GET_VERSION         Call_Type = 3
	Call_GET_METRICS         Call_Type = 4
	Call_GET_LOGGING_LEVEL   Call_Type = 5
	Call_SET_LOGGING_LEVEL   Call_Type = 6
	Call_LIST_FILES          Call_Type = 7
	Call_READ_FILE           Call_Type = 8
	Call_GET_STATE           Call_Type = 9
	Call_GET_AGENTS          Call_Type = 10
	Call_GET_FRAMEWORKS      Call_Type = 11
	Call_GET_EXECUTORS       Call_Type = 12
	Call_GET_TASKS           Call_Type = 13
	Call_GET_ROLES           Call_Type = 14
	Call_GET_WEIGHTS         Call_Type = 15
	Call_UPDATE_WEIGHTS      Call_Type = 16
	Call_GET_MASTER          Call_Type = 17
	Call_SUBSCRIBE           Call_Type = 18
	Call_RESERVE_RESOURCES   Call_Type = 19
	Call_UNRESERVE_RESOURCES Call_Type = 20
	Call_CREATE_VOLUMES      Call_Type = 21
	Call_DESTROY_VOLUMES     Call_Type = 22
	// Retrieves the cluster's maintenance status.
	Call_GET_MAINTENANCE_STATUS Call_Type = 23
	// Retrieves the cluster's maintenance schedule.
	Call_GET_MAINTENANCE_SCHEDULE    Call_Type = 24
	Call_UPDATE_MAINTENANCE_SCHEDULE Call_Type = 25
	Call_START_MAINTENANCE           Call_Type = 26
	Call_STOP_MAINTENANCE            Call_Type = 27
	Call_GET_QUOTA                   Call_Type = 28
	Call_SET_QUOTA                   Call_Type = 29
	Call_REMOVE_QUOTA                Call_Type = 30
	Call_TEARDOWN                    Call_Type = 31
	Call_MARK_AGENT_GONE             Call_Type = 32
)

var Call_Type_name = map[int32]string{
	0:  "UNKNOWN",
	1:  "GET_HEALTH",
	2:  "GET_FLAGS",
	3:  "GET_VERSION",
	4:  "GET_METRICS",
	5:  "GET_LOGGING_LEVEL",
	6:  "SET_LOGGING_LEVEL",
	7:  "LIST_FILES",
	8:  "READ_FILE",
	9:  "GET_STATE",
	10: "GET_AGENTS",
	11: "GET_FRAMEWORKS",
	12: "GET_EXECUTORS",
	13: "GET_TASKS",
	14: "GET_ROLES",
	15: "GET_WEIGHTS",
	16: "UPDATE_WEIGHTS",
	17: "GET_MASTER",
	18: "SUBSCRIBE",
	19: "RESERVE_RESOURCES",
	20: "UNRESERVE_RESOURCES",
	21: "CREATE_VOLUMES",
	22: "DESTROY_VOLUMES",
	23: "GET_MAINTENANCE_STATUS",
	24: "GET_MAINTENANCE_SCHEDULE",
	25: "UPDATE_MAINTENANCE_SCHEDULE",
	26: "START_MAINTENANCE",
	27: "STOP_MAINTENANCE",
	28: "GET_QUOTA",
	29: "SET_QUOTA",
	30: "REMOVE_QUOTA",
	31: "TEARDOWN",
	32: "MARK_AGENT_GONE",
}
var Call_Type_value = map[string]int32{
	"UNKNOWN":                     0,
	"GET_HEALTH":                  1,
	"GET_FLAGS":                   2,
	"GET_VERSION":                 3,
	"GET_METRICS":                 4,
	"GET_LOGGING_LEVEL":           5,
	"SET_LOGGING_LEVEL":           6,
	"LIST_FILES":                  7,
	"READ_FILE":                   8,
	"GET_STATE":                   9,
	"GET_AGENTS":                  10,
	"GET_FRAMEWORKS":              11,
	"GET_EXECUTORS":               12,
	"GET_TASKS":                   13,
	"GET_ROLES":                   14,
	"GET_WEIGHTS":                 15,
	"UPDATE_WEIGHTS":              16,
	"GET_MASTER":                  17,
	"SUBSCRIBE":                   18,
	"RESERVE_RESOURCES":           19,
	"UNRESERVE_RESOURCES":         20,
	"CREATE_VOLUMES":              21,
	"DESTROY_VOLUMES":             22,
	"GET_MAINTENANCE_STATUS":      23,
	"GET_MAINTENANCE_SCHEDULE":    24,
	"UPDATE_MAINTENANCE_SCHEDULE": 25,
	"START_MAINTENANCE":           26,
	"STOP_MAINTENANCE":            27,
	"GET_QUOTA":                   28,
	"SET_QUOTA":                   29,
	"REMOVE_QUOTA":                30,
	"TEARDOWN":                    31,
	"MARK_AGENT_GONE":             32,
}

func (x Call_Type) Enum() *Call_Type {
	p := new(Call_Type)
	*p = x
	return p
}
func (x Call_Type) String() string {
	return proto.EnumName(Call_Type_name, int32(x))
}
func (x *Call_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Call_Type_value, data, "Call_Type")
	if err != nil {
		return err
	}
	*x = Call_Type(value)
	return nil
}
func (Call_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

// Each of the responses of type `FOO` corresponds to `Foo` message below.
type Response_Type int32

const (
	Response_UNKNOWN                  Response_Type = 0
	Response_GET_HEALTH               Response_Type = 1
	Response_GET_FLAGS                Response_Type = 2
	Response_GET_VERSION              Response_Type = 3
	Response_GET_METRICS              Response_Type = 4
	Response_GET_LOGGING_LEVEL        Response_Type = 5
	Response_LIST_FILES               Response_Type = 6
	Response_READ_FILE                Response_Type = 7
	Response_GET_STATE                Response_Type = 8
	Response_GET_AGENTS               Response_Type = 9
	Response_GET_FRAMEWORKS           Response_Type = 10
	Response_GET_EXECUTORS            Response_Type = 11
	Response_GET_TASKS                Response_Type = 12
	Response_GET_ROLES                Response_Type = 13
	Response_GET_WEIGHTS              Response_Type = 14
	Response_GET_MASTER               Response_Type = 15
	Response_GET_MAINTENANCE_STATUS   Response_Type = 16
	Response_GET_MAINTENANCE_SCHEDULE Response_Type = 17
	Response_GET_QUOTA                Response_Type = 18
)

var Response_Type_name = map[int32]string{
	0:  "UNKNOWN",
	1:  "GET_HEALTH",
	2:  "GET_FLAGS",
	3:  "GET_VERSION",
	4:  "GET_METRICS",
	5:  "GET_LOGGING_LEVEL",
	6:  "LIST_FILES",
	7:  "READ_FILE",
	8:  "GET_STATE",
	9:  "GET_AGENTS",
	10: "GET_FRAMEWORKS",
	11: "GET_EXECUTORS",
	12: "GET_TASKS",
	13: "GET_ROLES",
	14: "GET_WEIGHTS",
	15: "GET_MASTER",
	16: "GET_MAINTENANCE_STATUS",
	17: "GET_MAINTENANCE_SCHEDULE",
	18: "GET_QUOTA",
}
var Response_Type_value = map[string]int32{
	"UNKNOWN":                  0,
	"GET_HEALTH":               1,
	"GET_FLAGS":                2,
	"GET_VERSION":              3,
	"GET_METRICS":              4,
	"GET_LOGGING_LEVEL":        5,
	"LIST_FILES":               6,
	"READ_FILE":                7,
	"GET_STATE":                8,
	"GET_AGENTS":               9,
	"GET_FRAMEWORKS":           10,
	"GET_EXECUTORS":            11,
	"GET_TASKS":                12,
	"GET_ROLES":                13,
	"GET_WEIGHTS":              14,
	"GET_MASTER":               15,
	"GET_MAINTENANCE_STATUS":   16,
	"GET_MAINTENANCE_SCHEDULE": 17,
	"GET_QUOTA":                18,
}

func (x Response_Type) Enum() *Response_Type {
	p := new(Response_Type)
	*p = x
	return p
}
func (x Response_Type) String() string {
	return proto.EnumName(Response_Type_name, int32(x))
}
func (x *Response_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Response_Type_value, data, "Response_Type")
	if err != nil {
		return err
	}
	*x = Response_Type(value)
	return nil
}
func (Response_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

type Event_Type int32

const (
	Event_UNKNOWN           Event_Type = 0
	Event_SUBSCRIBED        Event_Type = 1
	Event_TASK_ADDED        Event_Type = 2
	Event_TASK_UPDATED      Event_Type = 3
	Event_AGENT_ADDED       Event_Type = 4
	Event_AGENT_REMOVED     Event_Type = 5
	Event_FRAMEWORK_ADDED   Event_Type = 6
	Event_FRAMEWORK_UPDATED Event_Type = 7
	Event_FRAMEWORK_REMOVED Event_Type = 8
	// Periodic message sent by the master to the subscriber according to
	// 'Subscribed.heartbeat_interval_seconds'. If the subscriber does not
	// receive any events (including heartbeats) for an extended period of
	// time (e.g., 5 x heartbeat_interval_seconds), it is likely that the
	// connection is lost or there is a network partition. In that case,
	// the subscriber should close the existing subscription connection and
	// resubscribe using a backoff strategy.
	Event_HEARTBEAT Event_Type = 9
)

var Event_Type_name = map[int32]string{
	0: "UNKNOWN",
	1: "SUBSCRIBED",
	2: "TASK_ADDED",
	3: "TASK_UPDATED",
	4: "AGENT_ADDED",
	5: "AGENT_REMOVED",
	6: "FRAMEWORK_ADDED",
	7: "FRAMEWORK_UPDATED",
	8: "FRAMEWORK_REMOVED",
	9: "HEARTBEAT",
}
var Event_Type_value = map[string]int32{
	"UNKNOWN":           0,
	"SUBSCRIBED":        1,
	"TASK_ADDED":        2,
	"TASK_UPDATED":      3,
	"AGENT_ADDED":       4,
	"AGENT_REMOVED":     5,
	"FRAMEWORK_ADDED":   6,
	"FRAMEWORK_UPDATED": 7,
	"FRAMEWORK_REMOVED": 8,
	"HEARTBEAT":         9,
}

func (x Event_Type) Enum() *Event_Type {
	p := new(Event_Type)
	*p = x
	return p
}
func (x Event_Type) String() string {
	return proto.EnumName(Event_Type_name, int32(x))
}
func (x *Event_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Event_Type_value, data, "Event_Type")
	if err != nil {
		return err
	}
	*x = Event_Type(value)
	return nil
}
func (Event_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

// *
// Calls that can be sent to the v1 master API.
//
// A call is described using the standard protocol buffer "union"
// trick, see
// https://developers.google.com/protocol-buffers/docs/techniques#union.
type Call struct {
	Type                      *Call_Type                      `protobuf:"varint,1,opt,name=type,enum=mesos.v1.master.Call_Type" json:"type,omitempty"`
	GetMetrics                *Call_GetMetrics                `protobuf:"bytes,2,opt,name=get_metrics,json=get_metrics" json:"get_metrics,omitempty"`
	SetLoggingLevel           *Call_SetLoggingLevel           `protobuf:"bytes,3,opt,name=set_logging_level,json=set_logging_level" json:"set_logging_level,omitempty"`
	ListFiles                 *Call_ListFiles                 `protobuf:"bytes,4,opt,name=list_files,json=list_files" json:"list_files,omitempty"`
	ReadFile                  *Call_ReadFile                  `protobuf:"bytes,5,opt,name=read_file,json=read_file" json:"read_file,omitempty"`
	UpdateWeights             *Call_UpdateWeights             `protobuf:"bytes,6,opt,name=update_weights,json=update_weights" json:"update_weights,omitempty"`
	ReserveResources          *Call_ReserveResources          `protobuf:"bytes,7,opt,name=reserve_resources,json=reserve_resources" json:"reserve_resources,omitempty"`
	UnreserveResources        *Call_UnreserveResources        `protobuf:"bytes,8,opt,name=unreserve_resources,json=unreserve_resources" json:"unreserve_resources,omitempty"`
	CreateVolumes             *Call_CreateVolumes             `protobuf:"bytes,9,opt,name=create_volumes,json=create_volumes" json:"create_volumes,omitempty"`
	DestroyVolumes            *Call_DestroyVolumes            `protobuf:"bytes,10,opt,name=destroy_volumes,json=destroy_volumes" json:"destroy_volumes,omitempty"`
	UpdateMaintenanceSchedule *Call_UpdateMaintenanceSchedule `protobuf:"bytes,11,opt,name=update_maintenance_schedule,json=update_maintenance_schedule" json:"update_maintenance_schedule,omitempty"`
	StartMaintenance          *Call_StartMaintenance          `protobuf:"bytes,12,opt,name=start_maintenance,json=start_maintenance" json:"start_maintenance,omitempty"`
	StopMaintenance           *Call_StopMaintenance           `protobuf:"bytes,13,opt,name=stop_maintenance,json=stop_maintenance" json:"stop_maintenance,omitempty"`
	SetQuota                  *Call_SetQuota                  `protobuf:"bytes,14,opt,name=set_quota,json=set_quota" json:"set_quota,omitempty"`
	RemoveQuota               *Call_RemoveQuota               `protobuf:"bytes,15,opt,name=remove_quota,json=remove_quota" json:"remove_quota,omitempty"`
	Teardown                  *Call_Teardown                  `protobuf:"bytes,16,opt,name=teardown" json:"teardown,omitempty"`
	MarkAgentGone             *Call_MarkAgentGone             `protobuf:"bytes,17,opt,name=mark_agent_gone,json=mark_agent_gone" json:"mark_agent_gone,omitempty"`
	XXX_unrecognized          []byte                          `json:"-"`
}

func (m *Call) Reset()                    { *m = Call{} }
func (m *Call) String() string            { return proto.CompactTextString(m) }
func (*Call) ProtoMessage()               {}
func (*Call) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Call) GetType() Call_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Call_UNKNOWN
}

func (m *Call) GetGetMetrics() *Call_GetMetrics {
	if m != nil {
		return m.GetMetrics
	}
	return nil
}

func (m *Call) GetSetLoggingLevel() *Call_SetLoggingLevel {
	if m != nil {
		return m.SetLoggingLevel
	}
	return nil
}

func (m *Call) GetListFiles() *Call_ListFiles {
	if m != nil {
		return m.ListFiles
	}
	return nil
}

func (m *Call) GetReadFile() *Call_ReadFile {
	if m != nil {
		return m.ReadFile
	}
	return nil
}

func (m *Call) GetUpdateWeights() *Call_UpdateWeights {
	if m != nil {
		return m.UpdateWeights
	}
	return nil
}

func (m *Call) GetReserveResources() *Call_ReserveResources {
	if m != nil {
		return m.ReserveResources
	}
	return nil
}

func (m *Call) GetUnreserveResources() *Call_UnreserveResources {
	if m != nil {
		return m.UnreserveResources
	}
	return nil
}

func (m *Call) GetCreateVolumes() *Call_CreateVolumes {
	if m != nil {
		return m.CreateVolumes
	}
	return nil
}

func (m *Call) GetDestroyVolumes() *Call_DestroyVolumes {
	if m != nil {
		return m.DestroyVolumes
	}
	return nil
}

func (m *Call) GetUpdateMaintenanceSchedule() *Call_UpdateMaintenanceSchedule {
	if m != nil {
		return m.UpdateMaintenanceSchedule
	}
	return nil
}

func (m *Call) GetStartMaintenance() *Call_StartMaintenance {
	if m != nil {
		return m.StartMaintenance
	}
	return nil
}

func (m *Call) GetStopMaintenance() *Call_StopMaintenance {
	if m != nil {
		return m.StopMaintenance
	}
	return nil
}

func (m *Call) GetSetQuota() *Call_SetQuota {
	if m != nil {
		return m.SetQuota
	}
	return nil
}

func (m *Call) GetRemoveQuota() *Call_RemoveQuota {
	if m != nil {
		return m.RemoveQuota
	}
	return nil
}

func (m *Call) GetTeardown() *Call_Teardown {
	if m != nil {
		return m.Teardown
	}
	return nil
}

func (m *Call) GetMarkAgentGone() *Call_MarkAgentGone {
	if m != nil {
		return m.MarkAgentGone
	}
	return nil
}

// Provides a snapshot of the current metrics tracked by the master.
type Call_GetMetrics struct {
	// If set, `timeout` would be used to determines the maximum amount of time
	// the API will take to respond. If the timeout is exceeded, some metrics
	// may not be included in the response.
	Timeout          *mesos_v1.DurationInfo `protobuf:"bytes,1,opt,name=timeout" json:"timeout,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *Call_GetMetrics) Reset()                    { *m = Call_GetMetrics{} }
func (m *Call_GetMetrics) String() string            { return proto.CompactTextString(m) }
func (*Call_GetMetrics) ProtoMessage()               {}
func (*Call_GetMetrics) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

func (m *Call_GetMetrics) GetTimeout() *mesos_v1.DurationInfo {
	if m != nil {
		return m.Timeout
	}
	return nil
}

// Sets the logging verbosity level for a specified duration. Mesos uses
// [glog](https://github.com/google/glog) for logging. The library only uses
// verbose logging which means nothing will be output unless the verbosity
// level is set (by default it's 0, libprocess uses levels 1, 2, and 3).
type Call_SetLoggingLevel struct {
	// The verbosity level.
	Level *uint32 `protobuf:"varint,1,req,name=level" json:"level,omitempty"`
	// The duration to keep verbosity level toggled. After this duration, the
	// verbosity level of log would revert to the original level.
	Duration         *mesos_v1.DurationInfo `protobuf:"bytes,2,req,name=duration" json:"duration,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *Call_SetLoggingLevel) Reset()                    { *m = Call_SetLoggingLevel{} }
func (m *Call_SetLoggingLevel) String() string            { return proto.CompactTextString(m) }
func (*Call_SetLoggingLevel) ProtoMessage()               {}
func (*Call_SetLoggingLevel) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 1} }

func (m *Call_SetLoggingLevel) GetLevel() uint32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *Call_SetLoggingLevel) GetDuration() *mesos_v1.DurationInfo {
	if m != nil {
		return m.Duration
	}
	return nil
}

// Provides the file listing for a directory.
type Call_ListFiles struct {
	Path             *string `protobuf:"bytes,1,req,name=path" json:"path,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Call_ListFiles) Reset()                    { *m = Call_ListFiles{} }
func (m *Call_ListFiles) String() string            { return proto.CompactTextString(m) }
func (*Call_ListFiles) ProtoMessage()               {}
func (*Call_ListFiles) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 2} }

func (m *Call_ListFiles) GetPath() string {
	if m != nil && m.Path != nil {
		return *m.Path
	}
	return ""
}

// Reads data from a file.
type Call_ReadFile struct {
	// The path of file.
	Path *string `protobuf:"bytes,1,req,name=path" json:"path,omitempty"`
	// Initial offset in file to start reading from.
	Offset *uint64 `protobuf:"varint,2,req,name=offset" json:"offset,omitempty"`
	// The maximum number of bytes to read. The read length is capped at 16
	// memory pages.
	Length           *uint64 `protobuf:"varint,3,opt,name=length" json:"length,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Call_ReadFile) Reset()                    { *m = Call_ReadFile{} }
func (m *Call_ReadFile) String() string            { return proto.CompactTextString(m) }
func (*Call_ReadFile) ProtoMessage()               {}
func (*Call_ReadFile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 3} }

func (m *Call_ReadFile) GetPath() string {
	if m != nil && m.Path != nil {
		return *m.Path
	}
	return ""
}

func (m *Call_ReadFile) GetOffset() uint64 {
	if m != nil && m.Offset != nil {
		return *m.Offset
	}
	return 0
}

func (m *Call_ReadFile) GetLength() uint64 {
	if m != nil && m.Length != nil {
		return *m.Length
	}
	return 0
}

type Call_UpdateWeights struct {
	WeightInfos      []*mesos_v1.WeightInfo `protobuf:"bytes,1,rep,name=weight_infos,json=weight_infos" json:"weight_infos,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *Call_UpdateWeights) Reset()                    { *m = Call_UpdateWeights{} }
func (m *Call_UpdateWeights) String() string            { return proto.CompactTextString(m) }
func (*Call_UpdateWeights) ProtoMessage()               {}
func (*Call_UpdateWeights) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 4} }

func (m *Call_UpdateWeights) GetWeightInfos() []*mesos_v1.WeightInfo {
	if m != nil {
		return m.WeightInfos
	}
	return nil
}

// Reserve resources dynamically on a specific agent.
type Call_ReserveResources struct {
	AgentId          *mesos_v1.AgentID    `protobuf:"bytes,1,req,name=agent_id,json=agent_id" json:"agent_id,omitempty"`
	Resources        []*mesos_v1.Resource `protobuf:"bytes,2,rep,name=resources" json:"resources,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *Call_ReserveResources) Reset()                    { *m = Call_ReserveResources{} }
func (m *Call_ReserveResources) String() string            { return proto.CompactTextString(m) }
func (*Call_ReserveResources) ProtoMessage()               {}
func (*Call_ReserveResources) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 5} }

func (m *Call_ReserveResources) GetAgentId() *mesos_v1.AgentID {
	if m != nil {
		return m.AgentId
	}
	return nil
}

func (m *Call_ReserveResources) GetResources() []*mesos_v1.Resource {
	if m != nil {
		return m.Resources
	}
	return nil
}

// Unreserve resources dynamically on a specific agent.
type Call_UnreserveResources struct {
	AgentId          *mesos_v1.AgentID    `protobuf:"bytes,1,req,name=agent_id,json=agent_id" json:"agent_id,omitempty"`
	Resources        []*mesos_v1.Resource `protobuf:"bytes,2,rep,name=resources" json:"resources,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *Call_UnreserveResources) Reset()                    { *m = Call_UnreserveResources{} }
func (m *Call_UnreserveResources) String() string            { return proto.CompactTextString(m) }
func (*Call_UnreserveResources) ProtoMessage()               {}
func (*Call_UnreserveResources) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 6} }

func (m *Call_UnreserveResources) GetAgentId() *mesos_v1.AgentID {
	if m != nil {
		return m.AgentId
	}
	return nil
}

func (m *Call_UnreserveResources) GetResources() []*mesos_v1.Resource {
	if m != nil {
		return m.Resources
	}
	return nil
}

// Create persistent volumes on reserved resources. The request is forwarded
// asynchronously to the Mesos agent where the reserved resources are located.
// That asynchronous message may not be delivered or creating the volumes at
// the agent might fail. Volume creation can be verified by sending a
// `GET_VOLUMES` call.
type Call_CreateVolumes struct {
	AgentId          *mesos_v1.AgentID    `protobuf:"bytes,1,req,name=agent_id,json=agent_id" json:"agent_id,omitempty"`
	Volumes          []*mesos_v1.Resource `protobuf:"bytes,2,rep,name=volumes" json:"volumes,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *Call_CreateVolumes) Reset()                    { *m = Call_CreateVolumes{} }
func (m *Call_CreateVolumes) String() string            { return proto.CompactTextString(m) }
func (*Call_CreateVolumes) ProtoMessage()               {}
func (*Call_CreateVolumes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 7} }

func (m *Call_CreateVolumes) GetAgentId() *mesos_v1.AgentID {
	if m != nil {
		return m.AgentId
	}
	return nil
}

func (m *Call_CreateVolumes) GetVolumes() []*mesos_v1.Resource {
	if m != nil {
		return m.Volumes
	}
	return nil
}

// Destroy persistent volumes. The request is forwarded asynchronously to the
// Mesos agent where the reserved resources are located. That asynchronous
// message may not be delivered or destroying the volumes at the agent might
// fail. Volume deletion can be verified by sending a `GET_VOLUMES` call.
type Call_DestroyVolumes struct {
	AgentId          *mesos_v1.AgentID    `protobuf:"bytes,1,req,name=agent_id,json=agent_id" json:"agent_id,omitempty"`
	Volumes          []*mesos_v1.Resource `protobuf:"bytes,2,rep,name=volumes" json:"volumes,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *Call_DestroyVolumes) Reset()                    { *m = Call_DestroyVolumes{} }
func (m *Call_DestroyVolumes) String() string            { return proto.CompactTextString(m) }
func (*Call_DestroyVolumes) ProtoMessage()               {}
func (*Call_DestroyVolumes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 8} }

func (m *Call_DestroyVolumes) GetAgentId() *mesos_v1.AgentID {
	if m != nil {
		return m.AgentId
	}
	return nil
}

func (m *Call_DestroyVolumes) GetVolumes() []*mesos_v1.Resource {
	if m != nil {
		return m.Volumes
	}
	return nil
}

// Updates the cluster's maintenance schedule.
type Call_UpdateMaintenanceSchedule struct {
	Schedule         *mesos_v1_maintenance.Schedule `protobuf:"bytes,1,req,name=schedule" json:"schedule,omitempty"`
	XXX_unrecognized []byte                         `json:"-"`
}

func (m *Call_UpdateMaintenanceSchedule) Reset()         { *m = Call_UpdateMaintenanceSchedule{} }
func (m *Call_UpdateMaintenanceSchedule) String() string { return proto.CompactTextString(m) }
func (*Call_UpdateMaintenanceSchedule) ProtoMessage()    {}
func (*Call_UpdateMaintenanceSchedule) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 9}
}

func (m *Call_UpdateMaintenanceSchedule) GetSchedule() *mesos_v1_maintenance.Schedule {
	if m != nil {
		return m.Schedule
	}
	return nil
}

// Starts the maintenance of the cluster, this would bring a set of machines
// down.
type Call_StartMaintenance struct {
	Machines         []*mesos_v1.MachineID `protobuf:"bytes,1,rep,name=machines" json:"machines,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *Call_StartMaintenance) Reset()                    { *m = Call_StartMaintenance{} }
func (m *Call_StartMaintenance) String() string            { return proto.CompactTextString(m) }
func (*Call_StartMaintenance) ProtoMessage()               {}
func (*Call_StartMaintenance) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 10} }

func (m *Call_StartMaintenance) GetMachines() []*mesos_v1.MachineID {
	if m != nil {
		return m.Machines
	}
	return nil
}

// Stops the maintenance of the cluster, this would bring a set of machines
// back up.
type Call_StopMaintenance struct {
	Machines         []*mesos_v1.MachineID `protobuf:"bytes,1,rep,name=machines" json:"machines,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *Call_StopMaintenance) Reset()                    { *m = Call_StopMaintenance{} }
func (m *Call_StopMaintenance) String() string            { return proto.CompactTextString(m) }
func (*Call_StopMaintenance) ProtoMessage()               {}
func (*Call_StopMaintenance) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 11} }

func (m *Call_StopMaintenance) GetMachines() []*mesos_v1.MachineID {
	if m != nil {
		return m.Machines
	}
	return nil
}

// Sets the quota for resources to be used by a particular role.
type Call_SetQuota struct {
	QuotaRequest     *mesos_v1_quota.QuotaRequest `protobuf:"bytes,1,req,name=quota_request,json=quota_request" json:"quota_request,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *Call_SetQuota) Reset()                    { *m = Call_SetQuota{} }
func (m *Call_SetQuota) String() string            { return proto.CompactTextString(m) }
func (*Call_SetQuota) ProtoMessage()               {}
func (*Call_SetQuota) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 12} }

func (m *Call_SetQuota) GetQuotaRequest() *mesos_v1_quota.QuotaRequest {
	if m != nil {
		return m.QuotaRequest
	}
	return nil
}

type Call_RemoveQuota struct {
	Role             *string `protobuf:"bytes,1,req,name=role" json:"role,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Call_RemoveQuota) Reset()                    { *m = Call_RemoveQuota{} }
func (m *Call_RemoveQuota) String() string            { return proto.CompactTextString(m) }
func (*Call_RemoveQuota) ProtoMessage()               {}
func (*Call_RemoveQuota) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 13} }

func (m *Call_RemoveQuota) GetRole() string {
	if m != nil && m.Role != nil {
		return *m.Role
	}
	return ""
}

// Tears down a running framework by shutting down all tasks/executors and
// removing the framework.
type Call_Teardown struct {
	FrameworkId      *mesos_v1.FrameworkID `protobuf:"bytes,1,req,name=framework_id,json=framework_id" json:"framework_id,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *Call_Teardown) Reset()                    { *m = Call_Teardown{} }
func (m *Call_Teardown) String() string            { return proto.CompactTextString(m) }
func (*Call_Teardown) ProtoMessage()               {}
func (*Call_Teardown) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 14} }

func (m *Call_Teardown) GetFrameworkId() *mesos_v1.FrameworkID {
	if m != nil {
		return m.FrameworkId
	}
	return nil
}

// Mark an agent as gone. This can be used by an operator to assert
// that the agent instance has failed and is never coming back (e.g.,
// ephemeral instance from cloud provider). The master would shutdown
// the agent and send 'TASK_GONE_BY_OPERATOR' updates for all the running
// tasks. The persistent volumes/reservations on the agent won't be
// accessible anymore.
//
// NOTE: It is possible that the tasks might still be running
// if the operator's assertion was wrong and the agent was partitioned
// away from the master. The agent would be shutdown when it tries to
// re-register with the master when the partition heals.
type Call_MarkAgentGone struct {
	AgentId          *mesos_v1.AgentID `protobuf:"bytes,1,req,name=agent_id,json=agent_id" json:"agent_id,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *Call_MarkAgentGone) Reset()                    { *m = Call_MarkAgentGone{} }
func (m *Call_MarkAgentGone) String() string            { return proto.CompactTextString(m) }
func (*Call_MarkAgentGone) ProtoMessage()               {}
func (*Call_MarkAgentGone) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 15} }

func (m *Call_MarkAgentGone) GetAgentId() *mesos_v1.AgentID {
	if m != nil {
		return m.AgentId
	}
	return nil
}

// *
// Synchronous responses for all calls (except Call::SUBSCRIBE) made to
// the v1 master API.
type Response struct {
	Type                   *Response_Type                   `protobuf:"varint,1,opt,name=type,enum=mesos.v1.master.Response_Type" json:"type,omitempty"`
	GetHealth              *Response_GetHealth              `protobuf:"bytes,2,opt,name=get_health,json=get_health" json:"get_health,omitempty"`
	GetFlags               *Response_GetFlags               `protobuf:"bytes,3,opt,name=get_flags,json=get_flags" json:"get_flags,omitempty"`
	GetVersion             *Response_GetVersion             `protobuf:"bytes,4,opt,name=get_version,json=get_version" json:"get_version,omitempty"`
	GetMetrics             *Response_GetMetrics             `protobuf:"bytes,5,opt,name=get_metrics,json=get_metrics" json:"get_metrics,omitempty"`
	GetLoggingLevel        *Response_GetLoggingLevel        `protobuf:"bytes,6,opt,name=get_logging_level,json=get_logging_level" json:"get_logging_level,omitempty"`
	ListFiles              *Response_ListFiles              `protobuf:"bytes,7,opt,name=list_files,json=list_files" json:"list_files,omitempty"`
	ReadFile               *Response_ReadFile               `protobuf:"bytes,8,opt,name=read_file,json=read_file" json:"read_file,omitempty"`
	GetState               *Response_GetState               `protobuf:"bytes,9,opt,name=get_state,json=get_state" json:"get_state,omitempty"`
	GetAgents              *Response_GetAgents              `protobuf:"bytes,10,opt,name=get_agents,json=get_agents" json:"get_agents,omitempty"`
	GetFrameworks          *Response_GetFrameworks          `protobuf:"bytes,11,opt,name=get_frameworks,json=get_frameworks" json:"get_frameworks,omitempty"`
	GetExecutors           *Response_GetExecutors           `protobuf:"bytes,12,opt,name=get_executors,json=get_executors" json:"get_executors,omitempty"`
	GetTasks               *Response_GetTasks               `protobuf:"bytes,13,opt,name=get_tasks,json=get_tasks" json:"get_tasks,omitempty"`
	GetRoles               *Response_GetRoles               `protobuf:"bytes,14,opt,name=get_roles,json=get_roles" json:"get_roles,omitempty"`
	GetWeights             *Response_GetWeights             `protobuf:"bytes,15,opt,name=get_weights,json=get_weights" json:"get_weights,omitempty"`
	GetMaster              *Response_GetMaster              `protobuf:"bytes,16,opt,name=get_master,json=get_master" json:"get_master,omitempty"`
	GetMaintenanceStatus   *Response_GetMaintenanceStatus   `protobuf:"bytes,17,opt,name=get_maintenance_status,json=get_maintenance_status" json:"get_maintenance_status,omitempty"`
	GetMaintenanceSchedule *Response_GetMaintenanceSchedule `protobuf:"bytes,18,opt,name=get_maintenance_schedule,json=get_maintenance_schedule" json:"get_maintenance_schedule,omitempty"`
	GetQuota               *Response_GetQuota               `protobuf:"bytes,19,opt,name=get_quota,json=get_quota" json:"get_quota,omitempty"`
	XXX_unrecognized       []byte                           `json:"-"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Response) GetType() Response_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Response_UNKNOWN
}

func (m *Response) GetGetHealth() *Response_GetHealth {
	if m != nil {
		return m.GetHealth
	}
	return nil
}

func (m *Response) GetGetFlags() *Response_GetFlags {
	if m != nil {
		return m.GetFlags
	}
	return nil
}

func (m *Response) GetGetVersion() *Response_GetVersion {
	if m != nil {
		return m.GetVersion
	}
	return nil
}

func (m *Response) GetGetMetrics() *Response_GetMetrics {
	if m != nil {
		return m.GetMetrics
	}
	return nil
}

func (m *Response) GetGetLoggingLevel() *Response_GetLoggingLevel {
	if m != nil {
		return m.GetLoggingLevel
	}
	return nil
}

func (m *Response) GetListFiles() *Response_ListFiles {
	if m != nil {
		return m.ListFiles
	}
	return nil
}

func (m *Response) GetReadFile() *Response_ReadFile {
	if m != nil {
		return m.ReadFile
	}
	return nil
}

func (m *Response) GetGetState() *Response_GetState {
	if m != nil {
		return m.GetState
	}
	return nil
}

func (m *Response) GetGetAgents() *Response_GetAgents {
	if m != nil {
		return m.GetAgents
	}
	return nil
}

func (m *Response) GetGetFrameworks() *Response_GetFrameworks {
	if m != nil {
		return m.GetFrameworks
	}
	return nil
}

func (m *Response) GetGetExecutors() *Response_GetExecutors {
	if m != nil {
		return m.GetExecutors
	}
	return nil
}

func (m *Response) GetGetTasks() *Response_GetTasks {
	if m != nil {
		return m.GetTasks
	}
	return nil
}

func (m *Response) GetGetRoles() *Response_GetRoles {
	if m != nil {
		return m.GetRoles
	}
	return nil
}

func (m *Response) GetGetWeights() *Response_GetWeights {
	if m != nil {
		return m.GetWeights
	}
	return nil
}

func (m *Response) GetGetMaster() *Response_GetMaster {
	if m != nil {
		return m.GetMaster
	}
	return nil
}

func (m *Response) GetGetMaintenanceStatus() *Response_GetMaintenanceStatus {
	if m != nil {
		return m.GetMaintenanceStatus
	}
	return nil
}

func (m *Response) GetGetMaintenanceSchedule() *Response_GetMaintenanceSchedule {
	if m != nil {
		return m.GetMaintenanceSchedule
	}
	return nil
}

func (m *Response) GetGetQuota() *Response_GetQuota {
	if m != nil {
		return m.GetQuota
	}
	return nil
}

// `healthy` would be true if the master is healthy. Delayed responses are
// also indicative of the poor health of the master.
type Response_GetHealth struct {
	Healthy          *bool  `protobuf:"varint,1,req,name=healthy" json:"healthy,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Response_GetHealth) Reset()                    { *m = Response_GetHealth{} }
func (m *Response_GetHealth) String() string            { return proto.CompactTextString(m) }
func (*Response_GetHealth) ProtoMessage()               {}
func (*Response_GetHealth) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

func (m *Response_GetHealth) GetHealthy() bool {
	if m != nil && m.Healthy != nil {
		return *m.Healthy
	}
	return false
}

// Contains the flag configuration of the master.
type Response_GetFlags struct {
	Flags            []*mesos_v1.Flag `protobuf:"bytes,1,rep,name=flags" json:"flags,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *Response_GetFlags) Reset()                    { *m = Response_GetFlags{} }
func (m *Response_GetFlags) String() string            { return proto.CompactTextString(m) }
func (*Response_GetFlags) ProtoMessage()               {}
func (*Response_GetFlags) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 1} }

func (m *Response_GetFlags) GetFlags() []*mesos_v1.Flag {
	if m != nil {
		return m.Flags
	}
	return nil
}

// Contains the version information of the master.
type Response_GetVersion struct {
	VersionInfo      *mesos_v1.VersionInfo `protobuf:"bytes,1,req,name=version_info,json=version_info" json:"version_info,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *Response_GetVersion) Reset()                    { *m = Response_GetVersion{} }
func (m *Response_GetVersion) String() string            { return proto.CompactTextString(m) }
func (*Response_GetVersion) ProtoMessage()               {}
func (*Response_GetVersion) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 2} }

func (m *Response_GetVersion) GetVersionInfo() *mesos_v1.VersionInfo {
	if m != nil {
		return m.VersionInfo
	}
	return nil
}

// Contains a snapshot of the current metrics.
type Response_GetMetrics struct {
	Metrics          []*mesos_v1.Metric `protobuf:"bytes,1,rep,name=metrics" json:"metrics,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *Response_GetMetrics) Reset()                    { *m = Response_GetMetrics{} }
func (m *Response_GetMetrics) String() string            { return proto.CompactTextString(m) }
func (*Response_GetMetrics) ProtoMessage()               {}
func (*Response_GetMetrics) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 3} }

func (m *Response_GetMetrics) GetMetrics() []*mesos_v1.Metric {
	if m != nil {
		return m.Metrics
	}
	return nil
}

// Contains the logging level of the master.
type Response_GetLoggingLevel struct {
	Level            *uint32 `protobuf:"varint,1,req,name=level" json:"level,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Response_GetLoggingLevel) Reset()                    { *m = Response_GetLoggingLevel{} }
func (m *Response_GetLoggingLevel) String() string            { return proto.CompactTextString(m) }
func (*Response_GetLoggingLevel) ProtoMessage()               {}
func (*Response_GetLoggingLevel) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 4} }

func (m *Response_GetLoggingLevel) GetLevel() uint32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

// Contains the file listing(similar to `ls -l`) for a directory.
type Response_ListFiles struct {
	FileInfos        []*mesos_v1.FileInfo `protobuf:"bytes,1,rep,name=file_infos,json=file_infos" json:"file_infos,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *Response_ListFiles) Reset()                    { *m = Response_ListFiles{} }
func (m *Response_ListFiles) String() string            { return proto.CompactTextString(m) }
func (*Response_ListFiles) ProtoMessage()               {}
func (*Response_ListFiles) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 5} }

func (m *Response_ListFiles) GetFileInfos() []*mesos_v1.FileInfo {
	if m != nil {
		return m.FileInfos
	}
	return nil
}

// Contains the file data.
type Response_ReadFile struct {
	// The size of file (in bytes).
	Size             *uint64 `protobuf:"varint,1,req,name=size" json:"size,omitempty"`
	Data             []byte  `protobuf:"bytes,2,req,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Response_ReadFile) Reset()                    { *m = Response_ReadFile{} }
func (m *Response_ReadFile) String() string            { return proto.CompactTextString(m) }
func (*Response_ReadFile) ProtoMessage()               {}
func (*Response_ReadFile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 6} }

func (m *Response_ReadFile) GetSize() uint64 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return 0
}

func (m *Response_ReadFile) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// Contains full state of the master i.e. information about the tasks,
// agents, frameworks and executors running in the cluster.
type Response_GetState struct {
	GetTasks         *Response_GetTasks      `protobuf:"bytes,1,opt,name=get_tasks,json=get_tasks" json:"get_tasks,omitempty"`
	GetExecutors     *Response_GetExecutors  `protobuf:"bytes,2,opt,name=get_executors,json=get_executors" json:"get_executors,omitempty"`
	GetFrameworks    *Response_GetFrameworks `protobuf:"bytes,3,opt,name=get_frameworks,json=get_frameworks" json:"get_frameworks,omitempty"`
	GetAgents        *Response_GetAgents     `protobuf:"bytes,4,opt,name=get_agents,json=get_agents" json:"get_agents,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *Response_GetState) Reset()                    { *m = Response_GetState{} }
func (m *Response_GetState) String() string            { return proto.CompactTextString(m) }
func (*Response_GetState) ProtoMessage()               {}
func (*Response_GetState) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 7} }

func (m *Response_GetState) GetGetTasks() *Response_GetTasks {
	if m != nil {
		return m.GetTasks
	}
	return nil
}

func (m *Response_GetState) GetGetExecutors() *Response_GetExecutors {
	if m != nil {
		return m.GetExecutors
	}
	return nil
}

func (m *Response_GetState) GetGetFrameworks() *Response_GetFrameworks {
	if m != nil {
		return m.GetFrameworks
	}
	return nil
}

func (m *Response_GetState) GetGetAgents() *Response_GetAgents {
	if m != nil {
		return m.GetAgents
	}
	return nil
}

type Response_GetAgents struct {
	// Registered agents.
	Agents []*Response_GetAgents_Agent `protobuf:"bytes,1,rep,name=agents" json:"agents,omitempty"`
	// Agents which are recovered from registry but not reregistered yet.
	RecoveredAgents  []*mesos_v1.AgentInfo `protobuf:"bytes,2,rep,name=recovered_agents,json=recovered_agents" json:"recovered_agents,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *Response_GetAgents) Reset()                    { *m = Response_GetAgents{} }
func (m *Response_GetAgents) String() string            { return proto.CompactTextString(m) }
func (*Response_GetAgents) ProtoMessage()               {}
func (*Response_GetAgents) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 8} }

func (m *Response_GetAgents) GetAgents() []*Response_GetAgents_Agent {
	if m != nil {
		return m.Agents
	}
	return nil
}

func (m *Response_GetAgents) GetRecoveredAgents() []*mesos_v1.AgentInfo {
	if m != nil {
		return m.RecoveredAgents
	}
	return nil
}

type Response_GetAgents_Agent struct {
	AgentInfo        *mesos_v1.AgentInfo `protobuf:"bytes,1,req,name=agent_info,json=agent_info" json:"agent_info,omitempty"`
	Active           *bool               `protobuf:"varint,2,req,name=active" json:"active,omitempty"`
	Version          *string             `protobuf:"bytes,3,req,name=version" json:"version,omitempty"`
	Pid              *string             `protobuf:"bytes,4,opt,name=pid" json:"pid,omitempty"`
	RegisteredTime   *mesos_v1.TimeInfo  `protobuf:"bytes,5,opt,name=registered_time,json=registered_time" json:"registered_time,omitempty"`
	ReregisteredTime *mesos_v1.TimeInfo  `protobuf:"bytes,6,opt,name=reregistered_time,json=reregistered_time" json:"reregistered_time,omitempty"`
	// Total resources (including oversubscribed resources) the agent
	// provides.
	TotalResources     []*mesos_v1.Resource                         `protobuf:"bytes,7,rep,name=total_resources,json=total_resources" json:"total_resources,omitempty"`
	AllocatedResources []*mesos_v1.Resource                         `protobuf:"bytes,8,rep,name=allocated_resources,json=allocated_resources" json:"allocated_resources,omitempty"`
	OfferedResources   []*mesos_v1.Resource                         `protobuf:"bytes,9,rep,name=offered_resources,json=offered_resources" json:"offered_resources,omitempty"`
	Capabilities       []*mesos_v1.AgentInfo_Capability             `protobuf:"bytes,10,rep,name=capabilities" json:"capabilities,omitempty"`
	ResourceProviders  []*Response_GetAgents_Agent_ResourceProvider `protobuf:"bytes,11,rep,name=resource_providers,json=resource_providers" json:"resource_providers,omitempty"`
	XXX_unrecognized   []byte                                       `json:"-"`
}

func (m *Response_GetAgents_Agent) Reset()                    { *m = Response_GetAgents_Agent{} }
func (m *Response_GetAgents_Agent) String() string            { return proto.CompactTextString(m) }
func (*Response_GetAgents_Agent) ProtoMessage()               {}
func (*Response_GetAgents_Agent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 8, 0} }

func (m *Response_GetAgents_Agent) GetAgentInfo() *mesos_v1.AgentInfo {
	if m != nil {
		return m.AgentInfo
	}
	return nil
}

func (m *Response_GetAgents_Agent) GetActive() bool {
	if m != nil && m.Active != nil {
		return *m.Active
	}
	return false
}

func (m *Response_GetAgents_Agent) GetVersion() string {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return ""
}

func (m *Response_GetAgents_Agent) GetPid() string {
	if m != nil && m.Pid != nil {
		return *m.Pid
	}
	return ""
}

func (m *Response_GetAgents_Agent) GetRegisteredTime() *mesos_v1.TimeInfo {
	if m != nil {
		return m.RegisteredTime
	}
	return nil
}

func (m *Response_GetAgents_Agent) GetReregisteredTime() *mesos_v1.TimeInfo {
	if m != nil {
		return m.ReregisteredTime
	}
	return nil
}

func (m *Response_GetAgents_Agent) GetTotalResources() []*mesos_v1.Resource {
	if m != nil {
		return m.TotalResources
	}
	return nil
}

func (m *Response_GetAgents_Agent) GetAllocatedResources() []*mesos_v1.Resource {
	if m != nil {
		return m.AllocatedResources
	}
	return nil
}

func (m *Response_GetAgents_Agent) GetOfferedResources() []*mesos_v1.Resource {
	if m != nil {
		return m.OfferedResources
	}
	return nil
}

func (m *Response_GetAgents_Agent) GetCapabilities() []*mesos_v1.AgentInfo_Capability {
	if m != nil {
		return m.Capabilities
	}
	return nil
}

func (m *Response_GetAgents_Agent) GetResourceProviders() []*Response_GetAgents_Agent_ResourceProvider {
	if m != nil {
		return m.ResourceProviders
	}
	return nil
}

type Response_GetAgents_Agent_ResourceProvider struct {
	ResourceProviderInfo *mesos_v1.ResourceProviderInfo `protobuf:"bytes,1,req,name=resource_provider_info,json=resource_provider_info" json:"resource_provider_info,omitempty"`
	XXX_unrecognized     []byte                         `json:"-"`
}

func (m *Response_GetAgents_Agent_ResourceProvider) Reset() {
	*m = Response_GetAgents_Agent_ResourceProvider{}
}
func (m *Response_GetAgents_Agent_ResourceProvider) String() string { return proto.CompactTextString(m) }
func (*Response_GetAgents_Agent_ResourceProvider) ProtoMessage()    {}
func (*Response_GetAgents_Agent_ResourceProvider) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{1, 8, 0, 0}
}

func (m *Response_GetAgents_Agent_ResourceProvider) GetResourceProviderInfo() *mesos_v1.ResourceProviderInfo {
	if m != nil {
		return m.ResourceProviderInfo
	}
	return nil
}

// Information about all the frameworks known to the master at the current
// time. Note that there might be frameworks unknown to the master running
// on partitioned or unsubscribed agents.
type Response_GetFrameworks struct {
	// Frameworks that have subscribed with the master. Note that this includes
	// frameworks that are disconnected and in the process of re-subscribing.
	Frameworks []*Response_GetFrameworks_Framework `protobuf:"bytes,1,rep,name=frameworks" json:"frameworks,omitempty"`
	// Frameworks that have been teared down.
	CompletedFrameworks []*Response_GetFrameworks_Framework `protobuf:"bytes,2,rep,name=completed_frameworks,json=completed_frameworks" json:"completed_frameworks,omitempty"`
	// This field previously contained frameworks that previously
	// subscribed but haven't yet re-subscribed after a master failover.
	// As of Mesos 1.2, this field will always be empty; recovered
	// frameworks are now reported in the `frameworks` list with the
	// `recovered` field set to true.
	//
	// TODO(neilc): Remove this field in Mesos 2.0.
	RecoveredFrameworks []*mesos_v1.FrameworkInfo `protobuf:"bytes,3,rep,name=recovered_frameworks,json=recovered_frameworks" json:"recovered_frameworks,omitempty"`
	XXX_unrecognized    []byte                    `json:"-"`
}

func (m *Response_GetFrameworks) Reset()                    { *m = Response_GetFrameworks{} }
func (m *Response_GetFrameworks) String() string            { return proto.CompactTextString(m) }
func (*Response_GetFrameworks) ProtoMessage()               {}
func (*Response_GetFrameworks) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 9} }

func (m *Response_GetFrameworks) GetFrameworks() []*Response_GetFrameworks_Framework {
	if m != nil {
		return m.Frameworks
	}
	return nil
}

func (m *Response_GetFrameworks) GetCompletedFrameworks() []*Response_GetFrameworks_Framework {
	if m != nil {
		return m.CompletedFrameworks
	}
	return nil
}

func (m *Response_GetFrameworks) GetRecoveredFrameworks() []*mesos_v1.FrameworkInfo {
	if m != nil {
		return m.RecoveredFrameworks
	}
	return nil
}

type Response_GetFrameworks_Framework struct {
	FrameworkInfo *mesos_v1.FrameworkInfo `protobuf:"bytes,1,req,name=framework_info,json=framework_info" json:"framework_info,omitempty"`
	Active        *bool                   `protobuf:"varint,2,req,name=active" json:"active,omitempty"`
	Connected     *bool                   `protobuf:"varint,3,req,name=connected" json:"connected,omitempty"`
	// If true, this framework was previously subscribed but hasn't
	// yet re-subscribed after a master failover. Recovered frameworks
	// are only reported if one or more agents running a task or
	// executor for the framework have re-registered after master
	// failover.
	Recovered          *bool                    `protobuf:"varint,11,req,name=recovered" json:"recovered,omitempty"`
	RegisteredTime     *mesos_v1.TimeInfo       `protobuf:"bytes,4,opt,name=registered_time,json=registered_time" json:"registered_time,omitempty"`
	ReregisteredTime   *mesos_v1.TimeInfo       `protobuf:"bytes,5,opt,name=reregistered_time,json=reregistered_time" json:"reregistered_time,omitempty"`
	UnregisteredTime   *mesos_v1.TimeInfo       `protobuf:"bytes,6,opt,name=unregistered_time,json=unregistered_time" json:"unregistered_time,omitempty"`
	Offers             []*mesos_v1.Offer        `protobuf:"bytes,7,rep,name=offers" json:"offers,omitempty"`
	InverseOffers      []*mesos_v1.InverseOffer `protobuf:"bytes,8,rep,name=inverse_offers,json=inverse_offers" json:"inverse_offers,omitempty"`
	AllocatedResources []*mesos_v1.Resource     `protobuf:"bytes,9,rep,name=allocated_resources,json=allocated_resources" json:"allocated_resources,omitempty"`
	OfferedResources   []*mesos_v1.Resource     `protobuf:"bytes,10,rep,name=offered_resources,json=offered_resources" json:"offered_resources,omitempty"`
	XXX_unrecognized   []byte                   `json:"-"`
}

func (m *Response_GetFrameworks_Framework) Reset()         { *m = Response_GetFrameworks_Framework{} }
func (m *Response_GetFrameworks_Framework) String() string { return proto.CompactTextString(m) }
func (*Response_GetFrameworks_Framework) ProtoMessage()    {}
func (*Response_GetFrameworks_Framework) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{1, 9, 0}
}

func (m *Response_GetFrameworks_Framework) GetFrameworkInfo() *mesos_v1.FrameworkInfo {
	if m != nil {
		return m.FrameworkInfo
	}
	return nil
}

func (m *Response_GetFrameworks_Framework) GetActive() bool {
	if m != nil && m.Active != nil {
		return *m.Active
	}
	return false
}

func (m *Response_GetFrameworks_Framework) GetConnected() bool {
	if m != nil && m.Connected != nil {
		return *m.Connected
	}
	return false
}

func (m *Response_GetFrameworks_Framework) GetRecovered() bool {
	if m != nil && m.Recovered != nil {
		return *m.Recovered
	}
	return false
}

func (m *Response_GetFrameworks_Framework) GetRegisteredTime() *mesos_v1.TimeInfo {
	if m != nil {
		return m.RegisteredTime
	}
	return nil
}

func (m *Response_GetFrameworks_Framework) GetReregisteredTime() *mesos_v1.TimeInfo {
	if m != nil {
		return m.ReregisteredTime
	}
	return nil
}

func (m *Response_GetFrameworks_Framework) GetUnregisteredTime() *mesos_v1.TimeInfo {
	if m != nil {
		return m.UnregisteredTime
	}
	return nil
}

func (m *Response_GetFrameworks_Framework) GetOffers() []*mesos_v1.Offer {
	if m != nil {
		return m.Offers
	}
	return nil
}

func (m *Response_GetFrameworks_Framework) GetInverseOffers() []*mesos_v1.InverseOffer {
	if m != nil {
		return m.InverseOffers
	}
	return nil
}

func (m *Response_GetFrameworks_Framework) GetAllocatedResources() []*mesos_v1.Resource {
	if m != nil {
		return m.AllocatedResources
	}
	return nil
}

func (m *Response_GetFrameworks_Framework) GetOfferedResources() []*mesos_v1.Resource {
	if m != nil {
		return m.OfferedResources
	}
	return nil
}

// Lists information about all the executors known to the master at the
// current time. Note that there might be executors unknown to the master
// running on partitioned or unsubscribed agents.
type Response_GetExecutors struct {
	Executors []*Response_GetExecutors_Executor `protobuf:"bytes,1,rep,name=executors" json:"executors,omitempty"`
	// As of Mesos 1.3.0, this field is deprecated and will always be empty.
	//
	// TODO(neilc): Remove this field in Mesos 2.0.
	OrphanExecutors  []*Response_GetExecutors_Executor `protobuf:"bytes,2,rep,name=orphan_executors,json=orphan_executors" json:"orphan_executors,omitempty"`
	XXX_unrecognized []byte                            `json:"-"`
}

func (m *Response_GetExecutors) Reset()                    { *m = Response_GetExecutors{} }
func (m *Response_GetExecutors) String() string            { return proto.CompactTextString(m) }
func (*Response_GetExecutors) ProtoMessage()               {}
func (*Response_GetExecutors) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 10} }

func (m *Response_GetExecutors) GetExecutors() []*Response_GetExecutors_Executor {
	if m != nil {
		return m.Executors
	}
	return nil
}

func (m *Response_GetExecutors) GetOrphanExecutors() []*Response_GetExecutors_Executor {
	if m != nil {
		return m.OrphanExecutors
	}
	return nil
}

type Response_GetExecutors_Executor struct {
	ExecutorInfo     *mesos_v1.ExecutorInfo `protobuf:"bytes,1,req,name=executor_info,json=executor_info" json:"executor_info,omitempty"`
	AgentId          *mesos_v1.AgentID      `protobuf:"bytes,2,req,name=agent_id,json=agent_id" json:"agent_id,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *Response_GetExecutors_Executor) Reset()         { *m = Response_GetExecutors_Executor{} }
func (m *Response_GetExecutors_Executor) String() string { return proto.CompactTextString(m) }
func (*Response_GetExecutors_Executor) ProtoMessage()    {}
func (*Response_GetExecutors_Executor) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{1, 10, 0}
}

func (m *Response_GetExecutors_Executor) GetExecutorInfo() *mesos_v1.ExecutorInfo {
	if m != nil {
		return m.ExecutorInfo
	}
	return nil
}

func (m *Response_GetExecutors_Executor) GetAgentId() *mesos_v1.AgentID {
	if m != nil {
		return m.AgentId
	}
	return nil
}

// Lists information about all the tasks known to the master at the current
// time. Note that there might be tasks unknown to the master running on
// partitioned or unsubscribed agents.
type Response_GetTasks struct {
	// Tasks that are enqueued on the master waiting (e.g., authorizing)
	// to be launched.
	PendingTasks []*mesos_v1.Task `protobuf:"bytes,1,rep,name=pending_tasks,json=pending_tasks" json:"pending_tasks,omitempty"`
	// Tasks that have been forwarded to the agent for launch. This
	// includes tasks that are staging or running; it also includes
	// tasks that have reached a terminal state but the terminal status
	// update has not yet been acknowledged by the scheduler.
	Tasks []*mesos_v1.Task `protobuf:"bytes,2,rep,name=tasks" json:"tasks,omitempty"`
	// Tasks that were running on agents that have become partitioned
	// from the master. If/when the agent is no longer partitioned,
	// tasks running on that agent will no longer be unreachable (they
	// will either be running or completed). Note that the master only
	// stores a limited number of unreachable tasks; information about
	// unreachable tasks is also not preserved across master failover.
	UnreachableTasks []*mesos_v1.Task `protobuf:"bytes,5,rep,name=unreachable_tasks,json=unreachable_tasks" json:"unreachable_tasks,omitempty"`
	// Tasks that have reached terminal state and have all their updates
	// acknowledged by the scheduler.
	CompletedTasks []*mesos_v1.Task `protobuf:"bytes,3,rep,name=completed_tasks,json=completed_tasks" json:"completed_tasks,omitempty"`
	// As of Mesos 1.3.0, this field is deprecated and will always be empty.
	//
	// TODO(neilc): Remove this field in Mesos 2.0.
	OrphanTasks      []*mesos_v1.Task `protobuf:"bytes,4,rep,name=orphan_tasks,json=orphan_tasks" json:"orphan_tasks,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *Response_GetTasks) Reset()                    { *m = Response_GetTasks{} }
func (m *Response_GetTasks) String() string            { return proto.CompactTextString(m) }
func (*Response_GetTasks) ProtoMessage()               {}
func (*Response_GetTasks) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 11} }

func (m *Response_GetTasks) GetPendingTasks() []*mesos_v1.Task {
	if m != nil {
		return m.PendingTasks
	}
	return nil
}

func (m *Response_GetTasks) GetTasks() []*mesos_v1.Task {
	if m != nil {
		return m.Tasks
	}
	return nil
}

func (m *Response_GetTasks) GetUnreachableTasks() []*mesos_v1.Task {
	if m != nil {
		return m.UnreachableTasks
	}
	return nil
}

func (m *Response_GetTasks) GetCompletedTasks() []*mesos_v1.Task {
	if m != nil {
		return m.CompletedTasks
	}
	return nil
}

func (m *Response_GetTasks) GetOrphanTasks() []*mesos_v1.Task {
	if m != nil {
		return m.OrphanTasks
	}
	return nil
}

// Provides information about every role that is on the role whitelist (if
// enabled), has one or more registered frameworks or has a non-default weight
// or quota.
type Response_GetRoles struct {
	Roles            []*mesos_v1.Role `protobuf:"bytes,1,rep,name=roles" json:"roles,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *Response_GetRoles) Reset()                    { *m = Response_GetRoles{} }
func (m *Response_GetRoles) String() string            { return proto.CompactTextString(m) }
func (*Response_GetRoles) ProtoMessage()               {}
func (*Response_GetRoles) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 12} }

func (m *Response_GetRoles) GetRoles() []*mesos_v1.Role {
	if m != nil {
		return m.Roles
	}
	return nil
}

// Provides the weight information about every role.
type Response_GetWeights struct {
	WeightInfos      []*mesos_v1.WeightInfo `protobuf:"bytes,1,rep,name=weight_infos,json=weight_infos" json:"weight_infos,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *Response_GetWeights) Reset()                    { *m = Response_GetWeights{} }
func (m *Response_GetWeights) String() string            { return proto.CompactTextString(m) }
func (*Response_GetWeights) ProtoMessage()               {}
func (*Response_GetWeights) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 13} }

func (m *Response_GetWeights) GetWeightInfos() []*mesos_v1.WeightInfo {
	if m != nil {
		return m.WeightInfos
	}
	return nil
}

// Contains the master's information.
type Response_GetMaster struct {
	MasterInfo       *mesos_v1.MasterInfo `protobuf:"bytes,1,opt,name=master_info,json=master_info" json:"master_info,omitempty"`
	StartTime        *float64             `protobuf:"fixed64,2,opt,name=start_time,json=start_time" json:"start_time,omitempty"`
	ElectedTime      *float64             `protobuf:"fixed64,3,opt,name=elected_time,json=elected_time" json:"elected_time,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *Response_GetMaster) Reset()                    { *m = Response_GetMaster{} }
func (m *Response_GetMaster) String() string            { return proto.CompactTextString(m) }
func (*Response_GetMaster) ProtoMessage()               {}
func (*Response_GetMaster) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 14} }

func (m *Response_GetMaster) GetMasterInfo() *mesos_v1.MasterInfo {
	if m != nil {
		return m.MasterInfo
	}
	return nil
}

func (m *Response_GetMaster) GetStartTime() float64 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *Response_GetMaster) GetElectedTime() float64 {
	if m != nil && m.ElectedTime != nil {
		return *m.ElectedTime
	}
	return 0
}

// Contains the cluster's maintenance status.
type Response_GetMaintenanceStatus struct {
	Status           *mesos_v1_maintenance.ClusterStatus `protobuf:"bytes,1,req,name=status" json:"status,omitempty"`
	XXX_unrecognized []byte                              `json:"-"`
}

func (m *Response_GetMaintenanceStatus) Reset()         { *m = Response_GetMaintenanceStatus{} }
func (m *Response_GetMaintenanceStatus) String() string { return proto.CompactTextString(m) }
func (*Response_GetMaintenanceStatus) ProtoMessage()    {}
func (*Response_GetMaintenanceStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{1, 15}
}

func (m *Response_GetMaintenanceStatus) GetStatus() *mesos_v1_maintenance.ClusterStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// Contains the cluster's maintenance schedule.
type Response_GetMaintenanceSchedule struct {
	Schedule         *mesos_v1_maintenance.Schedule `protobuf:"bytes,1,req,name=schedule" json:"schedule,omitempty"`
	XXX_unrecognized []byte                         `json:"-"`
}

func (m *Response_GetMaintenanceSchedule) Reset()         { *m = Response_GetMaintenanceSchedule{} }
func (m *Response_GetMaintenanceSchedule) String() string { return proto.CompactTextString(m) }
func (*Response_GetMaintenanceSchedule) ProtoMessage()    {}
func (*Response_GetMaintenanceSchedule) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{1, 16}
}

func (m *Response_GetMaintenanceSchedule) GetSchedule() *mesos_v1_maintenance.Schedule {
	if m != nil {
		return m.Schedule
	}
	return nil
}

// Contains the cluster's configured quotas.
type Response_GetQuota struct {
	Status           *mesos_v1_quota.QuotaStatus `protobuf:"bytes,1,req,name=status" json:"status,omitempty"`
	XXX_unrecognized []byte                      `json:"-"`
}

func (m *Response_GetQuota) Reset()                    { *m = Response_GetQuota{} }
func (m *Response_GetQuota) String() string            { return proto.CompactTextString(m) }
func (*Response_GetQuota) ProtoMessage()               {}
func (*Response_GetQuota) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 17} }

func (m *Response_GetQuota) GetStatus() *mesos_v1_quota.QuotaStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// *
// Streaming response to `Call::SUBSCRIBE` made to the master.
type Event struct {
	Type             *Event_Type             `protobuf:"varint,1,opt,name=type,enum=mesos.v1.master.Event_Type" json:"type,omitempty"`
	Subscribed       *Event_Subscribed       `protobuf:"bytes,2,opt,name=subscribed" json:"subscribed,omitempty"`
	TaskAdded        *Event_TaskAdded        `protobuf:"bytes,3,opt,name=task_added,json=task_added" json:"task_added,omitempty"`
	TaskUpdated      *Event_TaskUpdated      `protobuf:"bytes,4,opt,name=task_updated,json=task_updated" json:"task_updated,omitempty"`
	AgentAdded       *Event_AgentAdded       `protobuf:"bytes,5,opt,name=agent_added,json=agent_added" json:"agent_added,omitempty"`
	AgentRemoved     *Event_AgentRemoved     `protobuf:"bytes,6,opt,name=agent_removed,json=agent_removed" json:"agent_removed,omitempty"`
	FrameworkAdded   *Event_FrameworkAdded   `protobuf:"bytes,7,opt,name=framework_added,json=framework_added" json:"framework_added,omitempty"`
	FrameworkUpdated *Event_FrameworkUpdated `protobuf:"bytes,8,opt,name=framework_updated,json=framework_updated" json:"framework_updated,omitempty"`
	FrameworkRemoved *Event_FrameworkRemoved `protobuf:"bytes,9,opt,name=framework_removed,json=framework_removed" json:"framework_removed,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *Event) Reset()                    { *m = Event{} }
func (m *Event) String() string            { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()               {}
func (*Event) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Event) GetType() Event_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Event_UNKNOWN
}

func (m *Event) GetSubscribed() *Event_Subscribed {
	if m != nil {
		return m.Subscribed
	}
	return nil
}

func (m *Event) GetTaskAdded() *Event_TaskAdded {
	if m != nil {
		return m.TaskAdded
	}
	return nil
}

func (m *Event) GetTaskUpdated() *Event_TaskUpdated {
	if m != nil {
		return m.TaskUpdated
	}
	return nil
}

func (m *Event) GetAgentAdded() *Event_AgentAdded {
	if m != nil {
		return m.AgentAdded
	}
	return nil
}

func (m *Event) GetAgentRemoved() *Event_AgentRemoved {
	if m != nil {
		return m.AgentRemoved
	}
	return nil
}

func (m *Event) GetFrameworkAdded() *Event_FrameworkAdded {
	if m != nil {
		return m.FrameworkAdded
	}
	return nil
}

func (m *Event) GetFrameworkUpdated() *Event_FrameworkUpdated {
	if m != nil {
		return m.FrameworkUpdated
	}
	return nil
}

func (m *Event) GetFrameworkRemoved() *Event_FrameworkRemoved {
	if m != nil {
		return m.FrameworkRemoved
	}
	return nil
}

// First event received when a client subscribes.
type Event_Subscribed struct {
	// Snapshot of the entire cluster state. Further updates to the
	// cluster state are sent as separate events on the stream.
	GetState *Response_GetState `protobuf:"bytes,1,opt,name=get_state,json=get_state" json:"get_state,omitempty"`
	// This value will be set if the master is sending heartbeats to
	// subscribers. See the comment above on 'HEARTBEAT' for more details.
	HeartbeatIntervalSeconds *float64 `protobuf:"fixed64,2,opt,name=heartbeat_interval_seconds,json=heartbeat_interval_seconds" json:"heartbeat_interval_seconds,omitempty"`
	XXX_unrecognized         []byte   `json:"-"`
}

func (m *Event_Subscribed) Reset()                    { *m = Event_Subscribed{} }
func (m *Event_Subscribed) String() string            { return proto.CompactTextString(m) }
func (*Event_Subscribed) ProtoMessage()               {}
func (*Event_Subscribed) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

func (m *Event_Subscribed) GetGetState() *Response_GetState {
	if m != nil {
		return m.GetState
	}
	return nil
}

func (m *Event_Subscribed) GetHeartbeatIntervalSeconds() float64 {
	if m != nil && m.HeartbeatIntervalSeconds != nil {
		return *m.HeartbeatIntervalSeconds
	}
	return 0
}

// Forwarded by the master when a task becomes known to it. This can happen
// when a new task is launched by the scheduler or when the task becomes
// known to the master upon an agent (re-)registration after a failover.
type Event_TaskAdded struct {
	Task             *mesos_v1.Task `protobuf:"bytes,1,req,name=task" json:"task,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *Event_TaskAdded) Reset()                    { *m = Event_TaskAdded{} }
func (m *Event_TaskAdded) String() string            { return proto.CompactTextString(m) }
func (*Event_TaskAdded) ProtoMessage()               {}
func (*Event_TaskAdded) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 1} }

func (m *Event_TaskAdded) GetTask() *mesos_v1.Task {
	if m != nil {
		return m.Task
	}
	return nil
}

// Forwarded by the master when an existing task transitions to a new state.
type Event_TaskUpdated struct {
	FrameworkId *mesos_v1.FrameworkID `protobuf:"bytes,1,req,name=framework_id,json=framework_id" json:"framework_id,omitempty"`
	// This is the status of the task corresponding to the last
	// status update acknowledged by the scheduler.
	Status *mesos_v1.TaskStatus `protobuf:"bytes,2,req,name=status" json:"status,omitempty"`
	// This is the latest state of the task according to the agent.
	State            *mesos_v1.TaskState `protobuf:"varint,3,req,name=state,enum=mesos.v1.TaskState" json:"state,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *Event_TaskUpdated) Reset()                    { *m = Event_TaskUpdated{} }
func (m *Event_TaskUpdated) String() string            { return proto.CompactTextString(m) }
func (*Event_TaskUpdated) ProtoMessage()               {}
func (*Event_TaskUpdated) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 2} }

func (m *Event_TaskUpdated) GetFrameworkId() *mesos_v1.FrameworkID {
	if m != nil {
		return m.FrameworkId
	}
	return nil
}

func (m *Event_TaskUpdated) GetStatus() *mesos_v1.TaskStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Event_TaskUpdated) GetState() mesos_v1.TaskState {
	if m != nil && m.State != nil {
		return *m.State
	}
	return mesos_v1.TaskState_TASK_STAGING
}

// Forwarded by the master when a framework becomes known to it.
// This can happen when a new framework registers with the master.
type Event_FrameworkAdded struct {
	Framework        *Response_GetFrameworks_Framework `protobuf:"bytes,1,req,name=framework" json:"framework,omitempty"`
	XXX_unrecognized []byte                            `json:"-"`
}

func (m *Event_FrameworkAdded) Reset()                    { *m = Event_FrameworkAdded{} }
func (m *Event_FrameworkAdded) String() string            { return proto.CompactTextString(m) }
func (*Event_FrameworkAdded) ProtoMessage()               {}
func (*Event_FrameworkAdded) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 3} }

func (m *Event_FrameworkAdded) GetFramework() *Response_GetFrameworks_Framework {
	if m != nil {
		return m.Framework
	}
	return nil
}

// Forwarded by the master when a framework re-registers with the master
// upon a disconnection (network error) or upon a master failover.
type Event_FrameworkUpdated struct {
	Framework        *Response_GetFrameworks_Framework `protobuf:"bytes,1,req,name=framework" json:"framework,omitempty"`
	XXX_unrecognized []byte                            `json:"-"`
}

func (m *Event_FrameworkUpdated) Reset()                    { *m = Event_FrameworkUpdated{} }
func (m *Event_FrameworkUpdated) String() string            { return proto.CompactTextString(m) }
func (*Event_FrameworkUpdated) ProtoMessage()               {}
func (*Event_FrameworkUpdated) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 4} }

func (m *Event_FrameworkUpdated) GetFramework() *Response_GetFrameworks_Framework {
	if m != nil {
		return m.Framework
	}
	return nil
}

// Forwarded by the master when a framework is removed. This can happen when
// a framework is explicitly teardown by the operator or if it fails to
// re-register with the master within the failover timeout.
type Event_FrameworkRemoved struct {
	FrameworkInfo    *mesos_v1.FrameworkInfo `protobuf:"bytes,1,req,name=framework_info,json=framework_info" json:"framework_info,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *Event_FrameworkRemoved) Reset()                    { *m = Event_FrameworkRemoved{} }
func (m *Event_FrameworkRemoved) String() string            { return proto.CompactTextString(m) }
func (*Event_FrameworkRemoved) ProtoMessage()               {}
func (*Event_FrameworkRemoved) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 5} }

func (m *Event_FrameworkRemoved) GetFrameworkInfo() *mesos_v1.FrameworkInfo {
	if m != nil {
		return m.FrameworkInfo
	}
	return nil
}

// Forwarded by the master when an agent becomes known to it.
// This can happen when an agent registered for the first
// time, or reregistered after a master failover.
type Event_AgentAdded struct {
	Agent            *Response_GetAgents_Agent `protobuf:"bytes,1,req,name=agent" json:"agent,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *Event_AgentAdded) Reset()                    { *m = Event_AgentAdded{} }
func (m *Event_AgentAdded) String() string            { return proto.CompactTextString(m) }
func (*Event_AgentAdded) ProtoMessage()               {}
func (*Event_AgentAdded) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 6} }

func (m *Event_AgentAdded) GetAgent() *Response_GetAgents_Agent {
	if m != nil {
		return m.Agent
	}
	return nil
}

// Forwarded by the master when an agent is removed. This
// can happen when the agent is scheduled for maintenance.
//
// NOTE: It's possible that an agent might become
// active once it has been removed, i.e. if the master
// has gc'ed its list of known "dead" agents.
// See MESOS-5965 for context.
type Event_AgentRemoved struct {
	AgentId          *mesos_v1.AgentID `protobuf:"bytes,1,req,name=agent_id,json=agent_id" json:"agent_id,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *Event_AgentRemoved) Reset()                    { *m = Event_AgentRemoved{} }
func (m *Event_AgentRemoved) String() string            { return proto.CompactTextString(m) }
func (*Event_AgentRemoved) ProtoMessage()               {}
func (*Event_AgentRemoved) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 7} }

func (m *Event_AgentRemoved) GetAgentId() *mesos_v1.AgentID {
	if m != nil {
		return m.AgentId
	}
	return nil
}

func init() {
	proto.RegisterType((*Call)(nil), "mesos.v1.master.Call")
	proto.RegisterType((*Call_GetMetrics)(nil), "mesos.v1.master.Call.GetMetrics")
	proto.RegisterType((*Call_SetLoggingLevel)(nil), "mesos.v1.master.Call.SetLoggingLevel")
	proto.RegisterType((*Call_ListFiles)(nil), "mesos.v1.master.Call.ListFiles")
	proto.RegisterType((*Call_ReadFile)(nil), "mesos.v1.master.Call.ReadFile")
	proto.RegisterType((*Call_UpdateWeights)(nil), "mesos.v1.master.Call.UpdateWeights")
	proto.RegisterType((*Call_ReserveResources)(nil), "mesos.v1.master.Call.ReserveResources")
	proto.RegisterType((*Call_UnreserveResources)(nil), "mesos.v1.master.Call.UnreserveResources")
	proto.RegisterType((*Call_CreateVolumes)(nil), "mesos.v1.master.Call.CreateVolumes")
	proto.RegisterType((*Call_DestroyVolumes)(nil), "mesos.v1.master.Call.DestroyVolumes")
	proto.RegisterType((*Call_UpdateMaintenanceSchedule)(nil), "mesos.v1.master.Call.UpdateMaintenanceSchedule")
	proto.RegisterType((*Call_StartMaintenance)(nil), "mesos.v1.master.Call.StartMaintenance")
	proto.RegisterType((*Call_StopMaintenance)(nil), "mesos.v1.master.Call.StopMaintenance")
	proto.RegisterType((*Call_SetQuota)(nil), "mesos.v1.master.Call.SetQuota")
	proto.RegisterType((*Call_RemoveQuota)(nil), "mesos.v1.master.Call.RemoveQuota")
	proto.RegisterType((*Call_Teardown)(nil), "mesos.v1.master.Call.Teardown")
	proto.RegisterType((*Call_MarkAgentGone)(nil), "mesos.v1.master.Call.MarkAgentGone")
	proto.RegisterType((*Response)(nil), "mesos.v1.master.Response")
	proto.RegisterType((*Response_GetHealth)(nil), "mesos.v1.master.Response.GetHealth")
	proto.RegisterType((*Response_GetFlags)(nil), "mesos.v1.master.Response.GetFlags")
	proto.RegisterType((*Response_GetVersion)(nil), "mesos.v1.master.Response.GetVersion")
	proto.RegisterType((*Response_GetMetrics)(nil), "mesos.v1.master.Response.GetMetrics")
	proto.RegisterType((*Response_GetLoggingLevel)(nil), "mesos.v1.master.Response.GetLoggingLevel")
	proto.RegisterType((*Response_ListFiles)(nil), "mesos.v1.master.Response.ListFiles")
	proto.RegisterType((*Response_ReadFile)(nil), "mesos.v1.master.Response.ReadFile")
	proto.RegisterType((*Response_GetState)(nil), "mesos.v1.master.Response.GetState")
	proto.RegisterType((*Response_GetAgents)(nil), "mesos.v1.master.Response.GetAgents")
	proto.RegisterType((*Response_GetAgents_Agent)(nil), "mesos.v1.master.Response.GetAgents.Agent")
	proto.RegisterType((*Response_GetAgents_Agent_ResourceProvider)(nil), "mesos.v1.master.Response.GetAgents.Agent.ResourceProvider")
	proto.RegisterType((*Response_GetFrameworks)(nil), "mesos.v1.master.Response.GetFrameworks")
	proto.RegisterType((*Response_GetFrameworks_Framework)(nil), "mesos.v1.master.Response.GetFrameworks.Framework")
	proto.RegisterType((*Response_GetExecutors)(nil), "mesos.v1.master.Response.GetExecutors")
	proto.RegisterType((*Response_GetExecutors_Executor)(nil), "mesos.v1.master.Response.GetExecutors.Executor")
	proto.RegisterType((*Response_GetTasks)(nil), "mesos.v1.master.Response.GetTasks")
	proto.RegisterType((*Response_GetRoles)(nil), "mesos.v1.master.Response.GetRoles")
	proto.RegisterType((*Response_GetWeights)(nil), "mesos.v1.master.Response.GetWeights")
	proto.RegisterType((*Response_GetMaster)(nil), "mesos.v1.master.Response.GetMaster")
	proto.RegisterType((*Response_GetMaintenanceStatus)(nil), "mesos.v1.master.Response.GetMaintenanceStatus")
	proto.RegisterType((*Response_GetMaintenanceSchedule)(nil), "mesos.v1.master.Response.GetMaintenanceSchedule")
	proto.RegisterType((*Response_GetQuota)(nil), "mesos.v1.master.Response.GetQuota")
	proto.RegisterType((*Event)(nil), "mesos.v1.master.Event")
	proto.RegisterType((*Event_Subscribed)(nil), "mesos.v1.master.Event.Subscribed")
	proto.RegisterType((*Event_TaskAdded)(nil), "mesos.v1.master.Event.TaskAdded")
	proto.RegisterType((*Event_TaskUpdated)(nil), "mesos.v1.master.Event.TaskUpdated")
	proto.RegisterType((*Event_FrameworkAdded)(nil), "mesos.v1.master.Event.FrameworkAdded")
	proto.RegisterType((*Event_FrameworkUpdated)(nil), "mesos.v1.master.Event.FrameworkUpdated")
	proto.RegisterType((*Event_FrameworkRemoved)(nil), "mesos.v1.master.Event.FrameworkRemoved")
	proto.RegisterType((*Event_AgentAdded)(nil), "mesos.v1.master.Event.AgentAdded")
	proto.RegisterType((*Event_AgentRemoved)(nil), "mesos.v1.master.Event.AgentRemoved")
	proto.RegisterEnum("mesos.v1.master.Call_Type", Call_Type_name, Call_Type_value)
	proto.RegisterEnum("mesos.v1.master.Response_Type", Response_Type_name, Response_Type_value)
	proto.RegisterEnum("mesos.v1.master.Event_Type", Event_Type_name, Event_Type_value)
}

func init() { proto.RegisterFile("master.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 3061 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x5a, 0xdb, 0x6e, 0x1b, 0xc7,
	0x19, 0x2e, 0x29, 0x52, 0x22, 0x7f, 0x9e, 0x96, 0x23, 0x45, 0x61, 0xd6, 0x4e, 0x2c, 0x2b, 0x4e,
	0x62, 0x17, 0x81, 0x64, 0x2b, 0x08, 0x12, 0xc4, 0x89, 0x05, 0x4a, 0x5c, 0x4b, 0xac, 0x45, 0xd2,
	0x9e, 0x5d, 0xc9, 0x0d, 0x0a, 0x94, 0x58, 0x73, 0x47, 0xd4, 0xd6, 0x24, 0x97, 0xd9, 0x5d, 0xd2,
	0x75, 0xaf, 0x7a, 0xd1, 0xbb, 0xde, 0xf5, 0x09, 0xfa, 0x00, 0xbd, 0xec, 0x5d, 0x5f, 0xa1, 0xd7,
	0x45, 0xfb, 0x04, 0x05, 0xfa, 0x08, 0x05, 0x0a, 0x14, 0x73, 0xda, 0x03, 0xb9, 0xa4, 0x75, 0x68,
	0x7a, 0x43, 0xcc, 0xfc, 0xf3, 0xcd, 0x37, 0xb3, 0x73, 0xf8, 0xf6, 0xff, 0xff, 0x25, 0x14, 0x87,
	0xa6, 0xe7, 0x13, 0x77, 0x67, 0xec, 0x3a, 0xbe, 0x83, 0x2a, 0x43, 0xe2, 0x39, 0xde, 0xce, 0xf4,
	0xd1, 0x0e, 0x37, 0xab, 0x1b, 0xcc, 0xb0, 0x3b, 0x7d, 0xb4, 0xcb, 0x5b, 0x18, 0x4c, 0xfd, 0x34,
	0xb4, 0x9a, 0xf6, 0xc8, 0x27, 0x23, 0x73, 0xd4, 0x23, 0xd1, 0xb2, 0xc0, 0xa9, 0x01, 0xee, 0x87,
	0x89, 0xe3, 0x9b, 0xfc, 0x97, 0xb7, 0x6d, 0xff, 0xbb, 0x06, 0x99, 0x43, 0x73, 0x30, 0x40, 0x3b,
	0x90, 0xf1, 0xdf, 0x8e, 0x49, 0x2d, 0xb5, 0x95, 0xba, 0x5f, 0xde, 0x53, 0x77, 0x66, 0xa6, 0xb0,
	0x43, 0x41, 0x3b, 0xc6, 0xdb, 0x31, 0xc1, 0x0c, 0x87, 0xea, 0x50, 0xe8, 0x13, 0xbf, 0x3b, 0x24,
	0xbe, 0x6b, 0xf7, 0xbc, 0x5a, 0x7a, 0x2b, 0x75, 0xbf, 0xb0, 0xb7, 0x95, 0xdc, 0xed, 0x88, 0xf8,
	0x2d, 0x8e, 0xc3, 0xd0, 0x0f, 0xca, 0xe8, 0x05, 0x54, 0x3d, 0xe2, 0x77, 0x07, 0x4e, 0xbf, 0x6f,
	0x8f, 0xfa, 0xdd, 0x01, 0x99, 0x92, 0x41, 0x6d, 0x85, 0x11, 0x7d, 0x92, 0x4c, 0xa4, 0x13, 0xff,
	0x84, 0xa3, 0x4f, 0x28, 0x18, 0x57, 0xbc, 0xb8, 0x01, 0x3d, 0x01, 0x18, 0xd8, 0x9e, 0xdf, 0x3d,
	0xb7, 0x07, 0xc4, 0xab, 0x65, 0x18, 0xd7, 0x9d, 0x64, 0xae, 0x13, 0xdb, 0xf3, 0x9f, 0x52, 0x18,
	0xce, 0x0f, 0x64, 0x11, 0x3d, 0x86, 0xbc, 0x4b, 0x4c, 0x8b, 0xf5, 0xaf, 0x65, 0x59, 0xf7, 0x8f,
	0x92, 0xbb, 0x63, 0x62, 0x5a, 0xb4, 0x0f, 0xce, 0xb9, 0xa2, 0x84, 0x7e, 0x06, 0xe5, 0xc9, 0xd8,
	0x32, 0x7d, 0xd2, 0x7d, 0x43, 0xec, 0xfe, 0x85, 0xef, 0xd5, 0x56, 0x19, 0xc3, 0xc7, 0xc9, 0x0c,
	0xa7, 0x0c, 0xfb, 0x92, 0x43, 0x71, 0x69, 0x12, 0xad, 0x22, 0x1d, 0xaa, 0x2e, 0xf1, 0x88, 0x3b,
	0x25, 0x5d, 0x97, 0x78, 0xce, 0xc4, 0xed, 0x11, 0xaf, 0xb6, 0xc6, 0xe8, 0x3e, 0x5d, 0x34, 0x21,
	0x06, 0xc7, 0x12, 0x8d, 0x15, 0x77, 0xc6, 0x82, 0xbe, 0x87, 0xf5, 0xc9, 0x68, 0x9e, 0x36, 0xc7,
	0x68, 0xef, 0x2f, 0x98, 0xe5, 0x68, 0x96, 0x06, 0xa3, 0xc9, 0x9c, 0x8d, 0x3e, 0x7b, 0xcf, 0x25,
	0xf4, 0xd9, 0xa7, 0xce, 0x60, 0x32, 0x24, 0x5e, 0x2d, 0xbf, 0xec, 0xd9, 0x0f, 0x19, 0xf6, 0x8c,
	0x43, 0x71, 0xa9, 0x17, 0xad, 0xa2, 0x16, 0x54, 0x2c, 0xe2, 0xf9, 0xae, 0xf3, 0x36, 0x20, 0x03,
	0x46, 0x76, 0x2f, 0x99, 0xac, 0xc1, 0xc1, 0x92, 0xad, 0x6c, 0xc5, 0xea, 0xc8, 0x81, 0x5b, 0x62,
	0x5b, 0x22, 0x57, 0xa3, 0xeb, 0xf5, 0x2e, 0x88, 0x35, 0x19, 0x90, 0x5a, 0x81, 0x51, 0xef, 0x2e,
	0xdb, 0xa3, 0x56, 0xd8, 0x4f, 0x17, 0xdd, 0xf0, 0x07, 0x93, 0x45, 0x4d, 0x74, 0xef, 0x3c, 0xdf,
	0x74, 0xfd, 0xe8, 0x78, 0xb5, 0xe2, 0xb2, 0xbd, 0xd3, 0x29, 0x3c, 0x42, 0x85, 0x15, 0x6f, 0xc6,
	0x82, 0x9e, 0x83, 0xe2, 0xf9, 0xce, 0x38, 0xc6, 0x59, 0x5a, 0x7a, 0x57, 0x7c, 0x67, 0x1c, 0xa5,
	0xac, 0x78, 0x71, 0x03, 0x3d, 0xeb, 0xf4, 0xfa, 0x31, 0x35, 0xa8, 0x95, 0x97, 0x9d, 0x75, 0x9d,
	0xf8, 0x2f, 0x28, 0x0a, 0xe7, 0x3c, 0x51, 0x42, 0x0d, 0x28, 0xba, 0x64, 0xe8, 0x4c, 0x89, 0xe8,
	0x5f, 0x61, 0xfd, 0xef, 0x2e, 0x3a, 0x9a, 0x14, 0xc9, 0x29, 0x0a, 0x6e, 0x58, 0x41, 0xdf, 0x40,
	0xce, 0x27, 0xa6, 0x6b, 0x39, 0x6f, 0x46, 0x35, 0x65, 0xd9, 0x0c, 0x0c, 0x81, 0xc2, 0x01, 0x1e,
	0x3d, 0x83, 0xca, 0xd0, 0x74, 0x5f, 0x77, 0xcd, 0x3e, 0x19, 0xf9, 0xdd, 0xbe, 0x33, 0x22, 0xb5,
	0xea, 0xb2, 0x23, 0xd7, 0x32, 0xdd, 0xd7, 0x75, 0x8a, 0x3d, 0x72, 0x46, 0x04, 0x97, 0x86, 0xd1,
	0xaa, 0xfa, 0x04, 0x20, 0x14, 0x29, 0xf4, 0x10, 0xd6, 0x7c, 0x7b, 0x48, 0x9c, 0x89, 0xcf, 0xe4,
	0xb0, 0xb0, 0xb7, 0x19, 0x52, 0x36, 0x26, 0xae, 0xe9, 0xdb, 0xce, 0xa8, 0x39, 0x3a, 0x77, 0xb0,
	0x84, 0xa9, 0xbf, 0x80, 0xca, 0x8c, 0x36, 0xa1, 0x0d, 0xc8, 0x72, 0x45, 0x4b, 0x6d, 0xa5, 0xef,
	0x97, 0x30, 0xaf, 0xa0, 0x3d, 0xc8, 0x59, 0x82, 0xa1, 0x96, 0xde, 0x4a, 0x2f, 0xe1, 0x0e, 0x70,
	0xea, 0x1d, 0xc8, 0x07, 0x62, 0x85, 0x10, 0x64, 0xc6, 0xa6, 0x7f, 0xc1, 0x58, 0xf3, 0x98, 0x95,
	0xd5, 0x36, 0xe4, 0xa4, 0x1c, 0x25, 0xb5, 0xa3, 0x4d, 0x58, 0x75, 0xce, 0xcf, 0x3d, 0xe2, 0xb3,
	0x21, 0x33, 0x58, 0xd4, 0xa8, 0x7d, 0x40, 0x46, 0x7d, 0xff, 0x82, 0xa9, 0x6e, 0x06, 0x8b, 0x9a,
	0x7a, 0x0c, 0xa5, 0x98, 0x38, 0xa1, 0xaf, 0xa0, 0xc8, 0x25, 0xad, 0x6b, 0x8f, 0xce, 0x1d, 0xaf,
	0x96, 0xda, 0x5a, 0xb9, 0x5f, 0xd8, 0xdb, 0x08, 0x67, 0xce, 0x81, 0x6c, 0xde, 0x85, 0x37, 0x41,
	0xd9, 0x53, 0x5d, 0x50, 0x66, 0x75, 0x09, 0x7d, 0x0e, 0x39, 0xbe, 0x67, 0xb6, 0xc5, 0x66, 0x59,
	0xd8, 0xab, 0x86, 0x44, 0x6c, 0x4b, 0x9a, 0x0d, 0xbc, 0xc6, 0x20, 0x4d, 0x0b, 0x3d, 0xa4, 0x8a,
	0x2c, 0x95, 0x2a, 0xcd, 0xc6, 0x45, 0x21, 0x5c, 0xb2, 0xe2, 0x10, 0xa4, 0xfa, 0x80, 0xe6, 0x45,
	0xeb, 0x47, 0x1f, 0xf5, 0x35, 0x94, 0x62, 0xa2, 0x76, 0xc5, 0x01, 0x3f, 0x87, 0x35, 0xa9, 0x75,
	0x8b, 0x87, 0x93, 0x10, 0x75, 0x00, 0xe5, 0xb8, 0xe8, 0xfd, 0xa8, 0xa3, 0xbd, 0x84, 0x0f, 0x16,
	0xea, 0x20, 0xbd, 0xc2, 0x81, 0x94, 0xf2, 0x81, 0x63, 0x57, 0x38, 0xf4, 0x45, 0x02, 0xe5, 0x0c,
	0xf0, 0xea, 0x21, 0x28, 0xb3, 0xca, 0x87, 0x76, 0x21, 0x37, 0x34, 0x7b, 0x17, 0xf6, 0x88, 0xc8,
	0x63, 0xb6, 0x1e, 0xf2, 0xb5, 0x78, 0x4b, 0xb3, 0x81, 0x03, 0x90, 0x7a, 0x00, 0x95, 0x19, 0xa9,
	0xbb, 0x3a, 0x47, 0x0b, 0x72, 0x52, 0xe3, 0x50, 0x1d, 0x4a, 0x4c, 0xd2, 0xba, 0x2e, 0xf9, 0x61,
	0x42, 0x3c, 0x5f, 0x3c, 0xd5, 0xed, 0x90, 0x81, 0xfb, 0x4f, 0x5c, 0xce, 0x38, 0x06, 0x17, 0x7f,
	0x88, 0xd4, 0xd4, 0xbb, 0x50, 0x88, 0x48, 0x1e, 0xbd, 0x92, 0xae, 0x23, 0x96, 0x27, 0x8f, 0x59,
	0x59, 0x6d, 0x40, 0x4e, 0x6a, 0x1a, 0xfa, 0x1a, 0x8a, 0xe7, 0xae, 0x39, 0x24, 0x6f, 0x1c, 0xf7,
	0x75, 0xb8, 0x7f, 0xef, 0x85, 0x03, 0x3e, 0x95, 0xad, 0xcd, 0x06, 0x2e, 0x04, 0xd0, 0xa6, 0xa5,
	0x7e, 0x07, 0xa5, 0x98, 0xac, 0x5d, 0xed, 0x18, 0x6c, 0xff, 0x27, 0x03, 0x19, 0xea, 0xd2, 0xa1,
	0x02, 0xac, 0x9d, 0xb6, 0x9f, 0xb5, 0x3b, 0x2f, 0xdb, 0xca, 0x4f, 0x50, 0x19, 0xe0, 0x48, 0x33,
	0xba, 0xc7, 0x5a, 0xfd, 0xc4, 0x38, 0x56, 0x52, 0xa8, 0x04, 0x79, 0x5a, 0x7f, 0x7a, 0x52, 0x3f,
	0xd2, 0x95, 0x34, 0xaa, 0x40, 0x81, 0x56, 0xcf, 0x34, 0xac, 0x37, 0x3b, 0x6d, 0x65, 0x45, 0x1a,
	0x5a, 0x9a, 0x81, 0x9b, 0x87, 0xba, 0x92, 0x41, 0xef, 0x41, 0x95, 0x1a, 0x4e, 0x3a, 0x47, 0x47,
	0xcd, 0xf6, 0x51, 0xf7, 0x44, 0x3b, 0xd3, 0x4e, 0x94, 0x2c, 0x35, 0xeb, 0x73, 0xe6, 0x55, 0x3a,
	0xdc, 0x49, 0x53, 0x37, 0xba, 0x4f, 0x9b, 0x27, 0x9a, 0xae, 0xac, 0xd1, 0xe1, 0xb0, 0x56, 0x6f,
	0xb0, 0xba, 0x92, 0x93, 0xa3, 0xeb, 0x46, 0xdd, 0xd0, 0x94, 0xbc, 0x9c, 0x5c, 0xfd, 0x48, 0x6b,
	0x1b, 0xba, 0x02, 0x08, 0x41, 0x99, 0x4d, 0x0e, 0xd7, 0x5b, 0xda, 0xcb, 0x0e, 0x7e, 0xa6, 0x2b,
	0x05, 0x54, 0x85, 0x12, 0xb5, 0x69, 0x3f, 0xd7, 0x0e, 0x4f, 0x8d, 0x0e, 0xd6, 0x95, 0xa2, 0x64,
	0x31, 0xea, 0xfa, 0x33, 0x5d, 0x29, 0xc9, 0x2a, 0xee, 0xd0, 0x21, 0xcb, 0xf2, 0x09, 0x5e, 0x6a,
	0xcd, 0xa3, 0x63, 0x43, 0x57, 0x2a, 0x94, 0xf5, 0xf4, 0x79, 0xa3, 0x6e, 0x68, 0x81, 0x4d, 0x91,
	0x23, 0xb7, 0xea, 0xba, 0xa1, 0x61, 0xa5, 0x4a, 0x39, 0xf4, 0xd3, 0x03, 0xfd, 0x10, 0x37, 0x0f,
	0x34, 0x05, 0xd1, 0xa7, 0xc3, 0x9a, 0xae, 0xe1, 0x33, 0xad, 0x8b, 0x35, 0xbd, 0x73, 0x8a, 0x0f,
	0x35, 0x5d, 0x59, 0x47, 0xef, 0xc3, 0xfa, 0x69, 0x7b, 0xbe, 0x61, 0x83, 0x0e, 0x71, 0x88, 0x35,
	0x3a, 0xc4, 0x59, 0xe7, 0xe4, 0xb4, 0xa5, 0xe9, 0xca, 0x7b, 0x68, 0x1d, 0x2a, 0x0d, 0x4d, 0x37,
	0x70, 0xe7, 0xfb, 0xc0, 0xb8, 0x89, 0x54, 0xd8, 0xe4, 0xe3, 0x36, 0xdb, 0x86, 0xd6, 0xae, 0xb7,
	0x0f, 0x35, 0xb6, 0x18, 0xa7, 0xba, 0xf2, 0x3e, 0xba, 0x0d, 0xb5, 0xb9, 0xb6, 0xc3, 0x63, 0xad,
	0x71, 0x7a, 0xa2, 0x29, 0x35, 0x74, 0x07, 0x6e, 0x89, 0xa7, 0x48, 0x04, 0x7c, 0xc0, 0x76, 0xc4,
	0xa8, 0xe3, 0x18, 0x81, 0xa2, 0xa2, 0x0d, 0x50, 0x74, 0xa3, 0xf3, 0x3c, 0x66, 0xbd, 0x25, 0xd7,
	0xec, 0xc5, 0x69, 0xc7, 0xa8, 0x2b, 0xb7, 0xd9, 0xe3, 0x07, 0xd5, 0x0f, 0x91, 0x02, 0x45, 0xac,
	0xb5, 0x3a, 0x67, 0x9a, 0xb0, 0x7c, 0x84, 0x8a, 0x90, 0x33, 0xb4, 0x3a, 0x6e, 0xd0, 0x43, 0x75,
	0x87, 0x3e, 0x5a, 0xab, 0x8e, 0x9f, 0xf1, 0x8d, 0xeb, 0x1e, 0x75, 0xda, 0x9a, 0xb2, 0xb5, 0xfd,
	0xdb, 0x07, 0xf4, 0xc5, 0xe5, 0x8d, 0x9d, 0x91, 0x47, 0xd0, 0x5e, 0x2c, 0x00, 0x99, 0xf7, 0x03,
	0x24, 0x30, 0x1a, 0x84, 0x1c, 0x00, 0x8d, 0x27, 0xba, 0x17, 0xc4, 0x1c, 0xf8, 0x17, 0x22, 0x06,
	0xf9, 0x78, 0x71, 0xcf, 0x23, 0xe2, 0x1f, 0x33, 0x28, 0xce, 0xf7, 0x65, 0x11, 0xed, 0x03, 0xad,
	0x74, 0xcf, 0x07, 0x66, 0xdf, 0x13, 0xd1, 0xc7, 0xf6, 0x52, 0x8a, 0xa7, 0x14, 0x89, 0x73, 0x7d,
	0x51, 0x42, 0x1a, 0x8f, 0x84, 0xa6, 0xc4, 0xf5, 0xe8, 0x5b, 0x3d, 0xb3, 0xc0, 0x55, 0x8d, 0x52,
	0x9c, 0x71, 0x2c, 0x8b, 0x86, 0x44, 0x59, 0xd2, 0xc8, 0x80, 0x2a, 0x7b, 0x09, 0x9a, 0xa4, 0xa0,
	0xea, 0x14, 0xaa, 0xfd, 0xb9, 0xa0, 0x8a, 0xc7, 0x21, 0x0f, 0x96, 0x92, 0xc5, 0x03, 0xab, 0xfe,
	0x8c, 0x37, 0x73, 0x10, 0x0b, 0xac, 0xd6, 0xde, 0xb5, 0xd2, 0x89, 0xc1, 0xd5, 0x7e, 0x34, 0xb8,
	0xca, 0xbd, 0x6b, 0xa5, 0x13, 0x02, 0x2c, 0xb1, 0x55, 0x9e, 0x6f, 0xfa, 0x44, 0xc4, 0x17, 0xcb,
	0xb7, 0x4a, 0xa7, 0x48, 0xb6, 0x55, 0xac, 0x24, 0xcf, 0x0b, 0xd3, 0x3f, 0x19, 0x54, 0x2c, 0x3f,
	0x2f, 0x4c, 0x33, 0x3d, 0x76, 0x5e, 0x78, 0x11, 0xb5, 0xa1, 0xcc, 0xce, 0x8b, 0x94, 0x61, 0x4f,
	0x44, 0x10, 0x9f, 0x2d, 0x3f, 0x34, 0x01, 0x1c, 0x97, 0xfa, 0xd1, 0x2a, 0x7a, 0x06, 0xd4, 0xd0,
	0x25, 0xbf, 0x26, 0xbd, 0x89, 0xef, 0xb8, 0xde, 0xc2, 0x48, 0x21, 0x4a, 0xa7, 0x49, 0x34, 0x2e,
	0xf6, 0x23, 0x35, 0xb9, 0x42, 0xbe, 0xe9, 0xbd, 0xf6, 0x44, 0x78, 0xb0, 0x7c, 0x85, 0x0c, 0x8a,
	0x64, 0x2b, 0xc4, 0x4a, 0x92, 0x80, 0xbe, 0xa3, 0x3c, 0x11, 0x14, 0x2c, 0x27, 0xc0, 0x14, 0xc9,
	0x08, 0x58, 0x49, 0x1e, 0x63, 0x19, 0x01, 0x57, 0x2e, 0x71, 0x8c, 0x65, 0x08, 0x4c, 0xf7, 0x46,
	0x7a, 0x9c, 0x62, 0xa7, 0x38, 0x5a, 0xc4, 0x06, 0xcb, 0x77, 0xaa, 0xc5, 0x4c, 0x6c, 0xa7, 0x78,
	0x11, 0x59, 0xb0, 0xc9, 0x39, 0x22, 0x51, 0x9f, 0x6f, 0xfa, 0x13, 0x4f, 0x04, 0x0a, 0x3b, 0xef,
	0xe0, 0x0b, 0x9d, 0x1d, 0xd6, 0x0b, 0x6f, 0xf4, 0x13, 0xac, 0xe8, 0x57, 0x50, 0x9b, 0x1b, 0x45,
	0x3a, 0x44, 0x88, 0x8d, 0xf3, 0xf0, 0xd2, 0xe3, 0x48, 0x17, 0x69, 0xb3, 0x9f, 0x68, 0x97, 0xbb,
	0xc3, 0x43, 0xae, 0xf5, 0x4b, 0xec, 0x8e, 0x08, 0xdb, 0xfa, 0xa2, 0xa4, 0x7e, 0x02, 0xf9, 0x40,
	0x04, 0x51, 0x0d, 0xd6, 0xb8, 0x72, 0xbe, 0x65, 0xbe, 0x42, 0x0e, 0xcb, 0xaa, 0xfa, 0x10, 0x72,
	0x52, 0xe8, 0xd0, 0x3d, 0xc8, 0x72, 0x6d, 0xe4, 0x9e, 0x54, 0x39, 0xe2, 0x96, 0x0c, 0xcc, 0x3e,
	0xe6, 0x8d, 0xea, 0x53, 0x16, 0x40, 0x49, 0x2d, 0xfb, 0x1a, 0x8a, 0x42, 0x0e, 0x59, 0xc0, 0x30,
	0xef, 0xd1, 0x08, 0x20, 0x0f, 0x18, 0xa6, 0x61, 0x45, 0xfd, 0x3a, 0x16, 0x88, 0xfd, 0x14, 0xd6,
	0xa4, 0x1e, 0xf2, 0xd1, 0x95, 0x88, 0x1f, 0xc7, 0x1a, 0xb0, 0x04, 0xa8, 0x9f, 0x41, 0xe5, 0xe8,
	0x32, 0x21, 0x98, 0xfa, 0x24, 0x1a, 0x4e, 0x3d, 0x02, 0xa0, 0x72, 0x14, 0x8b, 0x6b, 0x22, 0xce,
	0x30, 0x05, 0xb1, 0x49, 0xe6, 0xcf, 0x45, 0xc9, 0x53, 0xf7, 0xe2, 0xd1, 0x96, 0x67, 0xff, 0x86,
	0xbb, 0x76, 0x19, 0xcc, 0xca, 0xd4, 0x66, 0x99, 0xbe, 0xc9, 0x62, 0xad, 0x22, 0x66, 0x65, 0xf5,
	0x4f, 0x69, 0xb6, 0xa2, 0x5c, 0x85, 0x62, 0x97, 0x34, 0x75, 0x8d, 0x4b, 0x3a, 0x27, 0x19, 0xe9,
	0x1b, 0x48, 0xc6, 0xbc, 0x9e, 0xad, 0xdc, 0x48, 0xcf, 0xe2, 0x1a, 0x9b, 0xb9, 0x8e, 0xc6, 0xaa,
	0xff, 0x5a, 0x65, 0xe7, 0x54, 0x28, 0x6e, 0x1d, 0x56, 0x05, 0x1b, 0xdf, 0x9f, 0x07, 0x97, 0x60,
	0xe3, 0xce, 0x2e, 0x16, 0x1d, 0xd1, 0x13, 0x50, 0x5c, 0xd2, 0x73, 0xa6, 0xc4, 0x25, 0x96, 0x9c,
	0x5a, 0x7a, 0x36, 0x32, 0xe0, 0xfe, 0x31, 0xdd, 0xed, 0x4a, 0x00, 0x16, 0x13, 0xfa, 0x47, 0x16,
	0xb2, 0xac, 0x88, 0xf6, 0x00, 0x84, 0x87, 0x1d, 0x1e, 0xec, 0x44, 0x8e, 0xbc, 0x29, 0x8b, 0x34,
	0xce, 0x36, 0x7b, 0xbe, 0x3d, 0x25, 0xec, 0x4c, 0xe4, 0xb0, 0xa8, 0xd1, 0x0b, 0x28, 0xbd, 0x86,
	0x15, 0x16, 0x1b, 0xc8, 0x2a, 0x52, 0x60, 0x65, 0x6c, 0x5b, 0x6c, 0xf5, 0xf2, 0x98, 0x16, 0xd1,
	0x63, 0xa8, 0xb8, 0xa4, 0x6f, 0xd3, 0xc7, 0x25, 0x56, 0xd7, 0xb7, 0x87, 0x32, 0x3f, 0x19, 0x39,
	0xad, 0x86, 0x3d, 0xe4, 0xa7, 0xb5, 0x1c, 0x42, 0xa9, 0x0d, 0xed, 0x43, 0xd5, 0x25, 0xb3, 0xdd,
	0x57, 0x17, 0x76, 0x57, 0xa2, 0x60, 0x46, 0xf0, 0x18, 0x2a, 0xbe, 0xe3, 0x9b, 0x83, 0x58, 0x32,
	0x72, 0x51, 0xe0, 0x58, 0x66, 0xd0, 0x30, 0xf4, 0x3e, 0x84, 0x75, 0x73, 0x30, 0x70, 0x7a, 0xa6,
	0x4f, 0xac, 0x58, 0xda, 0x71, 0x11, 0x01, 0x0a, 0xe0, 0x21, 0xc9, 0x3e, 0x54, 0x9d, 0xf3, 0x73,
	0x36, 0xfb, 0x90, 0x22, 0xbf, 0x90, 0x42, 0x11, 0xe0, 0x90, 0xe0, 0x00, 0x8a, 0x3d, 0x73, 0x6c,
	0xbe, 0xb2, 0x07, 0xb6, 0x6f, 0xb3, 0x94, 0xe2, 0x4a, 0x3c, 0x58, 0x0d, 0xb6, 0x6e, 0xe7, 0x50,
	0xe2, 0xde, 0xe2, 0x58, 0x1f, 0x64, 0x03, 0x92, 0x83, 0x77, 0xc7, 0xae, 0x33, 0xb5, 0x2d, 0xe2,
	0xd2, 0xf7, 0x3f, 0x65, 0xfa, 0xe6, 0xd2, 0xa7, 0x32, 0x98, 0xe5, 0x73, 0x41, 0x81, 0xab, 0xee,
	0x8c, 0xc5, 0x53, 0x2f, 0x58, 0xe6, 0x24, 0x66, 0x44, 0x06, 0x6c, 0xce, 0x0d, 0x1f, 0x3d, 0x87,
	0x1f, 0xcd, 0x2f, 0x84, 0xec, 0xcb, 0xf6, 0x75, 0xc3, 0x4d, 0xb0, 0xaa, 0xff, 0x5c, 0x85, 0x52,
	0xec, 0x46, 0xa3, 0x17, 0x00, 0x11, 0x39, 0xe0, 0x97, 0xee, 0xd1, 0x25, 0xe5, 0x20, 0x0c, 0x56,
	0x71, 0x84, 0x04, 0x59, 0xb0, 0xd1, 0x73, 0x86, 0xe3, 0x01, 0xa1, 0x67, 0x20, 0x42, 0x9e, 0xbe,
	0x2e, 0xf9, 0x7a, 0x40, 0x17, 0x99, 0x78, 0x1b, 0x36, 0xc2, 0x6b, 0x1e, 0x53, 0x34, 0x3a, 0xca,
	0xfb, 0x49, 0x11, 0xf5, 0xe8, 0xdc, 0x39, 0x48, 0xd7, 0x52, 0x78, 0x3d, 0xe8, 0x18, 0xf2, 0xa9,
	0x7f, 0xcd, 0x40, 0x3e, 0xa8, 0xa2, 0x27, 0x50, 0x8e, 0xc4, 0xe9, 0xe1, 0xb2, 0x2f, 0xe2, 0xc5,
	0xa5, 0xf3, 0x68, 0x75, 0xa1, 0x0c, 0xdc, 0x86, 0x7c, 0xcf, 0x19, 0x8d, 0x48, 0xcf, 0x27, 0x16,
	0x13, 0x82, 0x1c, 0x0e, 0x0d, 0xb4, 0x35, 0x98, 0x5a, 0xad, 0xc0, 0x5b, 0x03, 0x43, 0x92, 0x2c,
	0x64, 0x6e, 0x26, 0x0b, 0xd9, 0x2b, 0xc8, 0xc2, 0x3e, 0x54, 0x27, 0xa3, 0x2b, 0xe8, 0x4a, 0x14,
	0xcc, 0x08, 0x3e, 0x63, 0x99, 0x49, 0x7a, 0x89, 0xb8, 0x9c, 0x54, 0xc2, 0x5e, 0x1d, 0x6a, 0xc7,
	0xa2, 0x19, 0x7d, 0x07, 0x65, 0x7b, 0x44, 0xd5, 0x91, 0x74, 0x45, 0x07, 0x2e, 0x1f, 0x91, 0xec,
	0x69, 0x93, 0xb7, 0xf3, 0x7e, 0x25, 0x3b, 0x52, 0x5b, 0x28, 0x41, 0xf9, 0x9b, 0x4b, 0x10, 0x5c,
	0x5e, 0x82, 0xd4, 0x3f, 0xa7, 0xa1, 0x18, 0x7d, 0x13, 0xa3, 0x16, 0xe4, 0xc3, 0x97, 0x38, 0xbf,
	0x67, 0xbb, 0x97, 0x7b, 0x89, 0xef, 0xc8, 0x12, 0x0e, 0x19, 0xd0, 0x2f, 0x41, 0x71, 0xdc, 0xf1,
	0x85, 0x39, 0x8a, 0xb9, 0x06, 0xd7, 0x61, 0x65, 0x57, 0xa2, 0xc2, 0xc9, 0x82, 0x56, 0x75, 0x02,
	0x39, 0x59, 0x41, 0x8f, 0xa1, 0x24, 0x07, 0x89, 0xde, 0x85, 0xc8, 0x7e, 0x48, 0x28, 0xdb, 0xfa,
	0x22, 0x89, 0xd4, 0x62, 0x69, 0xaa, 0xf4, 0xbb, 0xd2, 0x54, 0xea, 0x1f, 0xb8, 0xf3, 0xc4, 0x7d,
	0x9f, 0x2f, 0xa0, 0x34, 0x26, 0x23, 0x8b, 0xc6, 0xb6, 0xd2, 0x81, 0x9a, 0x71, 0x4b, 0x29, 0x0e,
	0x17, 0x05, 0x88, 0x77, 0xba, 0x07, 0x59, 0x0e, 0x4e, 0x27, 0x82, 0x79, 0x23, 0x7a, 0xcc, 0x4f,
	0xb3, 0xd9, 0xbb, 0x30, 0x5f, 0x0d, 0x88, 0xa0, 0xcf, 0x26, 0xf6, 0x50, 0x22, 0x40, 0x3e, 0xc4,
	0x57, 0x50, 0x09, 0x05, 0x8e, 0x77, 0x5d, 0x49, 0xec, 0x5a, 0x0e, 0x60, 0xbc, 0xe3, 0x97, 0x50,
	0x14, 0x9b, 0xc6, 0x7b, 0x65, 0x92, 0x7a, 0xb1, 0xfd, 0x28, 0x70, 0x1c, 0xeb, 0x26, 0x5c, 0x74,
	0x1e, 0x73, 0xdd, 0x83, 0x2c, 0x0f, 0xd8, 0xe6, 0xd6, 0x82, 0xb6, 0x63, 0xde, 0xa8, 0x6a, 0xcc,
	0xb5, 0xbe, 0x71, 0x4a, 0xff, 0x77, 0x29, 0xe6, 0x9b, 0x89, 0x18, 0xeb, 0x4b, 0x28, 0xf0, 0x03,
	0x25, 0x0f, 0x41, 0x2a, 0xce, 0xc2, 0x61, 0x8c, 0x05, 0x86, 0x41, 0x19, 0x7d, 0x08, 0xc0, 0x3f,
	0x91, 0x31, 0xc5, 0xa0, 0xee, 0x6b, 0x0a, 0xe7, 0x99, 0x85, 0xc9, 0xc2, 0x5d, 0x28, 0x92, 0x01,
	0x93, 0x3f, 0x0e, 0x58, 0x61, 0x80, 0x82, 0xb0, 0x51, 0x88, 0xaa, 0xc3, 0x46, 0x52, 0x90, 0x86,
	0x1e, 0xc3, 0xaa, 0x08, 0xf2, 0xf8, 0x81, 0xfc, 0x38, 0x39, 0x1b, 0x7d, 0x38, 0x98, 0xd0, 0xc9,
	0x88, 0xc8, 0x4e, 0x74, 0x51, 0x0d, 0xd8, 0x4c, 0x8e, 0xc8, 0x6e, 0x94, 0xe6, 0xde, 0x67, 0x5b,
	0xc5, 0x73, 0xc1, 0x5f, 0xcc, 0x4c, 0xef, 0x56, 0x62, 0x5a, 0x39, 0x3e, 0xad, 0xed, 0xbf, 0xa7,
	0xff, 0x9f, 0x79, 0xda, 0x78, 0x42, 0x76, 0x35, 0x9e, 0x90, 0x5d, 0x8b, 0x27, 0x64, 0x73, 0x33,
	0x09, 0xd9, 0x7c, 0x42, 0x42, 0x16, 0xe6, 0x13, 0xb2, 0x85, 0x78, 0x42, 0xb6, 0x18, 0x4f, 0xc8,
	0x96, 0x66, 0x13, 0xb2, 0xe5, 0x99, 0xe4, 0x6b, 0x65, 0x49, 0x52, 0x54, 0x59, 0x9a, 0x14, 0xad,
	0xc6, 0xd3, 0x98, 0x68, 0xfb, 0x6f, 0x45, 0xc8, 0x6a, 0x53, 0xea, 0xd8, 0xef, 0xc6, 0xf2, 0x8f,
	0xb7, 0xe6, 0x04, 0x93, 0xa1, 0xe2, 0xff, 0x80, 0x00, 0x6f, 0xf2, 0xca, 0xeb, 0xb9, 0xf6, 0x2b,
	0x62, 0x89, 0x10, 0xec, 0xee, 0x82, 0x6e, 0x7a, 0x00, 0xc4, 0x91, 0x4e, 0x68, 0x1f, 0x80, 0x5e,
	0xfa, 0xae, 0x69, 0x59, 0xec, 0xd5, 0x9f, 0xfc, 0x1f, 0x0a, 0x31, 0xb2, 0xe9, 0xbd, 0xae, 0x53,
	0x1c, 0xce, 0xfb, 0xb2, 0x88, 0x34, 0x28, 0x32, 0x02, 0xfe, 0x31, 0xda, 0x12, 0xef, 0xfe, 0xed,
	0x25, 0x14, 0xfc, 0x4b, 0x8e, 0x85, 0x0b, 0x7e, 0x58, 0x41, 0x07, 0x50, 0xe0, 0x7a, 0xcc, 0x27,
	0x92, 0x5d, 0xfa, 0x2c, 0x4c, 0x9f, 0xf9, 0x4c, 0x78, 0x28, 0xc4, 0xa7, 0x72, 0x0c, 0x25, 0xce,
	0xc1, 0x3f, 0xf0, 0x5a, 0x0b, 0xff, 0xfc, 0x10, 0x61, 0xe1, 0x5f, 0x49, 0x2c, 0x5c, 0x34, 0x23,
	0x35, 0xd4, 0x86, 0x4a, 0xe8, 0x67, 0xf1, 0x19, 0xad, 0x2d, 0xf8, 0xd2, 0xcd, 0xb9, 0x02, 0xaf,
	0x8b, 0xcf, 0x2a, 0xf4, 0xd2, 0xf8, 0xcc, 0x0c, 0xa8, 0x86, 0x7c, 0x72, 0xa5, 0x72, 0x0b, 0x82,
	0xdc, 0x19, 0x46, 0xb9, 0x5c, 0xca, 0xf9, 0x8c, 0x25, 0xce, 0x2a, 0x9f, 0x39, 0x7f, 0x39, 0x56,
	0xf9, 0xdc, 0x21, 0xab, 0xb0, 0xa8, 0xbf, 0x4f, 0x01, 0xe8, 0xd1, 0x03, 0x12, 0xc9, 0x78, 0xa6,
	0xae, 0x91, 0xf1, 0xfc, 0x16, 0xd4, 0x0b, 0x62, 0xba, 0xfe, 0x2b, 0x62, 0x52, 0xa5, 0xf7, 0x89,
	0x3b, 0x35, 0x07, 0x5d, 0x8f, 0xf4, 0x9c, 0x91, 0xe5, 0x09, 0xe1, 0xad, 0x05, 0x88, 0xa6, 0x00,
	0xe8, 0xbc, 0x5d, 0xdd, 0x85, 0x7c, 0x70, 0xec, 0xd0, 0x36, 0x64, 0xe8, 0x99, 0x11, 0xc2, 0x35,
	0xfb, 0x5a, 0x63, 0x6d, 0xea, 0x1f, 0x53, 0x50, 0x88, 0x9c, 0xb2, 0xeb, 0x7f, 0xda, 0x42, 0x9f,
	0x07, 0x42, 0xc9, 0x1d, 0x84, 0x8d, 0xf8, 0x78, 0x71, 0x85, 0x44, 0x0f, 0x20, 0xcb, 0xd7, 0x88,
	0xba, 0xcf, 0xe5, 0x68, 0x40, 0x2e, 0xc1, 0x04, 0x73, 0x84, 0x6a, 0x42, 0x39, 0x7e, 0x5e, 0x50,
	0x07, 0xf2, 0xc1, 0xc8, 0x62, 0x86, 0xd7, 0x08, 0x48, 0x42, 0x0e, 0xb5, 0x07, 0xca, 0xec, 0x01,
	0xfa, 0xdf, 0x0f, 0x82, 0x23, 0x83, 0xc8, 0x9b, 0x73, 0xc3, 0x08, 0x45, 0x6d, 0x01, 0x84, 0xb7,
	0x1b, 0xed, 0x43, 0x96, 0xdd, 0x4b, 0x41, 0x72, 0x85, 0xb4, 0x0b, 0xef, 0xa7, 0x7e, 0x0b, 0xc5,
	0xe8, 0x35, 0xbf, 0xe2, 0xd7, 0xc9, 0xbf, 0xa4, 0x16, 0xbc, 0xf5, 0x82, 0xcf, 0x6e, 0x0d, 0x25,
	0x45, 0xeb, 0xf4, 0x25, 0xd2, 0xad, 0x37, 0x1a, 0x5a, 0x43, 0x49, 0x23, 0x05, 0x8a, 0xac, 0xce,
	0xbf, 0x7c, 0x35, 0xf8, 0x7b, 0x8f, 0x7f, 0x75, 0xe2, 0x90, 0x0c, 0x7d, 0x1d, 0x71, 0x03, 0xff,
	0x62, 0xd5, 0x50, 0xb2, 0x68, 0x1d, 0x2a, 0xc1, 0x1b, 0x4b, 0xe0, 0x56, 0xe9, 0xfb, 0x31, 0x34,
	0x4a, 0xbe, 0xb5, 0xb8, 0x59, 0x52, 0xb0, 0x0f, 0x95, 0xc7, 0x5a, 0x1d, 0x1b, 0x07, 0x5a, 0xdd,
	0x50, 0xf2, 0x07, 0xf7, 0x40, 0x75, 0xdc, 0xfe, 0x8e, 0x39, 0x36, 0x7b, 0x17, 0x64, 0x76, 0xe5,
	0x0e, 0x56, 0x9f, 0xbb, 0x8e, 0xef, 0x78, 0xff, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x86, 0x84, 0x77,
	0x0f, 0xf8, 0x27, 0x00, 0x00,
}
