// Code generated by protoc-gen-go. DO NOT EDIT.
// source: agent.proto

/*
Package mesos_v1_agent is a generated protocol buffer package.

It is generated from these files:
	agent.proto

It has these top-level messages:
	Call
	Response
	ProcessIO
*/
package mesos_v1_agent

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import mesos_v1 "github.com/mesos/go-proto/mesos/v1"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// If a call of type `Call::FOO` requires additional parameters they can be
// included in the corresponding `Call::Foo` message. Similarly, if a call
// receives a synchronous response it will be returned as a `Response`
// message of type `Response::FOO`; see `Call::LaunchNestedContainerSession`
// and `Call::AttachContainerOutput` for exceptions.
type Call_Type int32

const (
	Call_UNKNOWN           Call_Type = 0
	Call_GET_HEALTH        Call_Type = 1
	Call_GET_FLAGS         Call_Type = 2
	Call_GET_VERSION       Call_Type = 3
	Call_GET_METRICS       Call_Type = 4
	Call_GET_LOGGING_LEVEL Call_Type = 5
	Call_SET_LOGGING_LEVEL Call_Type = 6
	Call_LIST_FILES        Call_Type = 7
	Call_READ_FILE         Call_Type = 8
	Call_GET_STATE         Call_Type = 9
	Call_GET_CONTAINERS    Call_Type = 10
	// Retrieves the information about known frameworks.
	Call_GET_FRAMEWORKS Call_Type = 11
	// Retrieves the information about known executors.
	Call_GET_EXECUTORS Call_Type = 12
	// Retrieves the information about known tasks.
	Call_GET_TASKS Call_Type = 13
	// Retrieves the agent information.
	Call_GET_AGENT Call_Type = 20
	// Retrieves the information about known resource providers.
	Call_GET_RESOURCE_PROVIDERS Call_Type = 26
	// Calls for managing nested containers underneath an executor's container.
	// Some of these calls are deprecated in favor of the calls
	// for both standalone or nested containers further below.
	Call_LAUNCH_NESTED_CONTAINER Call_Type = 14
	Call_WAIT_NESTED_CONTAINER   Call_Type = 15
	Call_KILL_NESTED_CONTAINER   Call_Type = 16
	Call_REMOVE_NESTED_CONTAINER Call_Type = 21
	// See 'LaunchNestedContainerSession' below.
	Call_LAUNCH_NESTED_CONTAINER_SESSION Call_Type = 17
	Call_ATTACH_CONTAINER_INPUT          Call_Type = 18
	Call_ATTACH_CONTAINER_OUTPUT         Call_Type = 19
	// Calls for managing standalone containers
	// or containers nested underneath another container.
	Call_LAUNCH_CONTAINER Call_Type = 22
	Call_WAIT_CONTAINER   Call_Type = 23
	Call_KILL_CONTAINER   Call_Type = 24
	Call_REMOVE_CONTAINER Call_Type = 25
)

var Call_Type_name = map[int32]string{
	0:  "UNKNOWN",
	1:  "GET_HEALTH",
	2:  "GET_FLAGS",
	3:  "GET_VERSION",
	4:  "GET_METRICS",
	5:  "GET_LOGGING_LEVEL",
	6:  "SET_LOGGING_LEVEL",
	7:  "LIST_FILES",
	8:  "READ_FILE",
	9:  "GET_STATE",
	10: "GET_CONTAINERS",
	11: "GET_FRAMEWORKS",
	12: "GET_EXECUTORS",
	13: "GET_TASKS",
	20: "GET_AGENT",
	26: "GET_RESOURCE_PROVIDERS",
	14: "LAUNCH_NESTED_CONTAINER",
	15: "WAIT_NESTED_CONTAINER",
	16: "KILL_NESTED_CONTAINER",
	21: "REMOVE_NESTED_CONTAINER",
	17: "LAUNCH_NESTED_CONTAINER_SESSION",
	18: "ATTACH_CONTAINER_INPUT",
	19: "ATTACH_CONTAINER_OUTPUT",
	22: "LAUNCH_CONTAINER",
	23: "WAIT_CONTAINER",
	24: "KILL_CONTAINER",
	25: "REMOVE_CONTAINER",
}
var Call_Type_value = map[string]int32{
	"UNKNOWN":                         0,
	"GET_HEALTH":                      1,
	"GET_FLAGS":                       2,
	"GET_VERSION":                     3,
	"GET_METRICS":                     4,
	"GET_LOGGING_LEVEL":               5,
	"SET_LOGGING_LEVEL":               6,
	"LIST_FILES":                      7,
	"READ_FILE":                       8,
	"GET_STATE":                       9,
	"GET_CONTAINERS":                  10,
	"GET_FRAMEWORKS":                  11,
	"GET_EXECUTORS":                   12,
	"GET_TASKS":                       13,
	"GET_AGENT":                       20,
	"GET_RESOURCE_PROVIDERS":          26,
	"LAUNCH_NESTED_CONTAINER":         14,
	"WAIT_NESTED_CONTAINER":           15,
	"KILL_NESTED_CONTAINER":           16,
	"REMOVE_NESTED_CONTAINER":         21,
	"LAUNCH_NESTED_CONTAINER_SESSION": 17,
	"ATTACH_CONTAINER_INPUT":          18,
	"ATTACH_CONTAINER_OUTPUT":         19,
	"LAUNCH_CONTAINER":                22,
	"WAIT_CONTAINER":                  23,
	"KILL_CONTAINER":                  24,
	"REMOVE_CONTAINER":                25,
}

func (x Call_Type) Enum() *Call_Type {
	p := new(Call_Type)
	*p = x
	return p
}
func (x Call_Type) String() string {
	return proto.EnumName(Call_Type_name, int32(x))
}
func (x *Call_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Call_Type_value, data, "Call_Type")
	if err != nil {
		return err
	}
	*x = Call_Type(value)
	return nil
}
func (Call_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type Call_AttachContainerInput_Type int32

const (
	Call_AttachContainerInput_UNKNOWN      Call_AttachContainerInput_Type = 0
	Call_AttachContainerInput_CONTAINER_ID Call_AttachContainerInput_Type = 1
	Call_AttachContainerInput_PROCESS_IO   Call_AttachContainerInput_Type = 2
)

var Call_AttachContainerInput_Type_name = map[int32]string{
	0: "UNKNOWN",
	1: "CONTAINER_ID",
	2: "PROCESS_IO",
}
var Call_AttachContainerInput_Type_value = map[string]int32{
	"UNKNOWN":      0,
	"CONTAINER_ID": 1,
	"PROCESS_IO":   2,
}

func (x Call_AttachContainerInput_Type) Enum() *Call_AttachContainerInput_Type {
	p := new(Call_AttachContainerInput_Type)
	*p = x
	return p
}
func (x Call_AttachContainerInput_Type) String() string {
	return proto.EnumName(Call_AttachContainerInput_Type_name, int32(x))
}
func (x *Call_AttachContainerInput_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Call_AttachContainerInput_Type_value, data, "Call_AttachContainerInput_Type")
	if err != nil {
		return err
	}
	*x = Call_AttachContainerInput_Type(value)
	return nil
}
func (Call_AttachContainerInput_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 9, 0}
}

// Each of the responses of type `FOO` corresponds to `Foo` message below.
type Response_Type int32

const (
	Response_UNKNOWN                Response_Type = 0
	Response_GET_HEALTH             Response_Type = 1
	Response_GET_FLAGS              Response_Type = 2
	Response_GET_VERSION            Response_Type = 3
	Response_GET_METRICS            Response_Type = 4
	Response_GET_LOGGING_LEVEL      Response_Type = 5
	Response_LIST_FILES             Response_Type = 6
	Response_READ_FILE              Response_Type = 7
	Response_GET_STATE              Response_Type = 8
	Response_GET_CONTAINERS         Response_Type = 9
	Response_GET_FRAMEWORKS         Response_Type = 10
	Response_GET_EXECUTORS          Response_Type = 11
	Response_GET_TASKS              Response_Type = 12
	Response_GET_AGENT              Response_Type = 14
	Response_GET_RESOURCE_PROVIDERS Response_Type = 16
	Response_WAIT_NESTED_CONTAINER  Response_Type = 13
	Response_WAIT_CONTAINER         Response_Type = 15
)

var Response_Type_name = map[int32]string{
	0:  "UNKNOWN",
	1:  "GET_HEALTH",
	2:  "GET_FLAGS",
	3:  "GET_VERSION",
	4:  "GET_METRICS",
	5:  "GET_LOGGING_LEVEL",
	6:  "LIST_FILES",
	7:  "READ_FILE",
	8:  "GET_STATE",
	9:  "GET_CONTAINERS",
	10: "GET_FRAMEWORKS",
	11: "GET_EXECUTORS",
	12: "GET_TASKS",
	14: "GET_AGENT",
	16: "GET_RESOURCE_PROVIDERS",
	13: "WAIT_NESTED_CONTAINER",
	15: "WAIT_CONTAINER",
}
var Response_Type_value = map[string]int32{
	"UNKNOWN":                0,
	"GET_HEALTH":             1,
	"GET_FLAGS":              2,
	"GET_VERSION":            3,
	"GET_METRICS":            4,
	"GET_LOGGING_LEVEL":      5,
	"LIST_FILES":             6,
	"READ_FILE":              7,
	"GET_STATE":              8,
	"GET_CONTAINERS":         9,
	"GET_FRAMEWORKS":         10,
	"GET_EXECUTORS":          11,
	"GET_TASKS":              12,
	"GET_AGENT":              14,
	"GET_RESOURCE_PROVIDERS": 16,
	"WAIT_NESTED_CONTAINER":  13,
	"WAIT_CONTAINER":         15,
}

func (x Response_Type) Enum() *Response_Type {
	p := new(Response_Type)
	*p = x
	return p
}
func (x Response_Type) String() string {
	return proto.EnumName(Response_Type_name, int32(x))
}
func (x *Response_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Response_Type_value, data, "Response_Type")
	if err != nil {
		return err
	}
	*x = Response_Type(value)
	return nil
}
func (Response_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

type ProcessIO_Type int32

const (
	ProcessIO_UNKNOWN ProcessIO_Type = 0
	ProcessIO_DATA    ProcessIO_Type = 1
	ProcessIO_CONTROL ProcessIO_Type = 2
)

var ProcessIO_Type_name = map[int32]string{
	0: "UNKNOWN",
	1: "DATA",
	2: "CONTROL",
}
var ProcessIO_Type_value = map[string]int32{
	"UNKNOWN": 0,
	"DATA":    1,
	"CONTROL": 2,
}

func (x ProcessIO_Type) Enum() *ProcessIO_Type {
	p := new(ProcessIO_Type)
	*p = x
	return p
}
func (x ProcessIO_Type) String() string {
	return proto.EnumName(ProcessIO_Type_name, int32(x))
}
func (x *ProcessIO_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProcessIO_Type_value, data, "ProcessIO_Type")
	if err != nil {
		return err
	}
	*x = ProcessIO_Type(value)
	return nil
}
func (ProcessIO_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

type ProcessIO_Data_Type int32

const (
	ProcessIO_Data_UNKNOWN ProcessIO_Data_Type = 0
	ProcessIO_Data_STDIN   ProcessIO_Data_Type = 1
	ProcessIO_Data_STDOUT  ProcessIO_Data_Type = 2
	ProcessIO_Data_STDERR  ProcessIO_Data_Type = 3
)

var ProcessIO_Data_Type_name = map[int32]string{
	0: "UNKNOWN",
	1: "STDIN",
	2: "STDOUT",
	3: "STDERR",
}
var ProcessIO_Data_Type_value = map[string]int32{
	"UNKNOWN": 0,
	"STDIN":   1,
	"STDOUT":  2,
	"STDERR":  3,
}

func (x ProcessIO_Data_Type) Enum() *ProcessIO_Data_Type {
	p := new(ProcessIO_Data_Type)
	*p = x
	return p
}
func (x ProcessIO_Data_Type) String() string {
	return proto.EnumName(ProcessIO_Data_Type_name, int32(x))
}
func (x *ProcessIO_Data_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProcessIO_Data_Type_value, data, "ProcessIO_Data_Type")
	if err != nil {
		return err
	}
	*x = ProcessIO_Data_Type(value)
	return nil
}
func (ProcessIO_Data_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0, 0} }

type ProcessIO_Control_Type int32

const (
	ProcessIO_Control_UNKNOWN   ProcessIO_Control_Type = 0
	ProcessIO_Control_TTY_INFO  ProcessIO_Control_Type = 1
	ProcessIO_Control_HEARTBEAT ProcessIO_Control_Type = 2
)

var ProcessIO_Control_Type_name = map[int32]string{
	0: "UNKNOWN",
	1: "TTY_INFO",
	2: "HEARTBEAT",
}
var ProcessIO_Control_Type_value = map[string]int32{
	"UNKNOWN":   0,
	"TTY_INFO":  1,
	"HEARTBEAT": 2,
}

func (x ProcessIO_Control_Type) Enum() *ProcessIO_Control_Type {
	p := new(ProcessIO_Control_Type)
	*p = x
	return p
}
func (x ProcessIO_Control_Type) String() string {
	return proto.EnumName(ProcessIO_Control_Type_name, int32(x))
}
func (x *ProcessIO_Control_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProcessIO_Control_Type_value, data, "ProcessIO_Control_Type")
	if err != nil {
		return err
	}
	*x = ProcessIO_Control_Type(value)
	return nil
}
func (ProcessIO_Control_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 1, 0} }

// *
// Calls that can be sent to the v1 agent API.
//
// A call is described using the standard protocol buffer "union"
// trick, see
// https://developers.google.com/protocol-buffers/docs/techniques#union.
type Call struct {
	Type                         *Call_Type                         `protobuf:"varint,1,opt,name=type,enum=mesos.v1.agent.Call_Type" json:"type,omitempty"`
	GetMetrics                   *Call_GetMetrics                   `protobuf:"bytes,2,opt,name=get_metrics,json=get_metrics" json:"get_metrics,omitempty"`
	SetLoggingLevel              *Call_SetLoggingLevel              `protobuf:"bytes,3,opt,name=set_logging_level,json=set_logging_level" json:"set_logging_level,omitempty"`
	ListFiles                    *Call_ListFiles                    `protobuf:"bytes,4,opt,name=list_files,json=list_files" json:"list_files,omitempty"`
	ReadFile                     *Call_ReadFile                     `protobuf:"bytes,5,opt,name=read_file,json=read_file" json:"read_file,omitempty"`
	LaunchNestedContainer        *Call_LaunchNestedContainer        `protobuf:"bytes,6,opt,name=launch_nested_container,json=launch_nested_container" json:"launch_nested_container,omitempty"`
	WaitNestedContainer          *Call_WaitNestedContainer          `protobuf:"bytes,7,opt,name=wait_nested_container,json=wait_nested_container" json:"wait_nested_container,omitempty"`
	KillNestedContainer          *Call_KillNestedContainer          `protobuf:"bytes,8,opt,name=kill_nested_container,json=kill_nested_container" json:"kill_nested_container,omitempty"`
	RemoveNestedContainer        *Call_RemoveNestedContainer        `protobuf:"bytes,12,opt,name=remove_nested_container,json=remove_nested_container" json:"remove_nested_container,omitempty"`
	LaunchNestedContainerSession *Call_LaunchNestedContainerSession `protobuf:"bytes,9,opt,name=launch_nested_container_session,json=launch_nested_container_session" json:"launch_nested_container_session,omitempty"`
	AttachContainerInput         *Call_AttachContainerInput         `protobuf:"bytes,10,opt,name=attach_container_input,json=attach_container_input" json:"attach_container_input,omitempty"`
	AttachContainerOutput        *Call_AttachContainerOutput        `protobuf:"bytes,11,opt,name=attach_container_output,json=attach_container_output" json:"attach_container_output,omitempty"`
	LaunchContainer              *Call_LaunchContainer              `protobuf:"bytes,13,opt,name=launch_container,json=launch_container" json:"launch_container,omitempty"`
	WaitContainer                *Call_WaitContainer                `protobuf:"bytes,14,opt,name=wait_container,json=wait_container" json:"wait_container,omitempty"`
	KillContainer                *Call_KillContainer                `protobuf:"bytes,15,opt,name=kill_container,json=kill_container" json:"kill_container,omitempty"`
	RemoveContainer              *Call_RemoveContainer              `protobuf:"bytes,16,opt,name=remove_container,json=remove_container" json:"remove_container,omitempty"`
	XXX_unrecognized             []byte                             `json:"-"`
}

func (m *Call) Reset()                    { *m = Call{} }
func (m *Call) String() string            { return proto.CompactTextString(m) }
func (*Call) ProtoMessage()               {}
func (*Call) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Call) GetType() Call_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Call_UNKNOWN
}

func (m *Call) GetGetMetrics() *Call_GetMetrics {
	if m != nil {
		return m.GetMetrics
	}
	return nil
}

func (m *Call) GetSetLoggingLevel() *Call_SetLoggingLevel {
	if m != nil {
		return m.SetLoggingLevel
	}
	return nil
}

func (m *Call) GetListFiles() *Call_ListFiles {
	if m != nil {
		return m.ListFiles
	}
	return nil
}

func (m *Call) GetReadFile() *Call_ReadFile {
	if m != nil {
		return m.ReadFile
	}
	return nil
}

func (m *Call) GetLaunchNestedContainer() *Call_LaunchNestedContainer {
	if m != nil {
		return m.LaunchNestedContainer
	}
	return nil
}

func (m *Call) GetWaitNestedContainer() *Call_WaitNestedContainer {
	if m != nil {
		return m.WaitNestedContainer
	}
	return nil
}

func (m *Call) GetKillNestedContainer() *Call_KillNestedContainer {
	if m != nil {
		return m.KillNestedContainer
	}
	return nil
}

func (m *Call) GetRemoveNestedContainer() *Call_RemoveNestedContainer {
	if m != nil {
		return m.RemoveNestedContainer
	}
	return nil
}

func (m *Call) GetLaunchNestedContainerSession() *Call_LaunchNestedContainerSession {
	if m != nil {
		return m.LaunchNestedContainerSession
	}
	return nil
}

func (m *Call) GetAttachContainerInput() *Call_AttachContainerInput {
	if m != nil {
		return m.AttachContainerInput
	}
	return nil
}

func (m *Call) GetAttachContainerOutput() *Call_AttachContainerOutput {
	if m != nil {
		return m.AttachContainerOutput
	}
	return nil
}

func (m *Call) GetLaunchContainer() *Call_LaunchContainer {
	if m != nil {
		return m.LaunchContainer
	}
	return nil
}

func (m *Call) GetWaitContainer() *Call_WaitContainer {
	if m != nil {
		return m.WaitContainer
	}
	return nil
}

func (m *Call) GetKillContainer() *Call_KillContainer {
	if m != nil {
		return m.KillContainer
	}
	return nil
}

func (m *Call) GetRemoveContainer() *Call_RemoveContainer {
	if m != nil {
		return m.RemoveContainer
	}
	return nil
}

// Provides a snapshot of the current metrics tracked by the agent.
type Call_GetMetrics struct {
	// If set, `timeout` would be used to determines the maximum amount of time
	// the API will take to respond. If the timeout is exceeded, some metrics
	// may not be included in the response.
	Timeout          *mesos_v1.DurationInfo `protobuf:"bytes,1,opt,name=timeout" json:"timeout,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *Call_GetMetrics) Reset()                    { *m = Call_GetMetrics{} }
func (m *Call_GetMetrics) String() string            { return proto.CompactTextString(m) }
func (*Call_GetMetrics) ProtoMessage()               {}
func (*Call_GetMetrics) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

func (m *Call_GetMetrics) GetTimeout() *mesos_v1.DurationInfo {
	if m != nil {
		return m.Timeout
	}
	return nil
}

// Sets the logging verbosity level for a specified duration. Mesos uses
// [glog](https://github.com/google/glog) for logging. The library only uses
// verbose logging which means nothing will be output unless the verbosity
// level is set (by default it's 0, libprocess uses levels 1, 2, and 3).
type Call_SetLoggingLevel struct {
	// The verbosity level.
	Level *uint32 `protobuf:"varint,1,req,name=level" json:"level,omitempty"`
	// The duration to keep verbosity level toggled. After this duration, the
	// verbosity level of log would revert to the original level.
	Duration         *mesos_v1.DurationInfo `protobuf:"bytes,2,req,name=duration" json:"duration,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *Call_SetLoggingLevel) Reset()                    { *m = Call_SetLoggingLevel{} }
func (m *Call_SetLoggingLevel) String() string            { return proto.CompactTextString(m) }
func (*Call_SetLoggingLevel) ProtoMessage()               {}
func (*Call_SetLoggingLevel) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 1} }

func (m *Call_SetLoggingLevel) GetLevel() uint32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *Call_SetLoggingLevel) GetDuration() *mesos_v1.DurationInfo {
	if m != nil {
		return m.Duration
	}
	return nil
}

// Provides the file listing for a directory.
type Call_ListFiles struct {
	Path             *string `protobuf:"bytes,1,req,name=path" json:"path,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Call_ListFiles) Reset()                    { *m = Call_ListFiles{} }
func (m *Call_ListFiles) String() string            { return proto.CompactTextString(m) }
func (*Call_ListFiles) ProtoMessage()               {}
func (*Call_ListFiles) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 2} }

func (m *Call_ListFiles) GetPath() string {
	if m != nil && m.Path != nil {
		return *m.Path
	}
	return ""
}

// Reads data from a file.
type Call_ReadFile struct {
	// The path of file.
	Path *string `protobuf:"bytes,1,req,name=path" json:"path,omitempty"`
	// Initial offset in file to start reading from.
	Offset *uint64 `protobuf:"varint,2,req,name=offset" json:"offset,omitempty"`
	// The maximum number of bytes to read. The read length is capped at 16
	// memory pages.
	Length           *uint64 `protobuf:"varint,3,opt,name=length" json:"length,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Call_ReadFile) Reset()                    { *m = Call_ReadFile{} }
func (m *Call_ReadFile) String() string            { return proto.CompactTextString(m) }
func (*Call_ReadFile) ProtoMessage()               {}
func (*Call_ReadFile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 3} }

func (m *Call_ReadFile) GetPath() string {
	if m != nil && m.Path != nil {
		return *m.Path
	}
	return ""
}

func (m *Call_ReadFile) GetOffset() uint64 {
	if m != nil && m.Offset != nil {
		return *m.Offset
	}
	return 0
}

func (m *Call_ReadFile) GetLength() uint64 {
	if m != nil && m.Length != nil {
		return *m.Length
	}
	return 0
}

// Deprecated in favor of `LaunchContainer`.
type Call_LaunchNestedContainer struct {
	ContainerId      *mesos_v1.ContainerID   `protobuf:"bytes,1,req,name=container_id,json=container_id" json:"container_id,omitempty"`
	Command          *mesos_v1.CommandInfo   `protobuf:"bytes,2,opt,name=command" json:"command,omitempty"`
	Container        *mesos_v1.ContainerInfo `protobuf:"bytes,3,opt,name=container" json:"container,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *Call_LaunchNestedContainer) Reset()                    { *m = Call_LaunchNestedContainer{} }
func (m *Call_LaunchNestedContainer) String() string            { return proto.CompactTextString(m) }
func (*Call_LaunchNestedContainer) ProtoMessage()               {}
func (*Call_LaunchNestedContainer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 4} }

func (m *Call_LaunchNestedContainer) GetContainerId() *mesos_v1.ContainerID {
	if m != nil {
		return m.ContainerId
	}
	return nil
}

func (m *Call_LaunchNestedContainer) GetCommand() *mesos_v1.CommandInfo {
	if m != nil {
		return m.Command
	}
	return nil
}

func (m *Call_LaunchNestedContainer) GetContainer() *mesos_v1.ContainerInfo {
	if m != nil {
		return m.Container
	}
	return nil
}

// Deprecated in favor of `WaitContainer`.
type Call_WaitNestedContainer struct {
	ContainerId      *mesos_v1.ContainerID `protobuf:"bytes,1,req,name=container_id,json=container_id" json:"container_id,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *Call_WaitNestedContainer) Reset()                    { *m = Call_WaitNestedContainer{} }
func (m *Call_WaitNestedContainer) String() string            { return proto.CompactTextString(m) }
func (*Call_WaitNestedContainer) ProtoMessage()               {}
func (*Call_WaitNestedContainer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 5} }

func (m *Call_WaitNestedContainer) GetContainerId() *mesos_v1.ContainerID {
	if m != nil {
		return m.ContainerId
	}
	return nil
}

// Deprecated in favor of `KillContainer`.
type Call_KillNestedContainer struct {
	ContainerId      *mesos_v1.ContainerID `protobuf:"bytes,1,req,name=container_id,json=container_id" json:"container_id,omitempty"`
	Signal           *int32                `protobuf:"varint,2,opt,name=signal" json:"signal,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *Call_KillNestedContainer) Reset()                    { *m = Call_KillNestedContainer{} }
func (m *Call_KillNestedContainer) String() string            { return proto.CompactTextString(m) }
func (*Call_KillNestedContainer) ProtoMessage()               {}
func (*Call_KillNestedContainer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 6} }

func (m *Call_KillNestedContainer) GetContainerId() *mesos_v1.ContainerID {
	if m != nil {
		return m.ContainerId
	}
	return nil
}

func (m *Call_KillNestedContainer) GetSignal() int32 {
	if m != nil && m.Signal != nil {
		return *m.Signal
	}
	return 0
}

// Deprecated in favor of `RemoveContainer`.
type Call_RemoveNestedContainer struct {
	ContainerId      *mesos_v1.ContainerID `protobuf:"bytes,1,req,name=container_id,json=container_id" json:"container_id,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *Call_RemoveNestedContainer) Reset()                    { *m = Call_RemoveNestedContainer{} }
func (m *Call_RemoveNestedContainer) String() string            { return proto.CompactTextString(m) }
func (*Call_RemoveNestedContainer) ProtoMessage()               {}
func (*Call_RemoveNestedContainer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 7} }

func (m *Call_RemoveNestedContainer) GetContainerId() *mesos_v1.ContainerID {
	if m != nil {
		return m.ContainerId
	}
	return nil
}

// Launches a nested container within an executor's tree of containers.
// The differences between this call and `LaunchNestedContainer` are:
// 1) The container's life-cycle is tied to the lifetime of the
//    connection used to make this call, i.e., if the connection ever
//    breaks, the container will be destroyed.
// 2) The nested container shares the same namespaces and cgroups as
//    its parent container.
// 3) Results in a streaming response of type `ProcessIO`. So the call
//    needs to be made on a persistent connection.
type Call_LaunchNestedContainerSession struct {
	ContainerId      *mesos_v1.ContainerID   `protobuf:"bytes,1,req,name=container_id,json=container_id" json:"container_id,omitempty"`
	Command          *mesos_v1.CommandInfo   `protobuf:"bytes,2,opt,name=command" json:"command,omitempty"`
	Container        *mesos_v1.ContainerInfo `protobuf:"bytes,3,opt,name=container" json:"container,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *Call_LaunchNestedContainerSession) Reset()         { *m = Call_LaunchNestedContainerSession{} }
func (m *Call_LaunchNestedContainerSession) String() string { return proto.CompactTextString(m) }
func (*Call_LaunchNestedContainerSession) ProtoMessage()    {}
func (*Call_LaunchNestedContainerSession) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 8}
}

func (m *Call_LaunchNestedContainerSession) GetContainerId() *mesos_v1.ContainerID {
	if m != nil {
		return m.ContainerId
	}
	return nil
}

func (m *Call_LaunchNestedContainerSession) GetCommand() *mesos_v1.CommandInfo {
	if m != nil {
		return m.Command
	}
	return nil
}

func (m *Call_LaunchNestedContainerSession) GetContainer() *mesos_v1.ContainerInfo {
	if m != nil {
		return m.Container
	}
	return nil
}

// Attaches the caller to the STDIN of the entry point of the container.
// Clients can use this to stream input data to a container.
// Note that this call needs to be made on a persistent connection by
// streaming a CONTAINER_ID message followed by one or more PROCESS_IO
// messages.
type Call_AttachContainerInput struct {
	Type             *Call_AttachContainerInput_Type `protobuf:"varint,1,opt,name=type,enum=mesos.v1.agent.Call_AttachContainerInput_Type" json:"type,omitempty"`
	ContainerId      *mesos_v1.ContainerID           `protobuf:"bytes,2,opt,name=container_id,json=container_id" json:"container_id,omitempty"`
	ProcessIo        *ProcessIO                      `protobuf:"bytes,3,opt,name=process_io,json=process_io" json:"process_io,omitempty"`
	XXX_unrecognized []byte                          `json:"-"`
}

func (m *Call_AttachContainerInput) Reset()                    { *m = Call_AttachContainerInput{} }
func (m *Call_AttachContainerInput) String() string            { return proto.CompactTextString(m) }
func (*Call_AttachContainerInput) ProtoMessage()               {}
func (*Call_AttachContainerInput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 9} }

func (m *Call_AttachContainerInput) GetType() Call_AttachContainerInput_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Call_AttachContainerInput_UNKNOWN
}

func (m *Call_AttachContainerInput) GetContainerId() *mesos_v1.ContainerID {
	if m != nil {
		return m.ContainerId
	}
	return nil
}

func (m *Call_AttachContainerInput) GetProcessIo() *ProcessIO {
	if m != nil {
		return m.ProcessIo
	}
	return nil
}

// Attaches the caller to the STDOUT and STDERR of the entrypoint of
// the container. Clients can use this to stream output/error from the
// container. This call will result in a streaming response of `ProcessIO`;
// so this call needs to be made on a persistent connection.
type Call_AttachContainerOutput struct {
	ContainerId      *mesos_v1.ContainerID `protobuf:"bytes,1,req,name=container_id,json=container_id" json:"container_id,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *Call_AttachContainerOutput) Reset()                    { *m = Call_AttachContainerOutput{} }
func (m *Call_AttachContainerOutput) String() string            { return proto.CompactTextString(m) }
func (*Call_AttachContainerOutput) ProtoMessage()               {}
func (*Call_AttachContainerOutput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 10} }

func (m *Call_AttachContainerOutput) GetContainerId() *mesos_v1.ContainerID {
	if m != nil {
		return m.ContainerId
	}
	return nil
}

// Launches a either a "standalone" container on this agent
// or a nested container within another tree of containers.
//
// A standalone container is launched by specifying a ContainerID
// with no parent. Standalone containers bypass the normal offer cycle
// between the master and agent. Unlike other containers, a standalone
// container does not have an executor or any tasks. This means the
// standalone container does not report back to Mesos or any framework
// and must be supervised separately.
//
// A nested container is launched by specifying a ContainerID with
// another existing container (including standalone containers)
// as the parent.
//
// Returns 200 OK if the new container launch succeeds.
// Returns 202 Accepted if the requested ContainerID is already in use
//   by a standalone or nested container.
// Returns 400 Bad Request if the container launch fails.
type Call_LaunchContainer struct {
	// NOTE: Some characters cannot be used in the ID. All characters
	// must be valid filesystem path characters.  In addition, '/' and '.'
	// are reserved.
	ContainerId *mesos_v1.ContainerID `protobuf:"bytes,1,req,name=container_id,json=container_id" json:"container_id,omitempty"`
	Command     *mesos_v1.CommandInfo `protobuf:"bytes,2,opt,name=command" json:"command,omitempty"`
	// NOTE: Nested containers may not specify resources and instead
	// share resources with its parent container.
	//
	// TODO(josephw): These resources are purely used for isolation
	// and are not accounted for by the Mesos master (if connected).
	// It is the caller's responsibility to ensure that resources are
	// not overcommitted (e.g. CPU and memory) or conflicting (e.g. ports
	// and volumes). Once there is support for preempting tasks and a
	// way to update the resources advertised by the agent, these standalone
	// container resources should be accounted for by the master.
	Resources        []*mesos_v1.Resource    `protobuf:"bytes,3,rep,name=resources" json:"resources,omitempty"`
	Container        *mesos_v1.ContainerInfo `protobuf:"bytes,4,opt,name=container" json:"container,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *Call_LaunchContainer) Reset()                    { *m = Call_LaunchContainer{} }
func (m *Call_LaunchContainer) String() string            { return proto.CompactTextString(m) }
func (*Call_LaunchContainer) ProtoMessage()               {}
func (*Call_LaunchContainer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 11} }

func (m *Call_LaunchContainer) GetContainerId() *mesos_v1.ContainerID {
	if m != nil {
		return m.ContainerId
	}
	return nil
}

func (m *Call_LaunchContainer) GetCommand() *mesos_v1.CommandInfo {
	if m != nil {
		return m.Command
	}
	return nil
}

func (m *Call_LaunchContainer) GetResources() []*mesos_v1.Resource {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *Call_LaunchContainer) GetContainer() *mesos_v1.ContainerInfo {
	if m != nil {
		return m.Container
	}
	return nil
}

// Waits for the standalone or nested container to terminate
// and returns the exit status.
//
// Returns 200 OK if and when the container exits.
// Returns 404 Not Found if the container does not exist.
type Call_WaitContainer struct {
	ContainerId      *mesos_v1.ContainerID `protobuf:"bytes,1,req,name=container_id,json=container_id" json:"container_id,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *Call_WaitContainer) Reset()                    { *m = Call_WaitContainer{} }
func (m *Call_WaitContainer) String() string            { return proto.CompactTextString(m) }
func (*Call_WaitContainer) ProtoMessage()               {}
func (*Call_WaitContainer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 12} }

func (m *Call_WaitContainer) GetContainerId() *mesos_v1.ContainerID {
	if m != nil {
		return m.ContainerId
	}
	return nil
}

// Kills the standalone or nested container. The signal to be sent
// to the container can be specified in the 'signal' field.
//
// Returns 200 OK if the signal is sent successfully.
// Returns 404 Not Found if the container does not exist.
type Call_KillContainer struct {
	ContainerId *mesos_v1.ContainerID `protobuf:"bytes,1,req,name=container_id,json=container_id" json:"container_id,omitempty"`
	// Defaults to SIGKILL.
	Signal           *int32 `protobuf:"varint,2,opt,name=signal" json:"signal,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Call_KillContainer) Reset()                    { *m = Call_KillContainer{} }
func (m *Call_KillContainer) String() string            { return proto.CompactTextString(m) }
func (*Call_KillContainer) ProtoMessage()               {}
func (*Call_KillContainer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 13} }

func (m *Call_KillContainer) GetContainerId() *mesos_v1.ContainerID {
	if m != nil {
		return m.ContainerId
	}
	return nil
}

func (m *Call_KillContainer) GetSignal() int32 {
	if m != nil && m.Signal != nil {
		return *m.Signal
	}
	return 0
}

// Removes a container's artifacts (runtime and sandbox directories).
//
// For nested containers, it is important to use this call if multiple
// nested containers are launched under the same parent container, because
// garbage collection only takes place at the parent container. Artifacts
// belonging to nested containers will not be garbage collected while
// the parent container is running.
//
// TODO(josephw): A standalone container's runtime directory is currently
// garbage collected as soon as the container exits. To allow the user to
// retrieve the exit status reliably, the runtime directory cannot be
// garbage collected immediately. Instead, the user will eventually be
// required to make this call after the standalone container has exited.
// Also, a standalone container's sandbox directory is currently not
// garbage collected and is only deleted via this call.
//
// Returns 200 OK if the removal is successful or if the parent container
//   (for nested containers) does not exist.
// Returns 500 Internal Server Error if anything goes wrong, including
//   if the container is still running or does not exist.
//
// TODO(josephw): Consider returning a 400 Bad Request instead of 500
// Internal Server Error when the user tries to remove a running or
// nonexistent nested container.
type Call_RemoveContainer struct {
	ContainerId      *mesos_v1.ContainerID `protobuf:"bytes,1,req,name=container_id,json=container_id" json:"container_id,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *Call_RemoveContainer) Reset()                    { *m = Call_RemoveContainer{} }
func (m *Call_RemoveContainer) String() string            { return proto.CompactTextString(m) }
func (*Call_RemoveContainer) ProtoMessage()               {}
func (*Call_RemoveContainer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 14} }

func (m *Call_RemoveContainer) GetContainerId() *mesos_v1.ContainerID {
	if m != nil {
		return m.ContainerId
	}
	return nil
}

// *
// Synchronous responses for all calls made to the v1 agent API.
type Response struct {
	Type                 *Response_Type                 `protobuf:"varint,1,opt,name=type,enum=mesos.v1.agent.Response_Type" json:"type,omitempty"`
	GetHealth            *Response_GetHealth            `protobuf:"bytes,2,opt,name=get_health,json=get_health" json:"get_health,omitempty"`
	GetFlags             *Response_GetFlags             `protobuf:"bytes,3,opt,name=get_flags,json=get_flags" json:"get_flags,omitempty"`
	GetVersion           *Response_GetVersion           `protobuf:"bytes,4,opt,name=get_version,json=get_version" json:"get_version,omitempty"`
	GetMetrics           *Response_GetMetrics           `protobuf:"bytes,5,opt,name=get_metrics,json=get_metrics" json:"get_metrics,omitempty"`
	GetLoggingLevel      *Response_GetLoggingLevel      `protobuf:"bytes,6,opt,name=get_logging_level,json=get_logging_level" json:"get_logging_level,omitempty"`
	ListFiles            *Response_ListFiles            `protobuf:"bytes,7,opt,name=list_files,json=list_files" json:"list_files,omitempty"`
	ReadFile             *Response_ReadFile             `protobuf:"bytes,8,opt,name=read_file,json=read_file" json:"read_file,omitempty"`
	GetState             *Response_GetState             `protobuf:"bytes,9,opt,name=get_state,json=get_state" json:"get_state,omitempty"`
	GetContainers        *Response_GetContainers        `protobuf:"bytes,10,opt,name=get_containers,json=get_containers" json:"get_containers,omitempty"`
	GetFrameworks        *Response_GetFrameworks        `protobuf:"bytes,11,opt,name=get_frameworks,json=get_frameworks" json:"get_frameworks,omitempty"`
	GetExecutors         *Response_GetExecutors         `protobuf:"bytes,12,opt,name=get_executors,json=get_executors" json:"get_executors,omitempty"`
	GetTasks             *Response_GetTasks             `protobuf:"bytes,13,opt,name=get_tasks,json=get_tasks" json:"get_tasks,omitempty"`
	GetAgent             *Response_GetAgent             `protobuf:"bytes,15,opt,name=get_agent,json=get_agent" json:"get_agent,omitempty"`
	GetResourceProviders *Response_GetResourceProviders `protobuf:"bytes,17,opt,name=get_resource_providers,json=get_resource_providers" json:"get_resource_providers,omitempty"`
	WaitNestedContainer  *Response_WaitNestedContainer  `protobuf:"bytes,14,opt,name=wait_nested_container,json=wait_nested_container" json:"wait_nested_container,omitempty"`
	WaitContainer        *Response_WaitContainer        `protobuf:"bytes,16,opt,name=wait_container,json=wait_container" json:"wait_container,omitempty"`
	XXX_unrecognized     []byte                         `json:"-"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Response) GetType() Response_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Response_UNKNOWN
}

func (m *Response) GetGetHealth() *Response_GetHealth {
	if m != nil {
		return m.GetHealth
	}
	return nil
}

func (m *Response) GetGetFlags() *Response_GetFlags {
	if m != nil {
		return m.GetFlags
	}
	return nil
}

func (m *Response) GetGetVersion() *Response_GetVersion {
	if m != nil {
		return m.GetVersion
	}
	return nil
}

func (m *Response) GetGetMetrics() *Response_GetMetrics {
	if m != nil {
		return m.GetMetrics
	}
	return nil
}

func (m *Response) GetGetLoggingLevel() *Response_GetLoggingLevel {
	if m != nil {
		return m.GetLoggingLevel
	}
	return nil
}

func (m *Response) GetListFiles() *Response_ListFiles {
	if m != nil {
		return m.ListFiles
	}
	return nil
}

func (m *Response) GetReadFile() *Response_ReadFile {
	if m != nil {
		return m.ReadFile
	}
	return nil
}

func (m *Response) GetGetState() *Response_GetState {
	if m != nil {
		return m.GetState
	}
	return nil
}

func (m *Response) GetGetContainers() *Response_GetContainers {
	if m != nil {
		return m.GetContainers
	}
	return nil
}

func (m *Response) GetGetFrameworks() *Response_GetFrameworks {
	if m != nil {
		return m.GetFrameworks
	}
	return nil
}

func (m *Response) GetGetExecutors() *Response_GetExecutors {
	if m != nil {
		return m.GetExecutors
	}
	return nil
}

func (m *Response) GetGetTasks() *Response_GetTasks {
	if m != nil {
		return m.GetTasks
	}
	return nil
}

func (m *Response) GetGetAgent() *Response_GetAgent {
	if m != nil {
		return m.GetAgent
	}
	return nil
}

func (m *Response) GetGetResourceProviders() *Response_GetResourceProviders {
	if m != nil {
		return m.GetResourceProviders
	}
	return nil
}

func (m *Response) GetWaitNestedContainer() *Response_WaitNestedContainer {
	if m != nil {
		return m.WaitNestedContainer
	}
	return nil
}

func (m *Response) GetWaitContainer() *Response_WaitContainer {
	if m != nil {
		return m.WaitContainer
	}
	return nil
}

// `healthy` would be true if the agent is healthy. Delayed responses are also
// indicative of the poor health of the agent.
type Response_GetHealth struct {
	Healthy          *bool  `protobuf:"varint,1,req,name=healthy" json:"healthy,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Response_GetHealth) Reset()                    { *m = Response_GetHealth{} }
func (m *Response_GetHealth) String() string            { return proto.CompactTextString(m) }
func (*Response_GetHealth) ProtoMessage()               {}
func (*Response_GetHealth) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

func (m *Response_GetHealth) GetHealthy() bool {
	if m != nil && m.Healthy != nil {
		return *m.Healthy
	}
	return false
}

// Contains the flag configuration of the agent.
type Response_GetFlags struct {
	Flags            []*mesos_v1.Flag `protobuf:"bytes,1,rep,name=flags" json:"flags,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *Response_GetFlags) Reset()                    { *m = Response_GetFlags{} }
func (m *Response_GetFlags) String() string            { return proto.CompactTextString(m) }
func (*Response_GetFlags) ProtoMessage()               {}
func (*Response_GetFlags) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 1} }

func (m *Response_GetFlags) GetFlags() []*mesos_v1.Flag {
	if m != nil {
		return m.Flags
	}
	return nil
}

// Contains the version information of the agent.
type Response_GetVersion struct {
	VersionInfo      *mesos_v1.VersionInfo `protobuf:"bytes,1,req,name=version_info,json=version_info" json:"version_info,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *Response_GetVersion) Reset()                    { *m = Response_GetVersion{} }
func (m *Response_GetVersion) String() string            { return proto.CompactTextString(m) }
func (*Response_GetVersion) ProtoMessage()               {}
func (*Response_GetVersion) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 2} }

func (m *Response_GetVersion) GetVersionInfo() *mesos_v1.VersionInfo {
	if m != nil {
		return m.VersionInfo
	}
	return nil
}

// Contains a snapshot of the current metrics.
type Response_GetMetrics struct {
	Metrics          []*mesos_v1.Metric `protobuf:"bytes,1,rep,name=metrics" json:"metrics,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *Response_GetMetrics) Reset()                    { *m = Response_GetMetrics{} }
func (m *Response_GetMetrics) String() string            { return proto.CompactTextString(m) }
func (*Response_GetMetrics) ProtoMessage()               {}
func (*Response_GetMetrics) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 3} }

func (m *Response_GetMetrics) GetMetrics() []*mesos_v1.Metric {
	if m != nil {
		return m.Metrics
	}
	return nil
}

// Contains the logging level of the agent.
type Response_GetLoggingLevel struct {
	Level            *uint32 `protobuf:"varint,1,req,name=level" json:"level,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Response_GetLoggingLevel) Reset()                    { *m = Response_GetLoggingLevel{} }
func (m *Response_GetLoggingLevel) String() string            { return proto.CompactTextString(m) }
func (*Response_GetLoggingLevel) ProtoMessage()               {}
func (*Response_GetLoggingLevel) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 4} }

func (m *Response_GetLoggingLevel) GetLevel() uint32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

// Contains the file listing(similar to `ls -l`) for a directory.
type Response_ListFiles struct {
	FileInfos        []*mesos_v1.FileInfo `protobuf:"bytes,1,rep,name=file_infos,json=file_infos" json:"file_infos,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *Response_ListFiles) Reset()                    { *m = Response_ListFiles{} }
func (m *Response_ListFiles) String() string            { return proto.CompactTextString(m) }
func (*Response_ListFiles) ProtoMessage()               {}
func (*Response_ListFiles) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 5} }

func (m *Response_ListFiles) GetFileInfos() []*mesos_v1.FileInfo {
	if m != nil {
		return m.FileInfos
	}
	return nil
}

// Contains the file data.
type Response_ReadFile struct {
	// The size of file (in bytes).
	Size             *uint64 `protobuf:"varint,1,req,name=size" json:"size,omitempty"`
	Data             []byte  `protobuf:"bytes,2,req,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Response_ReadFile) Reset()                    { *m = Response_ReadFile{} }
func (m *Response_ReadFile) String() string            { return proto.CompactTextString(m) }
func (*Response_ReadFile) ProtoMessage()               {}
func (*Response_ReadFile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 6} }

func (m *Response_ReadFile) GetSize() uint64 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return 0
}

func (m *Response_ReadFile) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// Contains full state of the agent i.e. information about the tasks,
// frameworks and executors running in the cluster.
type Response_GetState struct {
	GetTasks         *Response_GetTasks      `protobuf:"bytes,1,opt,name=get_tasks,json=get_tasks" json:"get_tasks,omitempty"`
	GetExecutors     *Response_GetExecutors  `protobuf:"bytes,2,opt,name=get_executors,json=get_executors" json:"get_executors,omitempty"`
	GetFrameworks    *Response_GetFrameworks `protobuf:"bytes,3,opt,name=get_frameworks,json=get_frameworks" json:"get_frameworks,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *Response_GetState) Reset()                    { *m = Response_GetState{} }
func (m *Response_GetState) String() string            { return proto.CompactTextString(m) }
func (*Response_GetState) ProtoMessage()               {}
func (*Response_GetState) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 7} }

func (m *Response_GetState) GetGetTasks() *Response_GetTasks {
	if m != nil {
		return m.GetTasks
	}
	return nil
}

func (m *Response_GetState) GetGetExecutors() *Response_GetExecutors {
	if m != nil {
		return m.GetExecutors
	}
	return nil
}

func (m *Response_GetState) GetGetFrameworks() *Response_GetFrameworks {
	if m != nil {
		return m.GetFrameworks
	}
	return nil
}

// Information about containers running on this agent. It contains
// ContainerStatus and ResourceStatistics along with some metadata
// of the containers.
type Response_GetContainers struct {
	Containers       []*Response_GetContainers_Container `protobuf:"bytes,1,rep,name=containers" json:"containers,omitempty"`
	XXX_unrecognized []byte                              `json:"-"`
}

func (m *Response_GetContainers) Reset()                    { *m = Response_GetContainers{} }
func (m *Response_GetContainers) String() string            { return proto.CompactTextString(m) }
func (*Response_GetContainers) ProtoMessage()               {}
func (*Response_GetContainers) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 8} }

func (m *Response_GetContainers) GetContainers() []*Response_GetContainers_Container {
	if m != nil {
		return m.Containers
	}
	return nil
}

type Response_GetContainers_Container struct {
	FrameworkId        *mesos_v1.FrameworkID        `protobuf:"bytes,1,req,name=framework_id,json=framework_id" json:"framework_id,omitempty"`
	ExecutorId         *mesos_v1.ExecutorID         `protobuf:"bytes,2,req,name=executor_id,json=executor_id" json:"executor_id,omitempty"`
	ExecutorName       *string                      `protobuf:"bytes,3,req,name=executor_name,json=executor_name" json:"executor_name,omitempty"`
	ContainerId        *mesos_v1.ContainerID        `protobuf:"bytes,4,req,name=container_id,json=container_id" json:"container_id,omitempty"`
	ContainerStatus    *mesos_v1.ContainerStatus    `protobuf:"bytes,5,opt,name=container_status,json=container_status" json:"container_status,omitempty"`
	ResourceStatistics *mesos_v1.ResourceStatistics `protobuf:"bytes,6,opt,name=resource_statistics,json=resource_statistics" json:"resource_statistics,omitempty"`
	XXX_unrecognized   []byte                       `json:"-"`
}

func (m *Response_GetContainers_Container) Reset()         { *m = Response_GetContainers_Container{} }
func (m *Response_GetContainers_Container) String() string { return proto.CompactTextString(m) }
func (*Response_GetContainers_Container) ProtoMessage()    {}
func (*Response_GetContainers_Container) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{1, 8, 0}
}

func (m *Response_GetContainers_Container) GetFrameworkId() *mesos_v1.FrameworkID {
	if m != nil {
		return m.FrameworkId
	}
	return nil
}

func (m *Response_GetContainers_Container) GetExecutorId() *mesos_v1.ExecutorID {
	if m != nil {
		return m.ExecutorId
	}
	return nil
}

func (m *Response_GetContainers_Container) GetExecutorName() string {
	if m != nil && m.ExecutorName != nil {
		return *m.ExecutorName
	}
	return ""
}

func (m *Response_GetContainers_Container) GetContainerId() *mesos_v1.ContainerID {
	if m != nil {
		return m.ContainerId
	}
	return nil
}

func (m *Response_GetContainers_Container) GetContainerStatus() *mesos_v1.ContainerStatus {
	if m != nil {
		return m.ContainerStatus
	}
	return nil
}

func (m *Response_GetContainers_Container) GetResourceStatistics() *mesos_v1.ResourceStatistics {
	if m != nil {
		return m.ResourceStatistics
	}
	return nil
}

// Information about all the frameworks known to the agent at the current
// time.
type Response_GetFrameworks struct {
	Frameworks          []*Response_GetFrameworks_Framework `protobuf:"bytes,1,rep,name=frameworks" json:"frameworks,omitempty"`
	CompletedFrameworks []*Response_GetFrameworks_Framework `protobuf:"bytes,2,rep,name=completed_frameworks,json=completed_frameworks" json:"completed_frameworks,omitempty"`
	XXX_unrecognized    []byte                              `json:"-"`
}

func (m *Response_GetFrameworks) Reset()                    { *m = Response_GetFrameworks{} }
func (m *Response_GetFrameworks) String() string            { return proto.CompactTextString(m) }
func (*Response_GetFrameworks) ProtoMessage()               {}
func (*Response_GetFrameworks) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 9} }

func (m *Response_GetFrameworks) GetFrameworks() []*Response_GetFrameworks_Framework {
	if m != nil {
		return m.Frameworks
	}
	return nil
}

func (m *Response_GetFrameworks) GetCompletedFrameworks() []*Response_GetFrameworks_Framework {
	if m != nil {
		return m.CompletedFrameworks
	}
	return nil
}

type Response_GetFrameworks_Framework struct {
	FrameworkInfo    *mesos_v1.FrameworkInfo `protobuf:"bytes,1,req,name=framework_info,json=framework_info" json:"framework_info,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *Response_GetFrameworks_Framework) Reset()         { *m = Response_GetFrameworks_Framework{} }
func (m *Response_GetFrameworks_Framework) String() string { return proto.CompactTextString(m) }
func (*Response_GetFrameworks_Framework) ProtoMessage()    {}
func (*Response_GetFrameworks_Framework) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{1, 9, 0}
}

func (m *Response_GetFrameworks_Framework) GetFrameworkInfo() *mesos_v1.FrameworkInfo {
	if m != nil {
		return m.FrameworkInfo
	}
	return nil
}

// Lists information about all the executors known to the agent at the
// current time.
type Response_GetExecutors struct {
	Executors          []*Response_GetExecutors_Executor `protobuf:"bytes,1,rep,name=executors" json:"executors,omitempty"`
	CompletedExecutors []*Response_GetExecutors_Executor `protobuf:"bytes,2,rep,name=completed_executors,json=completed_executors" json:"completed_executors,omitempty"`
	XXX_unrecognized   []byte                            `json:"-"`
}

func (m *Response_GetExecutors) Reset()                    { *m = Response_GetExecutors{} }
func (m *Response_GetExecutors) String() string            { return proto.CompactTextString(m) }
func (*Response_GetExecutors) ProtoMessage()               {}
func (*Response_GetExecutors) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 10} }

func (m *Response_GetExecutors) GetExecutors() []*Response_GetExecutors_Executor {
	if m != nil {
		return m.Executors
	}
	return nil
}

func (m *Response_GetExecutors) GetCompletedExecutors() []*Response_GetExecutors_Executor {
	if m != nil {
		return m.CompletedExecutors
	}
	return nil
}

type Response_GetExecutors_Executor struct {
	ExecutorInfo     *mesos_v1.ExecutorInfo `protobuf:"bytes,1,req,name=executor_info,json=executor_info" json:"executor_info,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *Response_GetExecutors_Executor) Reset()         { *m = Response_GetExecutors_Executor{} }
func (m *Response_GetExecutors_Executor) String() string { return proto.CompactTextString(m) }
func (*Response_GetExecutors_Executor) ProtoMessage()    {}
func (*Response_GetExecutors_Executor) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{1, 10, 0}
}

func (m *Response_GetExecutors_Executor) GetExecutorInfo() *mesos_v1.ExecutorInfo {
	if m != nil {
		return m.ExecutorInfo
	}
	return nil
}

// Lists information about all the tasks known to the agent at the current
// time.
type Response_GetTasks struct {
	// Tasks that are pending in the agent's queue before an executor is
	// launched.
	PendingTasks []*mesos_v1.Task `protobuf:"bytes,1,rep,name=pending_tasks,json=pending_tasks" json:"pending_tasks,omitempty"`
	// Tasks that are enqueued for a launched executor that has not yet
	// registered.
	QueuedTasks []*mesos_v1.Task `protobuf:"bytes,2,rep,name=queued_tasks,json=queued_tasks" json:"queued_tasks,omitempty"`
	// Tasks that are running.
	LaunchedTasks []*mesos_v1.Task `protobuf:"bytes,3,rep,name=launched_tasks,json=launched_tasks" json:"launched_tasks,omitempty"`
	// Tasks that are terminated but pending updates.
	TerminatedTasks []*mesos_v1.Task `protobuf:"bytes,4,rep,name=terminated_tasks,json=terminated_tasks" json:"terminated_tasks,omitempty"`
	// Tasks that are terminated and updates acked.
	CompletedTasks   []*mesos_v1.Task `protobuf:"bytes,5,rep,name=completed_tasks,json=completed_tasks" json:"completed_tasks,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *Response_GetTasks) Reset()                    { *m = Response_GetTasks{} }
func (m *Response_GetTasks) String() string            { return proto.CompactTextString(m) }
func (*Response_GetTasks) ProtoMessage()               {}
func (*Response_GetTasks) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 11} }

func (m *Response_GetTasks) GetPendingTasks() []*mesos_v1.Task {
	if m != nil {
		return m.PendingTasks
	}
	return nil
}

func (m *Response_GetTasks) GetQueuedTasks() []*mesos_v1.Task {
	if m != nil {
		return m.QueuedTasks
	}
	return nil
}

func (m *Response_GetTasks) GetLaunchedTasks() []*mesos_v1.Task {
	if m != nil {
		return m.LaunchedTasks
	}
	return nil
}

func (m *Response_GetTasks) GetTerminatedTasks() []*mesos_v1.Task {
	if m != nil {
		return m.TerminatedTasks
	}
	return nil
}

func (m *Response_GetTasks) GetCompletedTasks() []*mesos_v1.Task {
	if m != nil {
		return m.CompletedTasks
	}
	return nil
}

// Contains the agent's information.
type Response_GetAgent struct {
	AgentInfo        *mesos_v1.AgentInfo `protobuf:"bytes,1,opt,name=agent_info,json=agent_info" json:"agent_info,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *Response_GetAgent) Reset()                    { *m = Response_GetAgent{} }
func (m *Response_GetAgent) String() string            { return proto.CompactTextString(m) }
func (*Response_GetAgent) ProtoMessage()               {}
func (*Response_GetAgent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 12} }

func (m *Response_GetAgent) GetAgentInfo() *mesos_v1.AgentInfo {
	if m != nil {
		return m.AgentInfo
	}
	return nil
}

// Lists information about all resource providers known to the agent
// at the current time.
type Response_GetResourceProviders struct {
	ResourceProviders []*Response_GetResourceProviders_ResourceProvider `protobuf:"bytes,1,rep,name=resource_providers,json=resource_providers" json:"resource_providers,omitempty"`
	XXX_unrecognized  []byte                                            `json:"-"`
}

func (m *Response_GetResourceProviders) Reset()         { *m = Response_GetResourceProviders{} }
func (m *Response_GetResourceProviders) String() string { return proto.CompactTextString(m) }
func (*Response_GetResourceProviders) ProtoMessage()    {}
func (*Response_GetResourceProviders) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{1, 13}
}

func (m *Response_GetResourceProviders) GetResourceProviders() []*Response_GetResourceProviders_ResourceProvider {
	if m != nil {
		return m.ResourceProviders
	}
	return nil
}

type Response_GetResourceProviders_ResourceProvider struct {
	ResourceProviderInfo *mesos_v1.ResourceProviderInfo `protobuf:"bytes,1,req,name=resource_provider_info,json=resource_provider_info" json:"resource_provider_info,omitempty"`
	XXX_unrecognized     []byte                         `json:"-"`
}

func (m *Response_GetResourceProviders_ResourceProvider) Reset() {
	*m = Response_GetResourceProviders_ResourceProvider{}
}
func (m *Response_GetResourceProviders_ResourceProvider) String() string {
	return proto.CompactTextString(m)
}
func (*Response_GetResourceProviders_ResourceProvider) ProtoMessage() {}
func (*Response_GetResourceProviders_ResourceProvider) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{1, 13, 0}
}

func (m *Response_GetResourceProviders_ResourceProvider) GetResourceProviderInfo() *mesos_v1.ResourceProviderInfo {
	if m != nil {
		return m.ResourceProviderInfo
	}
	return nil
}

// Returns termination information about the nested container.
type Response_WaitNestedContainer struct {
	// Wait status of the lead process in the container. Note that this
	// is the return value of `wait(2)`, so callers must use the `wait(2)`
	// family of macros to extract whether the process exited cleanly and
	// what the exit code was.
	ExitStatus *int32 `protobuf:"varint,1,opt,name=exit_status,json=exit_status" json:"exit_status,omitempty"`
	// The `state` and `reason` fields may be populated if the Mesos agent
	// terminates the container. In the absence of any special knowledge,
	// executors should propagate this information via the `status` field
	// of an `Update` call for the corresponding TaskID.
	State  *mesos_v1.TaskState         `protobuf:"varint,2,opt,name=state,enum=mesos.v1.TaskState" json:"state,omitempty"`
	Reason *mesos_v1.TaskStatus_Reason `protobuf:"varint,3,opt,name=reason,enum=mesos.v1.TaskStatus_Reason" json:"reason,omitempty"`
	// This field will be populated if the task was terminated due to
	// a resource limitation.
	Limitation       *mesos_v1.TaskResourceLimitation `protobuf:"bytes,4,opt,name=limitation" json:"limitation,omitempty"`
	Message          *string                          `protobuf:"bytes,5,opt,name=message" json:"message,omitempty"`
	XXX_unrecognized []byte                           `json:"-"`
}

func (m *Response_WaitNestedContainer) Reset()         { *m = Response_WaitNestedContainer{} }
func (m *Response_WaitNestedContainer) String() string { return proto.CompactTextString(m) }
func (*Response_WaitNestedContainer) ProtoMessage()    {}
func (*Response_WaitNestedContainer) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{1, 14}
}

func (m *Response_WaitNestedContainer) GetExitStatus() int32 {
	if m != nil && m.ExitStatus != nil {
		return *m.ExitStatus
	}
	return 0
}

func (m *Response_WaitNestedContainer) GetState() mesos_v1.TaskState {
	if m != nil && m.State != nil {
		return *m.State
	}
	return mesos_v1.TaskState_TASK_STAGING
}

func (m *Response_WaitNestedContainer) GetReason() mesos_v1.TaskStatus_Reason {
	if m != nil && m.Reason != nil {
		return *m.Reason
	}
	return mesos_v1.TaskStatus_REASON_COMMAND_EXECUTOR_FAILED
}

func (m *Response_WaitNestedContainer) GetLimitation() *mesos_v1.TaskResourceLimitation {
	if m != nil {
		return m.Limitation
	}
	return nil
}

func (m *Response_WaitNestedContainer) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

// Returns termination information about the standalone or nested container.
type Response_WaitContainer struct {
	// Wait status of the lead process in the container. Note that this
	// is the return value of `wait(2)`, so callers must use the `wait(2)`
	// family of macros to extract whether the process exited cleanly and
	// what the exit code was.
	ExitStatus *int32 `protobuf:"varint,1,opt,name=exit_status,json=exit_status" json:"exit_status,omitempty"`
	// The `state` and `reason` fields may be populated if the Mesos agent
	// terminates the container. In the absence of any special knowledge,
	// executors should propagate this information via the `status` field
	// of an `Update` call for the corresponding TaskID.
	State  *mesos_v1.TaskState         `protobuf:"varint,2,opt,name=state,enum=mesos.v1.TaskState" json:"state,omitempty"`
	Reason *mesos_v1.TaskStatus_Reason `protobuf:"varint,3,opt,name=reason,enum=mesos.v1.TaskStatus_Reason" json:"reason,omitempty"`
	// This field will be populated if the task was terminated due to
	// a resource limitation.
	Limitation       *mesos_v1.TaskResourceLimitation `protobuf:"bytes,4,opt,name=limitation" json:"limitation,omitempty"`
	Message          *string                          `protobuf:"bytes,5,opt,name=message" json:"message,omitempty"`
	XXX_unrecognized []byte                           `json:"-"`
}

func (m *Response_WaitContainer) Reset()                    { *m = Response_WaitContainer{} }
func (m *Response_WaitContainer) String() string            { return proto.CompactTextString(m) }
func (*Response_WaitContainer) ProtoMessage()               {}
func (*Response_WaitContainer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 15} }

func (m *Response_WaitContainer) GetExitStatus() int32 {
	if m != nil && m.ExitStatus != nil {
		return *m.ExitStatus
	}
	return 0
}

func (m *Response_WaitContainer) GetState() mesos_v1.TaskState {
	if m != nil && m.State != nil {
		return *m.State
	}
	return mesos_v1.TaskState_TASK_STAGING
}

func (m *Response_WaitContainer) GetReason() mesos_v1.TaskStatus_Reason {
	if m != nil && m.Reason != nil {
		return *m.Reason
	}
	return mesos_v1.TaskStatus_REASON_COMMAND_EXECUTOR_FAILED
}

func (m *Response_WaitContainer) GetLimitation() *mesos_v1.TaskResourceLimitation {
	if m != nil {
		return m.Limitation
	}
	return nil
}

func (m *Response_WaitContainer) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

// *
// Streaming response to `Call::LAUNCH_NESTED_CONTAINER_SESSION` and
// `Call::ATTACH_CONTAINER_OUTPUT`.
//
// This message is also used to stream request data for
// `Call::ATTACH_CONTAINER_INPUT`.
type ProcessIO struct {
	Type             *ProcessIO_Type    `protobuf:"varint,1,opt,name=type,enum=mesos.v1.agent.ProcessIO_Type" json:"type,omitempty"`
	Data             *ProcessIO_Data    `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	Control          *ProcessIO_Control `protobuf:"bytes,3,opt,name=control" json:"control,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *ProcessIO) Reset()                    { *m = ProcessIO{} }
func (m *ProcessIO) String() string            { return proto.CompactTextString(m) }
func (*ProcessIO) ProtoMessage()               {}
func (*ProcessIO) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ProcessIO) GetType() ProcessIO_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ProcessIO_UNKNOWN
}

func (m *ProcessIO) GetData() *ProcessIO_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ProcessIO) GetControl() *ProcessIO_Control {
	if m != nil {
		return m.Control
	}
	return nil
}

type ProcessIO_Data struct {
	Type             *ProcessIO_Data_Type `protobuf:"varint,1,opt,name=type,enum=mesos.v1.agent.ProcessIO_Data_Type" json:"type,omitempty"`
	Data             []byte               `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *ProcessIO_Data) Reset()                    { *m = ProcessIO_Data{} }
func (m *ProcessIO_Data) String() string            { return proto.CompactTextString(m) }
func (*ProcessIO_Data) ProtoMessage()               {}
func (*ProcessIO_Data) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

func (m *ProcessIO_Data) GetType() ProcessIO_Data_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ProcessIO_Data_UNKNOWN
}

func (m *ProcessIO_Data) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type ProcessIO_Control struct {
	Type             *ProcessIO_Control_Type      `protobuf:"varint,1,opt,name=type,enum=mesos.v1.agent.ProcessIO_Control_Type" json:"type,omitempty"`
	TtyInfo          *mesos_v1.TTYInfo            `protobuf:"bytes,2,opt,name=tty_info,json=tty_info" json:"tty_info,omitempty"`
	Heartbeat        *ProcessIO_Control_Heartbeat `protobuf:"bytes,3,opt,name=heartbeat" json:"heartbeat,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *ProcessIO_Control) Reset()                    { *m = ProcessIO_Control{} }
func (m *ProcessIO_Control) String() string            { return proto.CompactTextString(m) }
func (*ProcessIO_Control) ProtoMessage()               {}
func (*ProcessIO_Control) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 1} }

func (m *ProcessIO_Control) GetType() ProcessIO_Control_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ProcessIO_Control_UNKNOWN
}

func (m *ProcessIO_Control) GetTtyInfo() *mesos_v1.TTYInfo {
	if m != nil {
		return m.TtyInfo
	}
	return nil
}

func (m *ProcessIO_Control) GetHeartbeat() *ProcessIO_Control_Heartbeat {
	if m != nil {
		return m.Heartbeat
	}
	return nil
}

type ProcessIO_Control_Heartbeat struct {
	Interval         *mesos_v1.DurationInfo `protobuf:"bytes,1,opt,name=interval" json:"interval,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *ProcessIO_Control_Heartbeat) Reset()         { *m = ProcessIO_Control_Heartbeat{} }
func (m *ProcessIO_Control_Heartbeat) String() string { return proto.CompactTextString(m) }
func (*ProcessIO_Control_Heartbeat) ProtoMessage()    {}
func (*ProcessIO_Control_Heartbeat) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{2, 1, 0}
}

func (m *ProcessIO_Control_Heartbeat) GetInterval() *mesos_v1.DurationInfo {
	if m != nil {
		return m.Interval
	}
	return nil
}

func init() {
	proto.RegisterType((*Call)(nil), "mesos.v1.agent.Call")
	proto.RegisterType((*Call_GetMetrics)(nil), "mesos.v1.agent.Call.GetMetrics")
	proto.RegisterType((*Call_SetLoggingLevel)(nil), "mesos.v1.agent.Call.SetLoggingLevel")
	proto.RegisterType((*Call_ListFiles)(nil), "mesos.v1.agent.Call.ListFiles")
	proto.RegisterType((*Call_ReadFile)(nil), "mesos.v1.agent.Call.ReadFile")
	proto.RegisterType((*Call_LaunchNestedContainer)(nil), "mesos.v1.agent.Call.LaunchNestedContainer")
	proto.RegisterType((*Call_WaitNestedContainer)(nil), "mesos.v1.agent.Call.WaitNestedContainer")
	proto.RegisterType((*Call_KillNestedContainer)(nil), "mesos.v1.agent.Call.KillNestedContainer")
	proto.RegisterType((*Call_RemoveNestedContainer)(nil), "mesos.v1.agent.Call.RemoveNestedContainer")
	proto.RegisterType((*Call_LaunchNestedContainerSession)(nil), "mesos.v1.agent.Call.LaunchNestedContainerSession")
	proto.RegisterType((*Call_AttachContainerInput)(nil), "mesos.v1.agent.Call.AttachContainerInput")
	proto.RegisterType((*Call_AttachContainerOutput)(nil), "mesos.v1.agent.Call.AttachContainerOutput")
	proto.RegisterType((*Call_LaunchContainer)(nil), "mesos.v1.agent.Call.LaunchContainer")
	proto.RegisterType((*Call_WaitContainer)(nil), "mesos.v1.agent.Call.WaitContainer")
	proto.RegisterType((*Call_KillContainer)(nil), "mesos.v1.agent.Call.KillContainer")
	proto.RegisterType((*Call_RemoveContainer)(nil), "mesos.v1.agent.Call.RemoveContainer")
	proto.RegisterType((*Response)(nil), "mesos.v1.agent.Response")
	proto.RegisterType((*Response_GetHealth)(nil), "mesos.v1.agent.Response.GetHealth")
	proto.RegisterType((*Response_GetFlags)(nil), "mesos.v1.agent.Response.GetFlags")
	proto.RegisterType((*Response_GetVersion)(nil), "mesos.v1.agent.Response.GetVersion")
	proto.RegisterType((*Response_GetMetrics)(nil), "mesos.v1.agent.Response.GetMetrics")
	proto.RegisterType((*Response_GetLoggingLevel)(nil), "mesos.v1.agent.Response.GetLoggingLevel")
	proto.RegisterType((*Response_ListFiles)(nil), "mesos.v1.agent.Response.ListFiles")
	proto.RegisterType((*Response_ReadFile)(nil), "mesos.v1.agent.Response.ReadFile")
	proto.RegisterType((*Response_GetState)(nil), "mesos.v1.agent.Response.GetState")
	proto.RegisterType((*Response_GetContainers)(nil), "mesos.v1.agent.Response.GetContainers")
	proto.RegisterType((*Response_GetContainers_Container)(nil), "mesos.v1.agent.Response.GetContainers.Container")
	proto.RegisterType((*Response_GetFrameworks)(nil), "mesos.v1.agent.Response.GetFrameworks")
	proto.RegisterType((*Response_GetFrameworks_Framework)(nil), "mesos.v1.agent.Response.GetFrameworks.Framework")
	proto.RegisterType((*Response_GetExecutors)(nil), "mesos.v1.agent.Response.GetExecutors")
	proto.RegisterType((*Response_GetExecutors_Executor)(nil), "mesos.v1.agent.Response.GetExecutors.Executor")
	proto.RegisterType((*Response_GetTasks)(nil), "mesos.v1.agent.Response.GetTasks")
	proto.RegisterType((*Response_GetAgent)(nil), "mesos.v1.agent.Response.GetAgent")
	proto.RegisterType((*Response_GetResourceProviders)(nil), "mesos.v1.agent.Response.GetResourceProviders")
	proto.RegisterType((*Response_GetResourceProviders_ResourceProvider)(nil), "mesos.v1.agent.Response.GetResourceProviders.ResourceProvider")
	proto.RegisterType((*Response_WaitNestedContainer)(nil), "mesos.v1.agent.Response.WaitNestedContainer")
	proto.RegisterType((*Response_WaitContainer)(nil), "mesos.v1.agent.Response.WaitContainer")
	proto.RegisterType((*ProcessIO)(nil), "mesos.v1.agent.ProcessIO")
	proto.RegisterType((*ProcessIO_Data)(nil), "mesos.v1.agent.ProcessIO.Data")
	proto.RegisterType((*ProcessIO_Control)(nil), "mesos.v1.agent.ProcessIO.Control")
	proto.RegisterType((*ProcessIO_Control_Heartbeat)(nil), "mesos.v1.agent.ProcessIO.Control.Heartbeat")
	proto.RegisterEnum("mesos.v1.agent.Call_Type", Call_Type_name, Call_Type_value)
	proto.RegisterEnum("mesos.v1.agent.Call_AttachContainerInput_Type", Call_AttachContainerInput_Type_name, Call_AttachContainerInput_Type_value)
	proto.RegisterEnum("mesos.v1.agent.Response_Type", Response_Type_name, Response_Type_value)
	proto.RegisterEnum("mesos.v1.agent.ProcessIO_Type", ProcessIO_Type_name, ProcessIO_Type_value)
	proto.RegisterEnum("mesos.v1.agent.ProcessIO_Data_Type", ProcessIO_Data_Type_name, ProcessIO_Data_Type_value)
	proto.RegisterEnum("mesos.v1.agent.ProcessIO_Control_Type", ProcessIO_Control_Type_name, ProcessIO_Control_Type_value)
}

func init() { proto.RegisterFile("agent.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 2494 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x59, 0xcd, 0x72, 0x1b, 0xc7,
	0xf1, 0xff, 0x03, 0x04, 0x49, 0xa0, 0xf1, 0xb5, 0x1c, 0x7e, 0x41, 0x6b, 0x5b, 0xa4, 0x29, 0xdb,
	0x7f, 0x59, 0xb1, 0x29, 0x11, 0x2e, 0xc5, 0x8a, 0x5d, 0x61, 0x0c, 0x11, 0x4b, 0x72, 0x43, 0x10,
	0x60, 0x66, 0x97, 0x52, 0x5c, 0x39, 0x6c, 0xd6, 0xc0, 0x10, 0xdc, 0x12, 0x80, 0x65, 0x76, 0x87,
	0x94, 0x95, 0x5b, 0x0e, 0xc9, 0x25, 0xc7, 0x9c, 0x93, 0x77, 0xc8, 0x21, 0x87, 0xdc, 0x92, 0x77,
	0x48, 0x55, 0x9e, 0x20, 0xb7, 0x54, 0x25, 0x95, 0x27, 0x48, 0xcd, 0xcc, 0x7e, 0x62, 0x87, 0x20,
	0x2d, 0x55, 0x5c, 0x95, 0xdc, 0x66, 0x7a, 0x7e, 0xbf, 0xee, 0x9d, 0x9e, 0x99, 0x9e, 0xee, 0x59,
	0x28, 0xdb, 0x43, 0x32, 0xa1, 0xdb, 0x17, 0x9e, 0x4b, 0x5d, 0x54, 0x1b, 0x13, 0xdf, 0xf5, 0xb7,
	0xaf, 0x76, 0xb6, 0xb9, 0x54, 0x5d, 0xe1, 0xfd, 0x87, 0x57, 0x3b, 0x0f, 0xc5, 0x00, 0x47, 0x6d,
	0xfd, 0xe2, 0x1d, 0x28, 0xec, 0xd9, 0xa3, 0x11, 0xfa, 0x18, 0x0a, 0xf4, 0xd5, 0x05, 0x69, 0xe4,
	0x36, 0x73, 0xf7, 0x6b, 0xcd, 0x3b, 0xdb, 0x69, 0xf6, 0x36, 0xc3, 0x6c, 0x9b, 0xaf, 0x2e, 0x08,
	0xe6, 0x30, 0xf4, 0x05, 0x94, 0x87, 0x84, 0x5a, 0x63, 0x42, 0x3d, 0xa7, 0xef, 0x37, 0xf2, 0x9b,
	0xb9, 0xfb, 0xe5, 0xe6, 0x86, 0x94, 0x75, 0x40, 0xe8, 0xb1, 0x80, 0x61, 0x18, 0x46, 0x6d, 0x74,
	0x02, 0x4b, 0x3e, 0xa1, 0xd6, 0xc8, 0x1d, 0x0e, 0x9d, 0xc9, 0xd0, 0x1a, 0x91, 0x2b, 0x32, 0x6a,
	0xcc, 0x71, 0x3d, 0xef, 0x49, 0xf5, 0x18, 0x84, 0x76, 0x04, 0xb8, 0xc3, 0xb0, 0xb8, 0xee, 0xa7,
	0x05, 0xe8, 0xfb, 0x00, 0x23, 0xc7, 0xa7, 0xd6, 0x99, 0x33, 0x22, 0x7e, 0xa3, 0xc0, 0x55, 0xdd,
	0x95, 0xaa, 0xea, 0x38, 0x3e, 0xdd, 0x67, 0x28, 0x5c, 0x1a, 0x85, 0x4d, 0xf4, 0x19, 0x94, 0x3c,
	0x62, 0x0f, 0x38, 0xbd, 0x31, 0xcf, 0xd9, 0xef, 0x48, 0xd9, 0x98, 0xd8, 0x03, 0x46, 0xc1, 0x45,
	0x2f, 0x68, 0xa1, 0x33, 0x58, 0x1f, 0xd9, 0x97, 0x93, 0xfe, 0xb9, 0x35, 0x21, 0x3e, 0x25, 0x03,
	0xab, 0xef, 0x4e, 0xa8, 0xed, 0x4c, 0x88, 0xd7, 0x58, 0xe0, 0x9a, 0x1e, 0xc8, 0xbf, 0x83, 0x73,
	0xba, 0x9c, 0xb2, 0x17, 0x32, 0x9e, 0xe6, 0x1b, 0x39, 0xbc, 0x3a, 0x92, 0x0d, 0xa1, 0x9f, 0xc2,
	0xea, 0x4b, 0xdb, 0xa1, 0x59, 0x2b, 0x8b, 0xdc, 0xca, 0x7d, 0xa9, 0x95, 0xe7, 0xb6, 0x43, 0x65,
	0x36, 0x96, 0x5f, 0x66, 0x07, 0x98, 0x85, 0x17, 0xce, 0x68, 0x94, 0xb5, 0x50, 0x9c, 0x61, 0xe1,
	0xc8, 0x19, 0x8d, 0xa4, 0x16, 0x5e, 0x64, 0x07, 0x98, 0xaf, 0x3c, 0x32, 0x76, 0xaf, 0x48, 0xd6,
	0x46, 0x65, 0x86, 0xaf, 0x30, 0xe7, 0x48, 0x7d, 0xe5, 0xc9, 0x86, 0xd0, 0xd7, 0xb0, 0x71, 0xcd,
	0x9a, 0x58, 0x3e, 0xf1, 0x7d, 0xc7, 0x9d, 0x34, 0x4a, 0xdc, 0xde, 0xce, 0xed, 0xd7, 0xc6, 0x10,
	0x44, 0xfc, 0xf6, 0x68, 0xc6, 0x28, 0xb2, 0x60, 0xcd, 0xa6, 0xd4, 0xee, 0x9f, 0x27, 0x4c, 0x3a,
	0x93, 0x8b, 0x4b, 0xda, 0x00, 0x6e, 0xf0, 0x43, 0xa9, 0xc1, 0x16, 0xa7, 0x44, 0xca, 0x74, 0x46,
	0xc0, 0x2b, 0xb6, 0x44, 0x8a, 0xbe, 0x82, 0xf5, 0x8c, 0x01, 0xf7, 0x92, 0x32, 0x0b, 0xe5, 0x19,
	0x2e, 0x9c, 0xb2, 0xd0, 0xe3, 0x0c, 0xbc, 0x6a, 0xcb, 0xc4, 0xa8, 0x07, 0x4a, 0xe0, 0xbe, 0x78,
	0x7d, 0xaa, 0x33, 0x8e, 0xa7, 0xf0, 0x57, 0xa4, 0x05, 0xd7, 0x47, 0x69, 0x01, 0xd2, 0xa1, 0xc6,
	0xf7, 0x6e, 0xac, 0xae, 0xc6, 0xd5, 0x6d, 0x5d, 0xbb, 0x69, 0x63, 0x65, 0xd5, 0x97, 0xc9, 0x2e,
	0x53, 0xc5, 0x37, 0x69, 0xac, 0xaa, 0x3e, 0x43, 0x15, 0xdb, 0x9d, 0x09, 0x55, 0x2f, 0x92, 0x5d,
	0x36, 0xcd, 0x60, 0x37, 0xc6, 0xca, 0x94, 0x19, 0xd3, 0x14, 0xdb, 0x30, 0x31, 0x4d, 0x2f, 0x2d,
	0x50, 0x77, 0x01, 0xe2, 0x88, 0x87, 0x1e, 0xc1, 0x22, 0x75, 0xc6, 0xc4, 0xbd, 0xa4, 0x3c, 0xb2,
	0x96, 0x9b, 0x6b, 0xb1, 0xd6, 0xf6, 0xa5, 0x67, 0x53, 0xc7, 0x9d, 0xe8, 0x93, 0x33, 0x17, 0x87,
	0x30, 0xf5, 0x27, 0x50, 0x9f, 0x8a, 0x74, 0x68, 0x05, 0xe6, 0x45, 0x78, 0xcc, 0x6d, 0xe6, 0xef,
	0x57, 0xb1, 0xe8, 0xa0, 0x26, 0x14, 0x07, 0x81, 0x86, 0x46, 0x7e, 0x33, 0x3f, 0x43, 0x77, 0x84,
	0x53, 0x37, 0xa0, 0x14, 0xc5, 0x3e, 0x84, 0xa0, 0x70, 0x61, 0xd3, 0x73, 0xae, 0xb5, 0x84, 0x79,
	0x5b, 0xed, 0x42, 0x31, 0x0c, 0x6f, 0xb2, 0x71, 0xb4, 0x06, 0x0b, 0xee, 0xd9, 0x99, 0x4f, 0x28,
	0x37, 0x59, 0xc0, 0x41, 0x8f, 0xc9, 0x47, 0x64, 0x32, 0xa4, 0xe7, 0x3c, 0x84, 0x17, 0x70, 0xd0,
	0x53, 0xff, 0x98, 0x83, 0x55, 0xe9, 0x49, 0x42, 0x4f, 0xa0, 0x92, 0x38, 0x1d, 0x03, 0x6e, 0xa5,
	0xdc, 0x5c, 0x8d, 0xa7, 0x10, 0xef, 0xf9, 0x36, 0x2e, 0x47, 0x50, 0x7d, 0x80, 0x1e, 0xc2, 0x62,
	0xdf, 0x1d, 0x8f, 0xed, 0xc9, 0x20, 0xb8, 0x77, 0x52, 0x24, 0x3e, 0x20, 0x5c, 0x1a, 0xa0, 0xd0,
	0x63, 0x28, 0xc5, 0x8b, 0x2b, 0xae, 0x98, 0x75, 0x99, 0x1d, 0x46, 0x8a, 0x91, 0x6a, 0x0f, 0x96,
	0x25, 0xa1, 0xf3, 0xf5, 0x3f, 0x5c, 0x1d, 0xc2, 0xb2, 0x24, 0x52, 0xbe, 0x81, 0x27, 0xd6, 0x60,
	0xc1, 0x77, 0x86, 0x13, 0x7b, 0xc4, 0x1d, 0x31, 0x8f, 0x83, 0x9e, 0xfa, 0x23, 0x58, 0x95, 0x86,
	0xcb, 0x37, 0xf8, 0xf6, 0x3f, 0xe5, 0xe0, 0xed, 0x59, 0x21, 0xf1, 0xbf, 0x60, 0x3d, 0x7f, 0x99,
	0x87, 0x15, 0x59, 0x90, 0x45, 0x4f, 0x53, 0xb9, 0xcf, 0xf6, 0xad, 0xa3, 0x73, 0x32, 0x21, 0x9a,
	0x9e, 0xbe, 0x64, 0x26, 0xd7, 0x4c, 0xff, 0x09, 0xc0, 0x85, 0xe7, 0xf6, 0x89, 0xef, 0x5b, 0x8e,
	0x1b, 0x4c, 0x27, 0x93, 0x7f, 0x9d, 0x08, 0x84, 0xde, 0xc3, 0xa5, 0x00, 0xac, 0xbb, 0x5b, 0x8f,
	0xa1, 0xc0, 0xbe, 0x00, 0x95, 0x61, 0xf1, 0xb4, 0x7b, 0xd4, 0xed, 0x3d, 0xef, 0x2a, 0xff, 0x87,
	0x14, 0xa8, 0xec, 0xf5, 0xba, 0x66, 0x4b, 0xef, 0x6a, 0xd8, 0xd2, 0xdb, 0x4a, 0x0e, 0xd5, 0x00,
	0x4e, 0x70, 0x6f, 0x4f, 0x33, 0x0c, 0x4b, 0xef, 0x29, 0x79, 0xb6, 0x3b, 0xa4, 0x37, 0xc1, 0x1b,
	0xec, 0x8e, 0xbf, 0xe5, 0xa0, 0x3e, 0x75, 0x01, 0x7c, 0x9b, 0x1b, 0xe2, 0x11, 0x4b, 0xdd, 0x7c,
	0xf7, 0xd2, 0xeb, 0x13, 0xbf, 0x31, 0xb7, 0x39, 0x77, 0xbf, 0xdc, 0x44, 0x31, 0x05, 0x07, 0x43,
	0x38, 0x06, 0xa5, 0xb7, 0x50, 0xe1, 0xd6, 0x5b, 0x48, 0x87, 0x6a, 0xea, 0x62, 0x7a, 0x03, 0x97,
	0xd9, 0x50, 0x4d, 0x5d, 0x4c, 0xff, 0x81, 0x30, 0x70, 0x04, 0xf5, 0xa9, 0xeb, 0xea, 0xf5, 0x8d,
	0x6c, 0xfd, 0xb5, 0x20, 0xdb, 0x6d, 0x35, 0x80, 0x03, 0xcd, 0xb4, 0x0e, 0xb5, 0x56, 0xc7, 0x3c,
	0x54, 0x72, 0xa8, 0x0a, 0x25, 0xd6, 0xdf, 0xef, 0xb4, 0x0e, 0x0c, 0x25, 0x8f, 0xea, 0x50, 0x66,
	0xdd, 0x67, 0x1a, 0x36, 0xf4, 0x5e, 0x57, 0x99, 0x0b, 0x05, 0xc7, 0x9a, 0x89, 0xf5, 0x3d, 0x43,
	0x29, 0xa0, 0x55, 0x58, 0x62, 0x82, 0x4e, 0xef, 0xe0, 0x40, 0xef, 0x1e, 0x58, 0x1d, 0xed, 0x99,
	0xd6, 0x51, 0xe6, 0x99, 0xd8, 0xc8, 0x88, 0x17, 0x98, 0xb9, 0x8e, 0x6e, 0x98, 0xd6, 0xbe, 0xde,
	0xd1, 0x0c, 0x65, 0x91, 0x99, 0xc3, 0x5a, 0xab, 0xcd, 0xfb, 0x4a, 0x31, 0xb4, 0x6e, 0x98, 0x2d,
	0x53, 0x53, 0x4a, 0x08, 0x41, 0x8d, 0x75, 0xa3, 0xe3, 0x60, 0x28, 0x10, 0xca, 0xf6, 0x71, 0xeb,
	0x58, 0x7b, 0xde, 0xc3, 0x47, 0x86, 0x52, 0x46, 0x4b, 0x50, 0x65, 0x32, 0xed, 0xc7, 0xda, 0xde,
	0xa9, 0xd9, 0xc3, 0x86, 0x52, 0x09, 0x35, 0x99, 0x2d, 0xe3, 0xc8, 0x50, 0xaa, 0x61, 0xb7, 0x75,
	0xa0, 0x75, 0x4d, 0x65, 0x05, 0xa9, 0xb0, 0xc6, 0xba, 0x58, 0x33, 0x7a, 0xa7, 0x78, 0x4f, 0xb3,
	0x4e, 0x70, 0xef, 0x99, 0xde, 0x66, 0x06, 0x54, 0xb4, 0x01, 0xeb, 0x9d, 0xd6, 0x69, 0x77, 0xef,
	0xd0, 0xea, 0x6a, 0x86, 0xa9, 0xb5, 0x63, 0xf3, 0x4a, 0x4d, 0xcd, 0x17, 0x73, 0xe8, 0x1d, 0x58,
	0x7d, 0xde, 0xd2, 0xcd, 0xec, 0x70, 0x3d, 0x1c, 0x3e, 0xd2, 0x3b, 0x9d, 0xec, 0xb0, 0xc2, 0x87,
	0x37, 0x60, 0x1d, 0x6b, 0xc7, 0xbd, 0x67, 0x5a, 0x16, 0xb0, 0xca, 0x01, 0xf7, 0x60, 0xe3, 0x1a,
	0xfb, 0x96, 0xa1, 0x19, 0x7c, 0x19, 0x96, 0xd8, 0x04, 0x5a, 0xa6, 0xd9, 0xda, 0x3b, 0x4c, 0x8c,
	0xea, 0xdd, 0x93, 0x53, 0x53, 0x41, 0xe8, 0x2d, 0x58, 0xcf, 0x8c, 0xf5, 0x4e, 0x4d, 0x36, 0xb8,
	0x8c, 0x56, 0x40, 0x09, 0xb4, 0xc7, 0x76, 0xd7, 0x98, 0x53, 0xf9, 0x94, 0x62, 0xd9, 0x3a, 0x93,
	0xf1, 0x79, 0xc4, 0xb2, 0x06, 0x63, 0x07, 0x1f, 0x1f, 0x4b, 0xef, 0x6c, 0xfd, 0xe1, 0x5d, 0x96,
	0x74, 0xf8, 0x17, 0xee, 0xc4, 0x27, 0x68, 0x27, 0x15, 0x8b, 0x33, 0x05, 0x58, 0x88, 0x4b, 0x86,
	0xde, 0x16, 0xb0, 0xba, 0xd2, 0x3a, 0x27, 0xf6, 0x88, 0x9e, 0x07, 0x11, 0x63, 0xeb, 0x5a, 0xe2,
	0x01, 0xa1, 0x87, 0x1c, 0x89, 0x4b, 0xc3, 0xb0, 0x89, 0x76, 0x81, 0x75, 0xac, 0xb3, 0x91, 0x3d,
	0xf4, 0x83, 0x10, 0xfc, 0xee, 0x2c, 0x0d, 0xfb, 0x0c, 0x88, 0x8b, 0xc3, 0xa0, 0x85, 0xda, 0xa2,
	0x1c, 0xbe, 0x22, 0x1e, 0xaf, 0x2b, 0x44, 0x40, 0xb9, 0x37, 0x4b, 0xc3, 0x33, 0x01, 0xe5, 0x25,
	0x71, 0xd0, 0x0e, 0xb5, 0x84, 0x45, 0xf5, 0xfc, 0xcd, 0x5a, 0x64, 0x85, 0xb5, 0x09, 0x4b, 0xc3,
	0x4c, 0x61, 0xbd, 0x20, 0xaf, 0xde, 0x92, 0xba, 0xd2, 0xc5, 0xf5, 0x70, 0x2a, 0x07, 0x6d, 0xa5,
	0x8a, 0xeb, 0xc5, 0x1b, 0x9c, 0x2c, 0x2d, 0xb0, 0x77, 0x93, 0x05, 0x76, 0xf1, 0x06, 0x27, 0x4b,
	0x8a, 0xec, 0x60, 0x91, 0x7c, 0x6a, 0x53, 0x12, 0x94, 0x6e, 0x33, 0x17, 0xc9, 0x60, 0x40, 0xbe,
	0x48, 0xbc, 0x85, 0x8e, 0xa1, 0xc6, 0xf8, 0x51, 0x50, 0xf3, 0x83, 0x72, 0xec, 0x83, 0x59, 0x4a,
	0xa2, 0x78, 0xe8, 0xe3, 0xea, 0x30, 0xd9, 0x0d, 0xd5, 0x9d, 0x79, 0xf6, 0x98, 0xbc, 0x74, 0xbd,
	0x17, 0x7e, 0x50, 0x7b, 0xcd, 0x54, 0xb7, 0x1f, 0xa1, 0xb9, 0xba, 0xb8, 0x8b, 0x7e, 0x08, 0x4c,
	0x60, 0x91, 0xaf, 0x49, 0xff, 0x92, 0xba, 0x9e, 0x1f, 0x14, 0xc3, 0xef, 0xcf, 0xd2, 0xa6, 0x85,
	0x60, 0x5c, 0x19, 0x26, 0x7a, 0xa1, 0xa7, 0xa8, 0xed, 0xbf, 0xf0, 0x83, 0xa2, 0x6d, 0xa6, 0xa7,
	0x4c, 0x06, 0xe4, 0x9e, 0xe2, 0xad, 0x90, 0xcf, 0x81, 0x41, 0x69, 0x35, 0x93, 0xdf, 0x62, 0x12,
	0xce, 0xe7, 0x2d, 0xd4, 0x87, 0x35, 0xc6, 0x0f, 0xaf, 0x5b, 0xeb, 0xc2, 0x73, 0xaf, 0x9c, 0x01,
	0xf3, 0xf8, 0x12, 0x57, 0xf6, 0xf1, 0x2c, 0x65, 0xe1, 0x75, 0x7d, 0x12, 0x92, 0xf0, 0xca, 0x50,
	0x22, 0xbd, 0xfe, 0x2d, 0x44, 0x94, 0x95, 0x1f, 0x5d, 0x6b, 0x43, 0x92, 0xd4, 0xcb, 0xdf, 0x42,
	0x8e, 0x33, 0x15, 0xab, 0x72, 0xc3, 0x0a, 0xcf, 0xaa, 0x5a, 0xd5, 0xf7, 0xa1, 0x14, 0x05, 0x1f,
	0xd4, 0x80, 0x45, 0x11, 0xb0, 0x5e, 0xf1, 0x3b, 0xb8, 0x88, 0xc3, 0xae, 0xfa, 0x08, 0x8a, 0x61,
	0x84, 0x41, 0xef, 0xc1, 0xbc, 0x88, 0x49, 0x39, 0x9e, 0xd4, 0xd4, 0x62, 0xc3, 0x6c, 0x1c, 0x8b,
	0x41, 0x75, 0x9f, 0x97, 0x9c, 0x61, 0x14, 0x79, 0x02, 0x95, 0x20, 0x0e, 0x59, 0xce, 0xe4, 0xcc,
	0xcd, 0x5e, 0xf1, 0x01, 0x90, 0xe7, 0x36, 0xe5, 0xab, 0xb8, 0xa3, 0x3e, 0x49, 0x95, 0xae, 0x0f,
	0x60, 0x31, 0x8c, 0x44, 0xc2, 0xba, 0x12, 0xab, 0x10, 0x18, 0x1c, 0x02, 0xd4, 0xff, 0x87, 0xfa,
	0xc1, 0x6d, 0x8a, 0x56, 0x75, 0x37, 0x59, 0x80, 0xee, 0x00, 0xb0, 0x58, 0xc0, 0x3f, 0x33, 0x34,
	0x92, 0xc8, 0xdb, 0x18, 0x48, 0x24, 0x60, 0x67, 0x41, 0xcb, 0x57, 0x9b, 0xe9, 0xfa, 0xd4, 0x77,
	0x7e, 0x4e, 0xb8, 0x81, 0x02, 0xe6, 0x6d, 0x26, 0x1b, 0xd8, 0xd4, 0xe6, 0xd5, 0x69, 0x05, 0xf3,
	0x36, 0x4b, 0x4e, 0x8b, 0x61, 0x38, 0x48, 0x1f, 0x8d, 0xdc, 0x37, 0x3f, 0x1a, 0x99, 0x63, 0x9a,
	0x7f, 0xfd, 0x63, 0x9a, 0x8d, 0x20, 0x73, 0x6f, 0x10, 0x41, 0xd4, 0xbf, 0xcc, 0x41, 0x35, 0x15,
	0xb1, 0xd0, 0x09, 0x40, 0x22, 0xda, 0x09, 0x07, 0x3f, 0xba, 0x5d, 0xb4, 0x8b, 0x13, 0x41, 0x9c,
	0xd0, 0xa1, 0xfe, 0x33, 0x0f, 0xa5, 0x54, 0x36, 0x19, 0x7d, 0xbc, 0x34, 0x9b, 0x8c, 0xbe, 0x8e,
	0x65, 0x93, 0x11, 0x54, 0x67, 0x25, 0x5c, 0x39, 0x74, 0xa1, 0xa8, 0x96, 0x18, 0x71, 0x25, 0x26,
	0x86, 0x4e, 0xd2, 0xdb, 0x18, 0x42, 0xa0, 0x3e, 0x40, 0xf7, 0xa0, 0x1a, 0xd1, 0x26, 0xf6, 0x98,
	0x34, 0xe6, 0xf8, 0xdb, 0x44, 0x25, 0x14, 0x76, 0xed, 0x71, 0xb6, 0x14, 0x2b, 0xdc, 0x3a, 0x91,
	0x6e, 0x83, 0x92, 0x78, 0x24, 0xa4, 0x36, 0xbd, 0x0c, 0x6f, 0xe1, 0x3b, 0x12, 0xb6, 0xc1, 0x01,
	0xb8, 0xde, 0x4f, 0x0b, 0xd0, 0x31, 0x2c, 0x47, 0x91, 0x8f, 0x29, 0x71, 0x7c, 0xca, 0x0e, 0x91,
	0xb8, 0x82, 0xdf, 0xce, 0xd6, 0x25, 0x46, 0x84, 0xc1, 0xc8, 0xcb, 0xc8, 0xd4, 0xdf, 0xe4, 0xf9,
	0xb2, 0x26, 0xae, 0x8a, 0x13, 0x80, 0xc4, 0x9e, 0xb9, 0xc5, 0xb2, 0xc6, 0xdc, 0x78, 0x45, 0x70,
	0x42, 0x07, 0xea, 0xc3, 0x4a, 0xdf, 0x1d, 0x5f, 0x8c, 0x08, 0x8b, 0xa4, 0x09, 0xdd, 0xf9, 0xd7,
	0xd4, 0xbd, 0x1c, 0x69, 0x4b, 0xec, 0xcf, 0x23, 0x28, 0x45, 0x3d, 0xb4, 0x0b, 0xb5, 0xc4, 0xd6,
	0x89, 0xe3, 0xd4, 0xba, 0x6c, 0xf3, 0xb0, 0x20, 0x50, 0x3d, 0x4b, 0x76, 0xd5, 0x5f, 0xe5, 0xa1,
	0x92, 0x3c, 0x5a, 0xa8, 0x03, 0xa5, 0xf8, 0x50, 0x0a, 0x9f, 0x6c, 0xdf, 0xea, 0x50, 0x46, 0x7b,
	0x0d, 0xc7, 0x0a, 0x90, 0x05, 0xf1, 0x14, 0x52, 0x87, 0xfd, 0x75, 0xf4, 0xa2, 0x48, 0x55, 0x34,
	0xa8, 0x1e, 0x40, 0x31, 0xec, 0xa0, 0xcf, 0x13, 0xbb, 0x3a, 0xe1, 0x8a, 0x35, 0xc9, 0x71, 0x60,
	0x9e, 0x88, 0x76, 0x3b, 0x77, 0xc4, 0x6f, 0xf3, 0x3c, 0xba, 0x89, 0xe8, 0xf4, 0x09, 0x54, 0x2f,
	0xc8, 0x64, 0xc0, 0xf2, 0xbe, 0x30, 0xc2, 0x4d, 0xdd, 0x1b, 0x0c, 0x87, 0x2b, 0x01, 0x48, 0x90,
	0x76, 0xa0, 0xf2, 0xb3, 0x4b, 0x72, 0x49, 0x06, 0x01, 0x27, 0x2f, 0xe5, 0x94, 0x05, 0x46, 0x50,
	0x1e, 0x43, 0x4d, 0x3c, 0xef, 0x46, 0xa4, 0x39, 0x29, 0xa9, 0x1a, 0xa2, 0x04, 0xed, 0x7b, 0xa0,
	0x50, 0xe2, 0x8d, 0x9d, 0x89, 0x4d, 0x23, 0x62, 0x41, 0x4a, 0xac, 0xc7, 0x38, 0x41, 0xfd, 0x14,
	0xea, 0xf1, 0x82, 0x08, 0xe6, 0xbc, 0x94, 0x59, 0x8b, 0x60, 0x9c, 0xa8, 0xee, 0x72, 0xf7, 0x88,
	0xbc, 0xa4, 0x09, 0xc0, 0x17, 0x2c, 0xf4, 0x32, 0x3b, 0x90, 0xcb, 0x31, 0x9f, 0x83, 0xc4, 0x8d,
	0x63, 0x87, 0x4d, 0xf5, 0x1f, 0x39, 0x58, 0x91, 0x65, 0x25, 0x68, 0x0c, 0x48, 0x92, 0xe0, 0x08,
	0x87, 0xef, 0x7e, 0xa3, 0x04, 0x67, 0x7b, 0x5a, 0x82, 0x97, 0xbc, 0x69, 0x8c, 0x7a, 0x0e, 0xca,
	0x34, 0x0c, 0x99, 0xb0, 0x96, 0xf9, 0x84, 0xe4, 0x0e, 0xba, 0x9b, 0x0d, 0x36, 0x21, 0x97, 0x4f,
	0x73, 0xc5, 0x93, 0x48, 0xd5, 0x7f, 0xe5, 0xe4, 0x0f, 0x9f, 0x1b, 0x2c, 0x66, 0x3b, 0x34, 0x0c,
	0x8c, 0x39, 0xfe, 0xd6, 0x00, 0x4c, 0x14, 0x04, 0xbe, 0x0f, 0x61, 0x5e, 0x24, 0xe7, 0x79, 0x5e,
	0xbc, 0x2d, 0xa7, 0x57, 0x46, 0xa4, 0xe3, 0x02, 0x81, 0x3e, 0x81, 0x05, 0x8f, 0xd8, 0xbe, 0x3b,
	0xe1, 0x57, 0x5e, 0xad, 0xf9, 0x56, 0x16, 0x7b, 0xc9, 0xfc, 0xc2, 0x20, 0x38, 0x80, 0xa2, 0x2f,
	0x58, 0x0d, 0x32, 0x76, 0xa8, 0x78, 0xf3, 0x16, 0x45, 0xd6, 0xe6, 0xd4, 0xf2, 0x07, 0x13, 0xea,
	0x44, 0x38, 0x9c, 0xe0, 0xb0, 0xac, 0x6b, 0x4c, 0x7c, 0xdf, 0x1e, 0x8a, 0x3f, 0x7c, 0x25, 0x1c,
	0x76, 0xd5, 0xbf, 0xe7, 0xa6, 0x9f, 0x76, 0xfe, 0x97, 0xa7, 0xbb, 0xf5, 0xe7, 0xfc, 0xb7, 0xf9,
	0x9a, 0x93, 0x7e, 0xb6, 0x59, 0x48, 0x3f, 0xdb, 0x2c, 0xa6, 0x9f, 0x6d, 0x8a, 0x92, 0x67, 0x9b,
	0x92, 0xe4, 0xd9, 0x06, 0xb2, 0xcf, 0x36, 0xe5, 0xf4, 0xb3, 0x4d, 0x25, 0xfd, 0x6c, 0x53, 0x9b,
	0xf1, 0x6c, 0xa3, 0x5c, 0xff, 0x2a, 0x53, 0xe5, 0xaf, 0x2a, 0xd9, 0x17, 0x8e, 0xfa, 0xd6, 0xef,
	0xe6, 0xa1, 0x14, 0xbd, 0xcb, 0xa2, 0x66, 0xea, 0xe1, 0xe2, 0xee, 0xb5, 0x0f, 0xb8, 0xc9, 0x97,
	0x8b, 0x66, 0x94, 0xad, 0x4a, 0xff, 0x55, 0xc7, 0x9c, 0xb6, 0x4d, 0x6d, 0x91, 0xcd, 0xa2, 0xcf,
	0x61, 0x91, 0x25, 0x1c, 0x9e, 0x3b, 0xba, 0xee, 0xa1, 0x22, 0xa6, 0xed, 0x09, 0x20, 0x0e, 0x19,
	0xea, 0xaf, 0x73, 0x50, 0x60, 0xba, 0xd0, 0xa7, 0xa9, 0xaf, 0xbd, 0x37, 0xdb, 0x72, 0xf2, 0x93,
	0x51, 0xe2, 0x93, 0x83, 0x04, 0x7b, 0xeb, 0xbb, 0xb2, 0xbd, 0x54, 0x82, 0x79, 0xc3, 0x6c, 0xeb,
	0x5d, 0x25, 0x87, 0x00, 0x16, 0x0c, 0xb3, 0xdd, 0x3b, 0x35, 0x95, 0x7c, 0xd0, 0xd6, 0x30, 0x56,
	0xe6, 0xd4, 0xdf, 0xe7, 0x61, 0x31, 0xf8, 0x44, 0xf4, 0x59, 0xea, 0x83, 0x3e, 0xb8, 0x71, 0x4e,
	0xc9, 0x6f, 0xfa, 0x08, 0x8a, 0x94, 0xbe, 0x12, 0x81, 0x4f, 0xb8, 0x72, 0x29, 0x71, 0x4c, 0xcc,
	0x2f, 0x83, 0x1f, 0x6c, 0xf4, 0x15, 0x6b, 0x20, 0x1d, 0x4a, 0xe7, 0xc4, 0xf6, 0xe8, 0x57, 0xc4,
	0xa6, 0x81, 0x0b, 0xbf, 0x73, 0xb3, 0xb9, 0xc3, 0x90, 0x82, 0x63, 0xb6, 0xfa, 0x03, 0x28, 0x45,
	0x72, 0xd4, 0x84, 0xa2, 0x33, 0xa1, 0xc4, 0xbb, 0xb2, 0x47, 0x37, 0xfc, 0xeb, 0x8b, 0x70, 0x5b,
	0x8f, 0x64, 0x9e, 0xab, 0x40, 0xd1, 0x34, 0xbf, 0xb4, 0xf4, 0xee, 0x7e, 0x4f, 0x9c, 0xc1, 0x43,
	0xad, 0x85, 0xcd, 0xa7, 0x5a, 0xcb, 0x54, 0xf2, 0x5b, 0x0f, 0x64, 0x8c, 0x22, 0x14, 0xda, 0x2d,
	0xb3, 0xa5, 0xe4, 0x98, 0x98, 0x6d, 0x51, 0xdc, 0xeb, 0x28, 0xf9, 0xa7, 0xf7, 0xe0, 0x8e, 0xeb,
	0x0d, 0xb7, 0xed, 0x0b, 0xbb, 0x7f, 0x4e, 0xa6, 0xa6, 0xf8, 0x74, 0xe1, 0xc4, 0x73, 0xa9, 0xeb,
	0xff, 0x3b, 0x00, 0x00, 0xff, 0xff, 0xeb, 0xdd, 0x97, 0xe6, 0x35, 0x22, 0x00, 0x00,
}
